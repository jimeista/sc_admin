{"version":3,"sources":["features/admin/adminSlice.js","features/roadmap/roadmapSlice.js","features/roles/rolesSlice.js","features/users/usersSlice.js","components/SideNavMenu.js","components/MainContentWrapper.js","components/Home.js","components/ProtectedRoute.js","common/EditableCell.js","common/Table.js","common/Modal.js","modules/CIP/Leaders.js","components/SignIn.js","modules/Users/UserTable.js","modules/Users/Users.js","modules/Roles/RoleControllers.js","utils/table.js","modules/Roles/RoleTable.js","modules/Roles/Roles.js","modules/Roadmap/utils/yandex_helper.js","modules/Roadmap/common/YandexMap.js","modules/Roadmap/utils/usePrevious.js","modules/Roadmap/common/Steps.js","modules/Roadmap/common/Tabs.js","modules/Roadmap/utils/worklist_form.js","modules/Roadmap/components/WorkList/form/WorkDescription.js","modules/Roadmap/components/WorkList/form/WorkContractor.js","modules/Roadmap/components/WorkList/form/WorkStatus.js","modules/Roadmap/utils/helper.js","modules/Roadmap/components/WorkList/form/WorkConfirm.js","modules/Roadmap/components/WorkList/form/StepsWrapper.js","modules/Roadmap/components/WorkList/WorkListModal.js","modules/Roadmap/components/WorkList/WorkDetailsModal.js","modules/Roadmap/utils/table_helper.js","modules/Roadmap/components/WorkList/WorkListTable.js","modules/Roadmap/components/WorkList/index.js","modules/Roadmap/components/CrossList/form/AddCrossWorks.js","modules/Roadmap/components/CrossList/CrossListModal.js","modules/Roadmap/components/CrossList/CrossDetailsModal.js","modules/Roadmap/components/CrossList/CrossListTable.js","modules/Roadmap/components/CrossList/index.js","modules/Roadmap/components/RoadMap.js","modules/Roadmap/index.js","modules/CMD/context/main.js","modules/CMD/utils/api.js","modules/CMD/components/common/AdminButton.js","modules/CMD/components/common/AdminCard.js","modules/CMD/components/common/AdminIndicator.js","modules/CMD/utils/helper.js","modules/CMD/components/common/AdminInput.js","modules/CMD/components/common/AdminTabs.js","modules/CMD/components/IndicatorInfo/Controllers.js","modules/CMD/components/IndicatorInfo/IndicatorInfoTable.js","modules/CMD/components/IndicatorInfo/index.js","modules/CMD/components/common/AdminModal.js","modules/CMD/components/common/AdminSearch.js","modules/CMD/components/common/AdminSelect.js","modules/CMD/components/common/EditableCell.js","modules/CMD/components/common/AdminTable.js","modules/CMD/components/Dictionary/DictionaryTable.js","modules/CMD/components/Dictionary/Controllers.js","modules/CMD/components/Dictionary/index.js","modules/CMD/Dictionary.js","modules/CMD/components/Indicators/Controllers.js","modules/CMD/components/Indicators/index.js","modules/CMD/Indicator.js","modules/CMD/IndicatorInfo.js","Routes.js","App.js","index.js"],"names":["getCurrentUser","createAsyncThunk","data","a","axios","get","then","res","catch","err","console","log","adminSlice","createSlice","name","initialState","status","error","auth","reducers","extraReducers","pending","state","action","fulfilled","payload","failed","modules","BASE_ROADMAP_URL","fecthOrganizations","fecthRegions","fetchCategories","fetchRoadMap","fetchIntersections","postRoadMap","ob","post","geometries","coordinates","mapData","map","i","type","JSON","parse","config","id","postIntersections","initialPost","putRoadMap","reedit","put","delete","deleteRoadMap","dataId","roadmapSlice","organisations","regions","categories","formData","current","crossListMapData","editedId","deletedId","editedIntersectionId","deletedIntersectionId","intersections","formValidate","setCurrent","setMapData","setCrossListMapData","resetMapData","resetCrossListMapData","resetData","resetFormData","resetIntersectionsData","setEditedId","setDeletedId","rejected","category","find","region","organisation","succes","index","findIndex","filter","actions","setIntersection","getRoles","isAdmin","roles","forEach","repr","getModules","getRoleModules","role","url","postRoleModules","post_new_role_module","permitted_modules","record_new_role_module","putRoleModule","removed","length","added","deleteRoleModule","role_modules","resetRoles","resetModules","resetRoleModules","record","splice","getUsers","SubMenu","Menu","SideNavMenu","width","useState","collapsed","btnheight","setState","useEffect","disabled","menu","useMemo","sidenavmenu","key","submenu","icon","MailOutlined","ContainerOutlined","title","className","menuitems","menuitem","Item","FileOutlined","to","style","onClick","height","MenuUnfoldOutlined","defaultSelectedKeys","defaultOpenKeys","mode","inlineCollapsed","MainContentWrapper","children","QuestionOutlined","marginRight","margin","Home","window","innerWidth","setWidth","resizeListener","document","documentElement","clientWidth","body","addEventListener","removeEventListener","display","padding","ProtectedRoute","Component","component","rest","useSelector","admin","render","props","Object","keys","pathname","from","location","EditableCell","editing","dataIndex","placeholder","inputType","restProps","Option","Select","inputNode","allowClear","value","tagRender","label","closable","onClose","marginBottom","options","min","max","formatter","parser","replace","switchCase","rules","required","message","CustomTable","Form","useForm","form","editingKey","setEditingKey","arr","columns","align","_","isEditing","onSave","SaveOutlined","onConfirm","cancel","CloseOutlined","edit","EditOutlined","onDelete","DeleteOutlined","setFieldsValue","validateFields","row","newData","item","handleEdit","handleDelete","errInfo","mergedColumns","col","editable","onCell","components","cell","bordered","dataSource","rowClassName","pagination","onChange","loading","CustomModal","visible","showModal","handleOk","e","handleCancel","this","btntext","btnstyle","onOk","onCancel","React","Leaders","ФИО","Должность","Фото","setData","Аббревиатура","lead_data","setLeadData","cols","tags","tag","color","toUpperCase","SignIn","dispatch","useDispatch","username","exact","UserTable","withRouter","users","memo","onAdd","useCallback","ids","includes","resetFields","htmlType","setRoleColumns","module","setRoleDataSource","setOptions","renderGeoObjects","geo","geometry","fillColor","strokeColor","strokeWidth","editorDrawingCursor","editorMaxPoints","mapState","center","zoom","CustomYandexMap","roadmap","active","setActive","polygons","setPolygons","previousState","ref","useRef","usePrevious","geoObject","draw","instanceRef","createGeoObject","editor","startDrawing","events","add","originalEvent","newCoordinates","event","stopDrawing","geoObjects","justifyContent","alignItems","renderButtons","minWidth","minHeight","defaultState","Step","Steps","CustomSteps","steps","callback","validate","size","content","paddingLeft","CustomTabs","tabs","TabPane","Tabs","tab","child","TextArea","Input","renderTextArea","isOpen","valuePropName","hidden","getValueFromEvent","target","renderDatePicker","picker","handleChange","text","picker_","format","Group","compact","string","moment","marginLeft","checked","upload_props","listType","headers","authorization","info","file","fileList","success","WorkDescription","iscanvas","setCanvas","isclosured","setClosured","pickerStart","setPickerStart","pickerEnd","setPickerEnd","getFieldValue","prop","r","o","hasFeedback","op","renderSelects","noStyle","UploadOutlined","WorkContractor","phone","setPhone","country","WorkStatus","setDisabled","nameEnToRuWorkListHelper","prepareToShowDetailsObToArr","push","undefined","split","validateRoadWorkForm","percentage","is_hidden","is_canceled","commentary","setCoordinates","ii","y","x","k","WorkConfirm","renderForm","new_arr","StepsWrapper","setSteps","WorkListModal","setVisible","postFormData","footer","WorkDetailsModal","onCloseModal","putFormData","setFilterSelectsHelper","response","result","date_filters","reverse","WorkListTable","setRecord","setDataSource","filtered","setFiltered","filters","onFilter","indexOf","rule","sorter","b","sortDirections","setWorkListTableColumnsHelper","address","toLowerCase","toString","WorkList","AddCrossWorks","count","setCount","flexWrap","renderSelectsGroup","marginTop","shape","CrossListModal","values","area","CrossDetailsModal","array","setArray","substring","list","CrossListTable","just_id","setCrossListTableColumnsHelper","intersection","setCrossListDataSourceHelper","CrossList","RoadMap","AppContext","createContext","AppContextProvider","selectedValue","setSelectedValue","selectedDictionaryName","setSelectedDictionaryName","selectedIndustry","setSelectedIndustry","filteredData","setFilteredData","indicators","setIndicators","searchText","setSearchText","fetchedDictionaryData","setFetchedDictionaryData","fetchedIndicatorInfoData","setFetchedIndicatorInfoData","fetchedIndicatorData","setFetchedIndicatorData","fetchedIndicatorStrategyData","setFetchedIndicatorStrategyData","modalIndicator","setModalIndicator","Provider","dictionary_names","getAPI","postAPI","putAPI","deleteAPI","AdminButton","handleAdd","text2","text1","text3","handleClick","renderBTN","AdminCard","AdminIndicator","isLink","isStrategy","open","setOpen","useContext","names","sort","option_data","option","Отрасль","concat","obj","strcmp","Индикатор","option_name","charAt","slice","dictionaries","Тип","indicator","getObjectKeys","dictionary_name","save","data_post","obb","setFetchedData","AdminInput","defaultValue","inptRef","AdminTabs","defaultActiveKey","tabPosition","position","classname","Controllers","plan","date","alert","setStatus","dateString","year","locale","month","background","callBack","fact","planned","description","setTimeout","lang","today","now","ok","clear","yearFormat","dateFormat","dayFormat","dateTimeFormat","monthFormat","monthBeforeYear","timePickerLocale","weekFormat","IndicatorInfoTable","substr","План","comment","Факт","url2","IndicatorInfo","AdminModal","handleCloseModal","AdminSearch","input","AdminSelect","handleChangeDictionaryName","handleChangeOptionName","selected_value","setTreeData","treeData","AdminTable","some","isFilter","setIndicator","filterTitle","filterConfirm","filterReset","filterEmptyText","selectAll","selectInvert","selectionAll","sortTitle","expand","collapse","triggerDesc","triggerAsc","cancelSort","pageSizeOptions","showSizeChanger","items_per_page","DictionaryTable","All","ant_form","setIsError","inptRef2","Dictionary","CustomDictionary","inputRef","handleIndicator","selects","industry","select","renderSelect","typeId","Indicators","CustomIndicator","CustomIndicatorInfo","Routes","path","Roles","Users","Roadmap","App","store","configureStore","reducer","roadmapReducer","adminReducer","rolesReducer","usersReducer","ReactDOM","basename","getElementById"],"mappings":"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","file":"static/js/main.d6972aa7.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getCurrentUser = createAsyncThunk(\r\n  'admin/getCurrentUser',\r\n  async (data) => {\r\n    const url = '/sc-api-gateway/acl/users/current'\r\n    const res = await axios\r\n      .get(url)\r\n      .then((res) => res.data)\r\n      .catch((err) => console.log(err))\r\n\r\n    return res\r\n  }\r\n)\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'admin',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n    auth: {\r\n      data: {},\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    //fetch current user info\r\n    [getCurrentUser.pending]: (state, action) => {\r\n      state.auth.status = 'loading'\r\n    },\r\n    [getCurrentUser.fulfilled]: (state, action) => {\r\n      state.auth.status = 'success'\r\n      state.auth.data = action.payload\r\n    },\r\n    [getCurrentUser.failed]: (state, action) => {\r\n      state.modules.status = 'failed'\r\n      state.modules.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// export const {} = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst BASE_ORGANIZATIONS_URL = '/sc-roadworks/api/organisations'\r\nconst BASE_REGIONS_URL = '/sc-roadworks/api/regions'\r\nconst BASE_CATEGORIES_URL = '/sc-roadworks/api/categories'\r\nconst BASE_ROADMAP_URL = '/sc-roadworks/api/roadworks'\r\nconst BASE_INTERSECTIONS_URL = '/sc-roadworks/api/intersections'\r\n\r\nexport const fecthOrganizations = createAsyncThunk(\r\n  'roadmap/fetchOrganizations',\r\n  async () => {\r\n    const res = await axios.get(BASE_ORGANIZATIONS_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const fecthRegions = createAsyncThunk(\r\n  'roadmap/fetchRegions',\r\n  async () => {\r\n    const res = await axios.get(BASE_REGIONS_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const fetchCategories = createAsyncThunk(\r\n  'roadmap/fetchCategories',\r\n  async () => {\r\n    const res = await axios.get(BASE_CATEGORIES_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const fetchRoadMap = createAsyncThunk(\r\n  'roadmap/fetchRoadMap',\r\n  async () => {\r\n    const res = await axios.get(BASE_ROADMAP_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const fetchIntersections = createAsyncThunk(\r\n  'roadmap/fetchIntersections',\r\n  async () => {\r\n    const res = await axios.get(BASE_INTERSECTIONS_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const postRoadMap = createAsyncThunk(\r\n  'roadmap/postRoadMap',\r\n  async (ob) => {\r\n    const res = await axios.post(BASE_ROADMAP_URL, ob.data)\r\n    // console.log(res)\r\n    await axios.post(`/sc-roadworks/api/roadworks/${res.data}/geometries`, {\r\n      geometries: ob.geometries,\r\n    })\r\n\r\n    const coordinates = ob.mapData.map((i) => {\r\n      if (i.type === 'polyline') {\r\n        return i.coordinates\r\n      } else {\r\n        return i.coordinates[0]\r\n      }\r\n    })\r\n\r\n    return {\r\n      data: JSON.parse(res.config.data),\r\n      id: res.data,\r\n      geometries: {\r\n        type: 'polygon',\r\n        coordinates,\r\n      },\r\n    }\r\n  }\r\n)\r\n\r\nexport const postIntersections = createAsyncThunk(\r\n  'roadmap/postIntersections',\r\n  async (initialPost) => {\r\n    const res = await axios.post('/sc-roadworks/api/intersections', initialPost)\r\n    console.log(res)\r\n    return JSON.parse(res.config.data)\r\n  }\r\n)\r\n\r\nexport const putRoadMap = createAsyncThunk(\r\n  'roadmap/putRoadMap',\r\n  async (post) => {\r\n    if (post.reedit) {\r\n      await axios.put(`${BASE_ROADMAP_URL}/${post.id}`, {\r\n        ...post.data.data,\r\n        'status-form': post.data.data.status,\r\n      })\r\n\r\n      //delete geometries and post new coordinates\r\n      await axios.delete(`/sc-roadworks/api/roadworks/${post.id}/geometries`)\r\n      await axios.post(`/sc-roadworks/api/roadworks/${post.id}/geometries`, {\r\n        geometries: post.data.geometries,\r\n      })\r\n\r\n      const coordinates = post.mapData.map((i) => {\r\n        if (i.type === 'polyline') {\r\n          return i.coordinates\r\n        } else {\r\n          return i.coordinates[0]\r\n        }\r\n      })\r\n\r\n      return {\r\n        reedit: post.reedit,\r\n        data: post.data.data,\r\n        id: post.id,\r\n        geometries: {\r\n          type: 'polygon',\r\n          coordinates,\r\n        },\r\n      }\r\n    } else {\r\n      await axios.put(`${BASE_ROADMAP_URL}/${post.id}`, {\r\n        'status-form': post.data,\r\n      })\r\n\r\n      return post\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteRoadMap = createAsyncThunk(\r\n  'roadmap/deleteRoadMap',\r\n  async (dataId) => {\r\n    await axios.delete(`${BASE_ROADMAP_URL}/${dataId}`)\r\n    return { id: dataId }\r\n  }\r\n)\r\n\r\nexport const roadmapSlice = createSlice({\r\n  name: 'roadmap',\r\n  initialState: {\r\n    organisations: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    regions: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    categories: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n    formData: {},\r\n    current: 0,\r\n    mapData: [],\r\n    crossListMapData: [],\r\n    editedId: null,\r\n    deletedId: null,\r\n    editedIntersectionId: null,\r\n    deletedIntersectionId: null,\r\n    intersections: {\r\n      status: 'idle',\r\n      error: null,\r\n      data: [],\r\n    },\r\n  },\r\n  reducers: {\r\n    formValidate: (state, action) => {\r\n      state.formData = { ...state.formData, ...action.payload }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload\r\n    },\r\n    setMapData: (state, action) => {\r\n      state.mapData = [...state.mapData, ...action.payload]\r\n    },\r\n    setCrossListMapData: (state, action) => {\r\n      state.crossListMapData = [...state.crossListMapData, ...action.payload]\r\n    },\r\n    resetMapData: (state) => {\r\n      state.mapData = []\r\n    },\r\n    resetCrossListMapData: (state) => {\r\n      state.crossListMapData = []\r\n    },\r\n    resetData: (state) => {\r\n      state.data = []\r\n      state.status = 'idle'\r\n    },\r\n    resetFormData: (state) => {\r\n      state.formData = {}\r\n    },\r\n    resetIntersectionsData: (state) => {\r\n      state.intersections.data = []\r\n      state.intersections.status = 'idle'\r\n    },\r\n    setEditedId: (state) => {\r\n      state.editedId = null\r\n    },\r\n    setDeletedId: (state) => {\r\n      state.deletedId = null\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fecthOrganizations.fulfilled]: (state, action) => {\r\n      state.organisations.status = 'success'\r\n      state.organisations.data = action.payload\r\n    },\r\n    [fecthOrganizations.pending]: (state, action) => {\r\n      state.organisations.status = 'loading'\r\n    },\r\n    [fecthOrganizations.rejected]: (state, action) => {\r\n      state.organisations.status = 'failed'\r\n      state.organisations.error = action.payload\r\n    },\r\n    [fecthRegions.fulfilled]: (state, action) => {\r\n      state.regions.status = 'success'\r\n      state.regions.data = action.payload\r\n    },\r\n    [fecthRegions.pending]: (state, action) => {\r\n      state.regions.status = 'loading'\r\n    },\r\n    [fecthRegions.rejected]: (state, action) => {\r\n      state.regions.status = 'failed'\r\n      state.regions.error = action.payload\r\n    },\r\n    [fetchCategories.fulfilled]: (state, action) => {\r\n      state.categories.status = 'success'\r\n      state.categories.data = action.payload\r\n    },\r\n    [fetchCategories.pending]: (state, action) => {\r\n      state.categories.status = 'loading'\r\n    },\r\n    [fetchCategories.rejected]: (state, action) => {\r\n      state.categories.status = 'failed'\r\n      state.categories.error = action.payload\r\n    },\r\n    [fetchRoadMap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = action.payload\r\n    },\r\n    [fetchRoadMap.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [fetchRoadMap.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n    [fetchIntersections.fulfilled]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      state.intersections.data = action.payload\r\n    },\r\n    [fetchIntersections.pending]: (state, action) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [fetchIntersections.rejected]: (state, action) => {\r\n      state.intersections.status = 'failed'\r\n      state.intersections.error = action.payload\r\n    },\r\n    [postRoadMap.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [postRoadMap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      let ob = action.payload.data\r\n      const id = action.payload.id\r\n      const geometries = action.payload.geometries\r\n      const category = state.categories.data.find(\r\n        (i) => i.id === action.payload.data.category\r\n      ).name\r\n      const region = state.regions.data.find(\r\n        (i) => i.id === action.payload.data.region\r\n      ).name\r\n      const organisation = state.organisations.data.find(\r\n        (i) => i.id === action.payload.data.organisation\r\n      ).name\r\n      ob = { ...ob, category, region, organisation, id, geometries }\r\n      state.data = [ob, ...state.data]\r\n    },\r\n    [postIntersections.pending]: (state, action) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [postIntersections.succes]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      state.intersections.data = [action.payload, ...state.intersections.data]\r\n    },\r\n    [putRoadMap.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [putRoadMap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      // let data = state.data.find((i) => i.id === action.payload.id)\r\n      let index = state.data.findIndex((i) => i.id === action.payload.id)\r\n      state.editedId = action.payload.id\r\n\r\n      //ids to names\r\n      if (action.payload.reedit) {\r\n        console.log(action.payload, action.payload.data)\r\n        const category = state.categories.data.find(\r\n          (i) => i.id === action.payload.data.category\r\n        ).name\r\n        const region = state.regions.data.find(\r\n          (i) => i.id === action.payload.data.region\r\n        ).name\r\n        const organisation = state.organisations.data.find(\r\n          (i) => i.id === action.payload.data.organisation\r\n        ).name\r\n        state.data[index] = {\r\n          ...action.payload.data,\r\n          category,\r\n          region,\r\n          organisation,\r\n          id: action.payload.id,\r\n        }\r\n        state.data[index].geometries = action.payload.geometries\r\n      } else {\r\n        state.data[index].status = {\r\n          ...state.data[index].status,\r\n          ...action.payload.data,\r\n        }\r\n      }\r\n    },\r\n    [deleteRoadMap.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [deleteRoadMap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = state.data.filter((i) => i.id !== action.payload.id)\r\n      state.deletedId = action.payload.id\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  formValidate,\r\n  setCurrent,\r\n  setMapData,\r\n  setCrossListMapData,\r\n  setIntersection,\r\n  resetFormData,\r\n  setEditedId,\r\n  setDeletedId,\r\n  resetCrossListMapData,\r\n  resetMapData,\r\n  resetData,\r\n  resetIntersectionsData,\r\n} = roadmapSlice.actions\r\n\r\nexport const selectRoadMap = (state) => state.roadmap\r\n\r\nexport default roadmapSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getRoles = createAsyncThunk('admin/getRoles', async (auth) => {\r\n  const url = '/sc-api-gateway/acl/roles'\r\n  let isAdmin = false\r\n\r\n  //check if SUPER-ADMIN is loged to show super-admin role\r\n  auth.roles.forEach((name) => {\r\n    if (name === 'SUPER-ADMIN') {\r\n      isAdmin = true\r\n    }\r\n  })\r\n\r\n  //validate SUPER-ADMIN privileges\r\n  const res = await axios\r\n    .get(url)\r\n    .then((res) => {\r\n      if (!isAdmin) {\r\n        return res.data.filter((i) => i.repr !== 'Супер-Администратор')\r\n      }\r\n      return res.data\r\n    })\r\n    .catch((err) => console.log(err))\r\n\r\n  return res\r\n})\r\n\r\nexport const getModules = createAsyncThunk('admin/getModules', async (data) => {\r\n  const url = '/sc-api-gateway/acl/modules'\r\n  const res = await axios\r\n    .get(url)\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err))\r\n\r\n  return res\r\n})\r\n\r\nexport const getRoleModules = createAsyncThunk(\r\n  'admin/getRoleModules',\r\n  async (roles) => {\r\n    let modules = []\r\n    for (const role of roles) {\r\n      const url = `/sc-api-gateway/acl/roles/${role.id}/authorities`\r\n      let data = await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          // console.log(res.data)\r\n          return {\r\n            id: role.id,\r\n            repr: role.repr,\r\n            'permitted-modules': res.data,\r\n          }\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n      modules = [...modules, data]\r\n    }\r\n\r\n    return modules\r\n  }\r\n)\r\n\r\nexport const postRoleModules = createAsyncThunk(\r\n  'admin/postRoleModules',\r\n  async (data) => {\r\n    let id = await axios\r\n      .post('/sc-api-gateway/acl/roles', data.post_new_role_module)\r\n      .then((res) => res.data)\r\n\r\n    let permitted_modules = await axios\r\n      .get(`/sc-api-gateway/acl/roles/${id}/authorities`)\r\n      .then((res) => res.data)\r\n\r\n    return {\r\n      ...data.record_new_role_module,\r\n      id,\r\n      'permitted-modules': permitted_modules,\r\n    }\r\n  }\r\n)\r\n\r\nexport const putRoleModule = createAsyncThunk(\r\n  'admin/putRoleModule',\r\n  async (data) => {\r\n    //delete module authority\r\n    if (data.removed.length > 0) {\r\n      for (const id of data.removed) {\r\n        await axios.delete(`/sc-api-gateway/acl/authorities/${id}`)\r\n        // .then((res) => console.log('removed module authority', res))\r\n      }\r\n    }\r\n\r\n    //add new authority\r\n    if (data.added.length > 0) {\r\n      for (const id of data.added) {\r\n        await axios.post(`/sc-api-gateway/acl/roles/${data.id}/authorities`, {\r\n          'module-id': id,\r\n        })\r\n        // .then((res) => console.log('added', res))\r\n      }\r\n    }\r\n\r\n    //change role name\r\n    await axios.put(`/sc-api-gateway/acl/roles/${data.id}`, { repr: data.repr })\r\n\r\n    let permitted_modules = await axios\r\n      .get(`/sc-api-gateway/acl/roles/${data.id}/authorities`)\r\n      .then((res) => res.data)\r\n\r\n    return {\r\n      id: data.id,\r\n      repr: data.repr,\r\n      'permitted-modules': permitted_modules,\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteRoleModule = createAsyncThunk(\r\n  'admin/deleteRoleModule',\r\n  async (id) => {\r\n    axios.delete(`/sc-api-gateway/acl/roles/${id}`)\r\n    return id\r\n  }\r\n)\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'roles',\r\n  initialState: {\r\n    roles: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    modules: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    role_modules: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n  },\r\n  reducers: {\r\n    resetRoles: (state) => {\r\n      state.roles.status = 'idle'\r\n      state.roles.data = []\r\n    },\r\n    resetModules: (state) => {\r\n      state.modules.status = 'idle'\r\n      state.modules.data = []\r\n    },\r\n    resetRoleModules: (state) => {\r\n      state.role_modules.status = 'idle'\r\n      state.role_modules.data = []\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //fetch roles\r\n    [getRoles.pending]: (state, action) => {\r\n      state.roles.status = 'loading'\r\n    },\r\n    [getRoles.fulfilled]: (state, action) => {\r\n      state.roles.status = 'success'\r\n      state.roles.data = action.payload\r\n    },\r\n    [getRoles.failed]: (state, action) => {\r\n      state.roles.status = 'failed'\r\n      state.roles.error = action.payload\r\n    },\r\n\r\n    //fetch all available modules\r\n    [getModules.pending]: (state, action) => {\r\n      state.modules.status = 'loading'\r\n    },\r\n    [getModules.fulfilled]: (state, action) => {\r\n      state.modules.status = 'success'\r\n      state.modules.data = action.payload\r\n    },\r\n    [getModules.failed]: (state, action) => {\r\n      state.modules.status = 'failed'\r\n      state.modules.error = action.payload\r\n    },\r\n\r\n    //get all roles' modules\r\n    [getRoleModules.pending]: (state, action) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [getRoleModules.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = action.payload\r\n    },\r\n    [getRoleModules.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //post new role\r\n    [postRoleModules.pending]: (state, action) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [postRoleModules.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = [action.payload, ...state.role_modules.data]\r\n    },\r\n    [postRoleModules.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //update role module\r\n    [putRoleModule.pending]: (state, action) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [putRoleModule.fulfilled]: (state, action) => {\r\n      let record = action.payload\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = state.role_modules.data.map((i) =>\r\n        i.id === record.id ? record : i\r\n      )\r\n    },\r\n    [putRoleModule.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //delete role module\r\n    [deleteRoleModule.pending]: (state, action) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [deleteRoleModule.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      let index = state.role_modules.data.findIndex(\r\n        (i) => i.id === action.payload\r\n      )\r\n      state.role_modules.data.splice(index, 1)\r\n    },\r\n    [deleteRoleModule.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { resetRoles, resetModules, resetRoleModules } = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getUsers = createAsyncThunk('admin/getUsers', async () => {\r\n  const url = '/sc-api-gateway/acl/users'\r\n  let res = axios.get(url).then((res) => res.data)\r\n  return res\r\n})\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'roles',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle',\r\n    error: '',\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    //fetch roles\r\n    [getUsers.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [getUsers.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = action.payload\r\n    },\r\n    [getUsers.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {} = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Menu, Button } from 'antd'\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  // AppstoreOutlined,\r\n  // PieChartOutlined,\r\n  // DesktopOutlined,\r\n  ContainerOutlined,\r\n  MailOutlined,\r\n  FileOutlined,\r\n} from '@ant-design/icons'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nexport const SideNavMenu = ({ width }) => {\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n    btnheight: 50,\r\n  })\r\n\r\n  const toggleCollapsed = () => {\r\n    setState((state) => ({ ...state, collapsed: !state.collapsed }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    width < 600 &&\r\n      setState((state) => ({\r\n        ...state,\r\n        disabled: true,\r\n        collapsed: false,\r\n      }))\r\n  }, [width])\r\n\r\n  const menu = useMemo(() => {\r\n    return sidenavmenu.map((ob, index) => (\r\n      <SubMenu\r\n        key={ob.submenu}\r\n        icon={index % 2 === 0 ? <MailOutlined /> : <ContainerOutlined />}\r\n        title={ob.submenu}\r\n        className='SideNavMenu_style_sub_menu'\r\n      >\r\n        {ob.menuitems.map((menuitem) => (\r\n          <Menu.Item\r\n            key={menuitem}\r\n            icon={<FileOutlined />}\r\n            className='SideNavMenu_style_menu_item'\r\n          >\r\n            <Link to={`${menuitem}`}>{menuitem}</Link>\r\n          </Menu.Item>\r\n        ))}\r\n      </SubMenu>\r\n    ))\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      style={{ width: width < 600 ? '100%' : state.collapsed ? 80 : 350 }}\r\n      className='SideNavMenu_style'\r\n    >\r\n      <Button\r\n        type='primary'\r\n        onClick={toggleCollapsed}\r\n        style={{\r\n          height: state.btnheight,\r\n          width: '100%',\r\n        }}\r\n        className='SideNavMenu_style_button'\r\n      >\r\n        {width > 600 && state.collapsed ? (\r\n          <MenuUnfoldOutlined />\r\n        ) : (\r\n          'Панель администратора'\r\n        )}\r\n      </Button>\r\n      <Menu\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode='inline'\r\n        inlineCollapsed={width < 600 ? false : state.collapsed}\r\n        style={{ height: '100%' }}\r\n      >\r\n        {menu}\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst sidenavmenu = [\r\n  {\r\n    submenu: 'Управление мастер-данными',\r\n    menuitems: [\r\n      'Справочники',\r\n      'Аналитические индикаторы',\r\n      'Показатели индикаторов',\r\n      'Карта ремонтных работ',\r\n    ],\r\n  },\r\n  {\r\n    submenu: 'Управление информационной панелью',\r\n    // menuitems: ['Руководители', 'Инфопанели'],\r\n    menuitems: ['Руководители'],\r\n  },\r\n  // {\r\n  //   submenu: 'Управление открытыми данными',\r\n  //   menuitems: [],\r\n  // },\r\n  // {\r\n  //   submenu: 'Аудирование данных',\r\n  //   menuitems: ['Контроль', 'Аудит и сверка'],\r\n  // },\r\n  // {\r\n  //   submenu: 'Управление информационными данными',\r\n  //   menuitems: [],\r\n  // },\r\n  {\r\n    submenu: 'Управление пользователями',\r\n    menuitems: ['Роли', 'Пользователи'],\r\n  },\r\n]\r\n","import React from 'react'\r\n\r\nimport { Button } from 'antd'\r\nimport { QuestionOutlined } from '@ant-design/icons'\r\n\r\nexport const MainContentWrapper = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{ width: '100%', height: '100%' }}\r\n      className='MainContent_style'\r\n    >\r\n      <div className='header header-user-wrapper MainContent_style_header'>\r\n        <div className='MainContent_style_href'>\r\n          {/* <a href='#'>ru</a> | <a href='#'>kaz</a> */}\r\n        </div>\r\n        <div className='MainContent_style_header'>\r\n          <QuestionOutlined style={{ marginRight: '1rem' }} />\r\n          <span\r\n            style={{ margin: '0 1rem' }}\r\n            className='MainContent_style_header_fio'\r\n          >\r\n            ФИО/Организация\r\n          </span>\r\n          <Button className='MainContent_style_header_btn'>Выйти</Button>\r\n        </div>\r\n      </div>\r\n      <div className='main-content-wrapper MainContent_style_body'>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { SideNavMenu } from './SideNavMenu'\r\nimport { MainContentWrapper } from './MainContentWrapper'\r\n\r\nexport const Home = ({ children }) => {\r\n  let [width, setWidth] = useState(window.innerWidth)\r\n\r\n  const getWidth = () =>\r\n    window.innerWidth ||\r\n    document.documentElement.clientWidth ||\r\n    document.body.clientWidth\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      // change width from the state object\r\n      setWidth(getWidth())\r\n    }\r\n    // set resize listener\r\n    window.addEventListener('resize', resizeListener)\r\n\r\n    // clean up function\r\n    return () => {\r\n      // remove resize listener\r\n      window.removeEventListener('resize', resizeListener)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className='App Admin_main_style'\r\n      style={{ display: width < 600 ? 'block' : 'flex' }}\r\n    >\r\n      <SideNavMenu width={width} />\r\n      <MainContentWrapper>\r\n        <div\r\n          style={{ width: '100%', margin: '20px auto', padding: 5 }}\r\n          className='Admin_main_style_content'\r\n        >\r\n          {children}\r\n        </div>\r\n      </MainContentWrapper>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { Home } from './Home'\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { auth } = useSelector((state) => state.admin)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (Object.keys(auth.data).length > 0) {\r\n          return (\r\n            <Home>\r\n              <Component />\r\n            </Home>\r\n          )\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: '/авторизация', state: { from: props.location } }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Input, InputNumber, Form, Select, Tag } from 'antd'\r\n\r\nexport const EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  placeholder,\r\n  title,\r\n  data,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const { Option } = Select\r\n\r\n  const switchCase = (type) => {\r\n    switch (type) {\r\n      case 'select':\r\n        return (\r\n          <Select placeholder={placeholder} allowClear>\r\n            {data.map((role) => (\r\n              <Option key={`${role}- ${placeholder}`} value={role}>\r\n                {role}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        )\r\n\r\n      case 'multi-select':\r\n        function tagRender(props) {\r\n          const { label, closable, onClose } = props\r\n\r\n          return (\r\n            <Tag\r\n              closable={closable}\r\n              onClose={onClose}\r\n              style={{ marginRight: 3 }}\r\n            >\r\n              {label}\r\n            </Tag>\r\n          )\r\n        }\r\n        return (\r\n          <Select\r\n            placeholder='Модули'\r\n            mode='multiple'\r\n            tagRender={tagRender}\r\n            style={{ width: '100%', marginBottom: 15 }}\r\n            options={data}\r\n          />\r\n        )\r\n      case 'number':\r\n        return (\r\n          <InputNumber\r\n            min={0}\r\n            max={100}\r\n            formatter={(value) => `${value}%`}\r\n            parser={(value) => value.replace('%', '')}\r\n          />\r\n        )\r\n      default:\r\n        return (\r\n          <Input\r\n            className='Edit_input_style'\r\n            placeholder={placeholder}\r\n            allowClear\r\n          />\r\n        )\r\n    }\r\n  }\r\n\r\n  const inputNode = switchCase(inputType)\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, Popconfirm, Form, Space } from 'antd'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from '@ant-design/icons'\r\n\r\nimport { EditableCell } from './EditableCell'\r\n\r\nexport const CustomTable = (props) => {\r\n  const [form] = Form.useForm()\r\n  const [editingKey, setEditingKey] = useState('')\r\n\r\n  const arr = [\r\n    ...props.columns,\r\n    {\r\n      title: 'Действие',\r\n      dataIndex: '',\r\n      width: '5%',\r\n      align: 'center',\r\n      key: 'x',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record)\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              onClick={() => onSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              <SaveOutlined className='icon_edit_btn_style' title='Сохранить' />\r\n            </a>\r\n            <Popconfirm\r\n              title='Вы уверены что хотите оменить изменения?'\r\n              onConfirm={cancel}\r\n            >\r\n              <CloseOutlined className='icon_edit_btn_style' title='Отменить' />\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <Space>\r\n            <a\r\n              disabled={editingKey !== ''}\r\n              onClick={() => edit(record, form, setEditingKey)}\r\n            >\r\n              <EditOutlined\r\n                className='icon_edit_btn_style'\r\n                title='Редактировать'\r\n              />\r\n            </a>\r\n            <Popconfirm\r\n              title='Вы уверены что хотите удалить даныне?'\r\n              onConfirm={() => onDelete(record)}\r\n            >\r\n              <DeleteOutlined className='icon_edit_btn_style' title='Удалить' />\r\n            </Popconfirm>\r\n          </Space>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const isEditing = (record) => record.key === editingKey\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const onSave = async (key) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      const newData = [...props.data]\r\n      const index = newData.findIndex((item) => key === item.key)\r\n\r\n      const item = newData[index]\r\n      // newData.splice(index, 1, { ...item, ...row })\r\n      // props.setData(newData)\r\n      props.handleEdit({ ...item, ...row })\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  const onDelete = async (record) => {\r\n    try {\r\n      // let newData = [...props.data]\r\n      // props.setData(newData.filter((item) => item.key !== record.key))\r\n      props.handleDelete(record)\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  const mergedColumns = arr.map((col) => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.type,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        data: col.data,\r\n        placeholder: col.placeholder,\r\n        editing: isEditing(record),\r\n      }),\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={props.data}\r\n        columns={mergedColumns}\r\n        rowClassName='editable-row'\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n        loading={props.loading}\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Modal, Button } from 'antd'\r\n\r\nexport default class CustomModal extends React.Component {\r\n  state = { visible: false }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    })\r\n  }\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { btntext, btnstyle, title, children } = this.props\r\n    return (\r\n      <>\r\n        <Button type='primary' onClick={this.showModal} style={btnstyle}>\r\n          {btntext}\r\n        </Button>\r\n        <Modal\r\n          title={title}\r\n          width='50%'\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className='Leaders_style_modal'\r\n        >\r\n          {children}\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { Tag } from 'antd'\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport Modal from '../../common/Modal'\r\n\r\nexport const Leaders = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      key: '0',\r\n      '№': 1,\r\n      ФИО: 'Сагинтаев Бакытжан Абдирович',\r\n      Должность: 'Аким города',\r\n      'Курируемые организации': ['УЭиИР'],\r\n      Фото: 'фото1',\r\n    },\r\n    {\r\n      key: '1',\r\n      '№': 2,\r\n      ФИО: 'Кожагапанов Ерлан Тохтарханович',\r\n      Должность: 'Первый заместитель акима',\r\n      'Курируемые организации': ['УГПиУ', 'УЖП', 'УОК'],\r\n      Фото: 'фото2',\r\n    },\r\n    {\r\n      key: '2',\r\n      '№': 3,\r\n      ФИО: 'Бабакумаров Ержан Жолбакович',\r\n      Должность: 'Заместитель акима',\r\n      'Курируемые организации': ['УОЗ', 'УТ'],\r\n      Фото: 'фото3',\r\n    },\r\n    {\r\n      key: '3',\r\n      '№': 4,\r\n      ФИО: 'Бабакумаров Ержан Жолбакович',\r\n      Должность: 'Заместитель акима',\r\n      'Курируемые организации': ['УГА'],\r\n      Фото: 'фото4',\r\n    },\r\n    {\r\n      key: '4',\r\n      '№': 5,\r\n      ФИО: 'Бабакумаров Ержан Жолбакович',\r\n      Должность: 'Заместитель акима',\r\n      'Курируемые организации': ['УОР'],\r\n      Фото: 'фото5',\r\n    },\r\n    {\r\n      key: '5',\r\n      '№': 6,\r\n      ФИО: 'Бабакумаров Ержан Жолбакович',\r\n      Должность: 'Заместитель акима',\r\n      'Курируемые организации': ['УЗЭ', 'УГМ'],\r\n      Фото: 'фото6',\r\n    },\r\n    {\r\n      key: '6',\r\n      '№': 7,\r\n      ФИО: 'Бабакумаров Ержан Жолбакович',\r\n      Должность: 'Руководитель апарата акима',\r\n      'Курируемые организации': ['УПиИ'],\r\n      Фото: 'фото7',\r\n    },\r\n  ])\r\n  const [lead_data, setLeadData] = useState([\r\n    {\r\n      key: '0',\r\n      '№': 1,\r\n      Аббревиатура: 'УЭиИР',\r\n      'Курируемые организации':\r\n        'УЭиИР-Управление энергоэффективности и инфраструктурного развития',\r\n    },\r\n    {\r\n      key: '1',\r\n      '№': 2,\r\n      Аббревиатура: 'УЖП',\r\n      'Курируемые организации': 'УЖП-Управление жилищной политики',\r\n    },\r\n    {\r\n      key: '2',\r\n      '№': 3,\r\n      Аббревиатура: 'УГМ',\r\n      'Курируемые организации': 'УГМ-Управление городской мобильности',\r\n    },\r\n    {\r\n      key: '4',\r\n      '№': 4,\r\n      Аббревиатура: 'УЗЭ',\r\n      'Курируемые организации': 'УЗЭ-Управление зелёной экономики',\r\n    },\r\n  ])\r\n\r\n  return (\r\n    <div className='Leaders_style'>\r\n      <Modal\r\n        btntext='Редактировать курируемые организации'\r\n        btnstyle={{ marginBottom: 15 }}\r\n        title='Курируемые организации'\r\n\r\n\r\n      >\r\n        <Table columns={cols} data={lead_data} setData={setLeadData}  />\r\n      </Modal>\r\n      <Table columns={columns} data={data} setData={setData} />\r\n    </div>\r\n  )\r\n}\r\n\r\nconst options = [\r\n  {\r\n    label: 'УЭиИР-Управление энергоэффективности и инфраструктурного развития',\r\n    value: 'УЭиИР',\r\n  },\r\n  { label: 'УЖП-Управление жилищной политики', value: 'УЖП' },\r\n  { label: 'УГМ-Управление городской мобильности', value: 'УГМ' },\r\n  { label: 'УЗЭ-Управление зелёной экономики', value: 'УЗЭ' },\r\n  { label: 'УТ-Управление туризмая', value: 'УТ' },\r\n  {\r\n    label: 'УГПиУ-Управление городского планирования и урбанистики',\r\n    value: 'УГПиУ',\r\n  },\r\n  { label: 'УКГС-Управление комфортной городской среды', value: 'УКГС' },\r\n  { label: 'УЗО-Управление земельных отношений', value: 'УЗО' },\r\n  { label: 'УГК-Управление градостроительного контроля', value: 'УГК' },\r\n  { label: 'УПиИ-Управление предпринимательства и инвестиций', value: 'УПиИ' },\r\n  { label: 'УСБ-Управление социального благосостояния', value: 'УСБ' },\r\n  { label: 'УОР-Управление общественного развития', value: 'УОР' },\r\n  { label: 'УО-Управление образования', value: 'УO' },\r\n  { label: 'УК-Управление культуры', value: 'УK' },\r\n  { label: 'УС-Управление спорта', value: 'УC' },\r\n  { label: 'УОЗ-Управление общественного здоровья', value: 'УОЗ' },\r\n  { label: 'УСиБ-Управление стратегии и бюджета', value: 'УСиБ' },\r\n  { label: 'УГА-Управление государственных активов', value: 'УГА' },\r\n]\r\n\r\nconst columns = [\r\n  {\r\n    title: '№',\r\n    dataIndex: '№',\r\n    width: '5%',\r\n  },\r\n\r\n  {\r\n    title: 'Должность',\r\n    dataIndex: 'Должность',\r\n    width: '25%',\r\n  },\r\n  {\r\n    title: 'ФИО',\r\n    dataIndex: 'ФИО',\r\n    width: '30%',\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Курируемые организации',\r\n    dataIndex: 'Курируемые организации',\r\n    width: '35%',\r\n    type: 'multi-select',\r\n    editable: true,\r\n    data: options,\r\n    render: (tags) => (\r\n      <span>\r\n        {tags.map((tag) => {\r\n          let color = tag.length > 5 ? 'geekblue' : 'green'\r\n          if (tag === 'loser') {\r\n            color = 'volcano'\r\n          }\r\n          return (\r\n            <Tag color={color} key={tag} style={{ margin: '5px 5px' }}>\r\n              {tag.toUpperCase()}\r\n            </Tag>\r\n          )\r\n        })}\r\n      </span>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Фото',\r\n    dataIndex: 'Фото',\r\n    width: '10%',\r\n    editable: true,\r\n  },\r\n]\r\n\r\nconst cols = [\r\n  {\r\n    title: '№',\r\n    dataIndex: '№',\r\n    width: '5%',\r\n  },\r\n  {\r\n    title: 'Аббревиатура',\r\n    dataIndex: 'Аббревиатура',\r\n    width: '20%',\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Курируемые организации',\r\n    dataIndex: 'Курируемые организации',\r\n    width: '50%',\r\n    editable: true,\r\n  },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nimport { getCurrentUser } from '../features/admin/adminSlice'\r\n\r\nexport const SignIn = (props) => {\r\n  // console.log(props)\r\n  const dispatch = useDispatch()\r\n  const { auth } = useSelector((state) => state.admin)\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser())\r\n  }, [dispatch])\r\n\r\n  if (auth.data && auth.data.username) {\r\n    return (\r\n      <Route\r\n        render={() => (\r\n          <Redirect\r\n            exact\r\n            // to={props.history.location.state.pathname}\r\n            to={'/Карта ремонтных работ'}\r\n            from='/авторизация'\r\n          />\r\n        )}\r\n      />\r\n    )\r\n  }\r\n\r\n  return ''\r\n}\r\n","import React from 'react'\r\nimport { CustomTable as Table } from '../../common/Table'\r\n\r\nexport const UserTable = ({ data }) => {\r\n  return <Table columns={[]} data={[]} setData={() => {}} loading={true} />\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUsers } from '../../features/users/usersSlice'\r\nimport { UserTable } from './UserTable'\r\n\r\nconst Users = () => {\r\n  const { data } = useSelector((state) => state.users)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsers())\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <UserTable data={data} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Users)\r\n","import React, { useCallback } from 'react'\r\nimport { Form, Button, Select, Tag, Input } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { postRoleModules } from '../../features/roles/rolesSlice'\r\n\r\n//UI: render form controllers\r\nconst RoleControllers = ({ options }) => {\r\n  const [form] = Form.useForm()\r\n  const dispatch = useDispatch()\r\n  // const { modules } = useSelector((state) => state.admin)\r\n\r\n  // console.log('loading controllers', options)\r\n\r\n  //TASK: add new role's modules on put request (redux side)\r\n  const onAdd = useCallback(async () => {\r\n    try {\r\n      //extract form data to post\r\n      let row = await form.validateFields()\r\n\r\n      let ids = [] // request needs module's ids\r\n      let modules = [] //client side needs module names\r\n\r\n      //fill above looping through options modules\r\n      options.forEach((i) => {\r\n        if (row['permitted-modules'].includes(i.value)) {\r\n          ids = [...ids, i.id]\r\n          modules = [...modules, i.value]\r\n        }\r\n      })\r\n\r\n      let post_new_role_module = { ...row, 'permitted-modules': ids } // post object\r\n      dispatch(\r\n        postRoleModules({ post_new_role_module, record_new_role_module: row })\r\n      )\r\n\r\n      form.resetFields()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }, [form, options])\r\n\r\n  return (\r\n    <Form form={form} className=' Roles_create'>\r\n      <Form.Item\r\n        name='repr'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `Введите роль пользователя!`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder='Роли' allowClear style={{ width: '60%' }} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='permitted-modules'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `Выберите модули доступа пользователя!`,\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder='Модули'\r\n          mode='multiple'\r\n          tagRender={tagRender}\r\n          style={{ width: '60%' }}\r\n          options={options}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type='primary'\r\n          htmlType='submit'\r\n          className='standard_btn_admin'\r\n          onClick={onAdd}\r\n        >\r\n          Добавить\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default React.memo(RoleControllers)\r\n\r\nfunction tagRender(props) {\r\n  const { label, closable, onClose } = props\r\n\r\n  return (\r\n    <Tag closable={closable} onClose={onClose} style={{ marginRight: 3 }}>\r\n      {label}\r\n    </Tag>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tag } from 'antd'\r\n\r\nexport const setRoleColumns = (options) => {\r\n  return [\r\n    {\r\n      title: 'Роль',\r\n      dataIndex: 'repr',\r\n      width: '30%',\r\n      editable: true,\r\n      placeholder: 'Роли',\r\n    },\r\n    {\r\n      title: 'Модули',\r\n      dataIndex: 'permitted-modules',\r\n      type: 'multi-select',\r\n      editable: true,\r\n      data: options,\r\n      render: (modules) => {\r\n        return (\r\n          <span>\r\n            {modules.map((module) => {\r\n              let color = module.length > 5 ? 'geekblue' : 'blue'\r\n              return (\r\n                <Tag color={color} key={module} style={{ margin: '5px 5px' }}>\r\n                  {module.toUpperCase()}\r\n                </Tag>\r\n              )\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\nexport const setRoleDataSource = (data) => {\r\n  return data.map((i) => {\r\n    return {\r\n      key: i.id,\r\n      repr: i.repr,\r\n      'permitted-modules': i['permitted-modules'].map(\r\n        (i) => i['permitted-module']\r\n      ),\r\n      modules: i['permitted-modules'],\r\n    }\r\n  })\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport {\r\n  deleteRoleModule,\r\n  putRoleModule,\r\n} from '../../features/roles/rolesSlice'\r\nimport { setRoleColumns, setRoleDataSource } from '../../utils/table'\r\n\r\n//UI: render table\r\nconst RoleTable = ({ role_modules, options, modules }) => {\r\n  const dispatch = useDispatch()\r\n  const [data, setData] = useState([])\r\n\r\n  // console.log('data', data, 'role_modules', role_modules, 'options', options)\r\n\r\n  useEffect(() => {\r\n    //TASK: if role's modules are ready,show them on table\r\n    //LOGIC: set table datasource state\r\n    role_modules.status === 'success' &&\r\n      setData(setRoleDataSource(role_modules.data))\r\n  }, [role_modules])\r\n\r\n  const onEdit = (record) => {\r\n    //store newly added modules\r\n    let added = []\r\n    let arr = record.modules.map((i) => i['permitted-module']) //initial modules\r\n    added = record['permitted-modules'].filter((name) => !arr.includes(name))\r\n    added = modules.data.filter((i) => added.includes(i.name)).map((i) => i.id)\r\n\r\n    // //check if module is removed\r\n    let removed = [] //store removed modules\r\n    removed = record.modules\r\n      .filter(\r\n        (item) =>\r\n          !record['permitted-modules'].includes(item['permitted-module'])\r\n      )\r\n      .map((i) => i['authority-id'])\r\n\r\n    dispatch(\r\n      putRoleModule({\r\n        id: record.key,\r\n        removed,\r\n        added,\r\n        repr: record.repr,\r\n        'permitted-modules': record['permitted-modules'],\r\n      })\r\n    )\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    dispatch(deleteRoleModule(record.key))\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      columns={setRoleColumns(options)} //options as props to show available options on row edit\r\n      data={data}\r\n      setData={setData}\r\n      loading={role_modules.status !== 'success'}\r\n      handleDelete={onDelete}\r\n      handleEdit={onEdit}\r\n    />\r\n  )\r\n}\r\n\r\nexport default React.memo(RoleTable)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport {\r\n  getRoles,\r\n  getModules,\r\n  getRoleModules,\r\n  resetModules,\r\n  resetRoleModules,\r\n  resetRoles,\r\n} from '../../features/roles/rolesSlice'\r\n\r\nimport RoleControllers from './RoleControllers'\r\nimport RoleTable from './RoleTable'\r\n\r\n//main ROLES module\r\nconst Roles = () => {\r\n  const dispatch = useDispatch()\r\n  const { roles, modules, role_modules } = useSelector((state) => state.roles)\r\n  const { auth } = useSelector((state) => state.admin)\r\n\r\n  const [options, setOptions] = useState([])\r\n\r\n  useEffect(() => {\r\n    //TASK:request all available roles and modules for form options\r\n    dispatch(getRoles(auth.data))\r\n    dispatch(getModules())\r\n\r\n    return () => {\r\n      dispatch(resetRoles())\r\n      dispatch(resetModules())\r\n      dispatch(resetRoleModules())\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    //TASK: request all available role's modules\r\n    roles.status === 'success' && dispatch(getRoleModules(roles.data))\r\n\r\n    return () => dispatch(resetRoleModules())\r\n  }, [roles])\r\n\r\n  useEffect(() => {\r\n    //TASK: if modules are rdy, set options state\r\n    if (modules.status === 'success') {\r\n      let arr = modules.data.map((i) => ({ value: i.name, id: i.id }))\r\n      setOptions(arr)\r\n    }\r\n  }, [modules])\r\n\r\n  return (\r\n    <>\r\n      <RoleControllers options={options} />\r\n      <RoleTable\r\n        role_modules={role_modules}\r\n        options={options}\r\n        modules={modules}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Roles)\r\n","import React from 'react'\r\nimport { Placemark, Polygon, Polyline } from 'react-yandex-maps'\r\nimport { Button } from 'antd'\r\nimport { FaDrawPolygon } from 'react-icons/fa'\r\nimport { FcLineChart } from 'react-icons/fc'\r\n\r\nexport const renderGeoObjects = (mapData) => {\r\n  return mapData.map((geo, index) => {\r\n    switch (geo.type) {\r\n      case 'placemark':\r\n        return <Placemark key={index} geometry={geo.coordinates} />\r\n      case 'polyline':\r\n        return (\r\n          <Polyline\r\n            key={index}\r\n            geometry={geo.coordinates}\r\n            options={{\r\n              fillColor: '#00FF00',\r\n              strokeColor: '#0000FF',\r\n              strokeWidth: 5,\r\n            }}\r\n          />\r\n        )\r\n      case 'polygon':\r\n        return (\r\n          <Polygon\r\n            key={index}\r\n            geometry={geo.coordinates}\r\n            options={{\r\n              editorDrawingCursor: 'crosshair',\r\n              editorMaxPoints: 5,\r\n              fillColor: '#00FF00',\r\n              strokeColor: '#0000FF',\r\n              strokeWidth: 5,\r\n            }}\r\n          />\r\n        )\r\n      default:\r\n        return null\r\n    }\r\n  })\r\n}\r\n\r\nexport const renderButtons = (active, setActive) => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        type={active === 'polyline' && 'primary'}\r\n        onClick={() =>\r\n          active === 'polyline' ? setActive('') : setActive('polyline')\r\n        }\r\n        icon={<FcLineChart />}\r\n      />\r\n      <Button\r\n        type={active === 'polygon' && 'primary'}\r\n        style={{ margin: '0 10px' }}\r\n        icon={<FaDrawPolygon />}\r\n        onClick={() =>\r\n          active === 'polygon' ? setActive('') : setActive('polygon')\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createGeoObject = (active, draw) => {\r\n  const options = {\r\n    editorDrawingCursor: 'crosshair',\r\n    // editorMaxPoints: 10,\r\n    fillColor: '#00FF00',\r\n    strokeColor: '#0000FF',\r\n    strokeWidth: 5,\r\n  }\r\n\r\n  if (active === 'polygon') {\r\n    return (\r\n      <Polygon\r\n        instanceRef={(ref) => ref && draw(ref, active)}\r\n        geometry={[]}\r\n        options={{ ...options }}\r\n      />\r\n    )\r\n  }\r\n\r\n  if (active === 'polyline') {\r\n    return (\r\n      <Polyline\r\n        instanceRef={(ref) => ref && draw(ref, active)}\r\n        geometry={[]}\r\n        options={options}\r\n      />\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport { YMaps, Map } from 'react-yandex-maps'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button } from 'antd'\r\n\r\nimport {\r\n  resetMapData,\r\n  setMapData,\r\n} from '../../../features/roadmap/roadmapSlice'\r\nimport {\r\n  renderButtons,\r\n  renderGeoObjects,\r\n  createGeoObject,\r\n} from '../utils/yandex_helper'\r\nimport { usePrevious } from '../utils/usePrevious'\r\n\r\nconst mapState = {\r\n  center: [43.238949, 76.889709],\r\n  zoom: 10,\r\n}\r\n\r\nexport const CustomYandexMap = () => {\r\n  const { current, mapData, crossListMapData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  const [active, setActive] = useState('')\r\n  const [polygons, setPolygons] = useState([])\r\n  const previousState = usePrevious({ active, polygons })\r\n\r\n  useEffect(() => {\r\n    if (previousState && previousState.active !== active) {\r\n      if (polygons.length > 0 && previousState.polygons === polygons) {\r\n        dispatch(setMapData(polygons))\r\n        setPolygons([])\r\n      }\r\n    }\r\n  }, [active, polygons, previousState])\r\n\r\n  let geoObject = useMemo(() => {\r\n    const draw = async (ref, type) => {\r\n      ref.editor.startDrawing()\r\n\r\n      ref.geometry.events.add('change', (e) => {\r\n        setPolygons((state) => [\r\n          { type, coordinates: e.originalEvent.newCoordinates },\r\n        ])\r\n      })\r\n\r\n      ref.editor.events.add('onchange', (event) => {\r\n        ref.startDrawing()\r\n      })\r\n      ref.editor.events.add('drawingstop', (event) => {\r\n        ref.editor.stopDrawing()\r\n        setActive('')\r\n      })\r\n    }\r\n\r\n    return createGeoObject(active, draw)\r\n  }, [active])\r\n\r\n  let geoObjects = useMemo(() => {\r\n    if (crossListMapData.length > 0) {\r\n      return renderGeoObjects(crossListMapData)\r\n    }\r\n    return renderGeoObjects(mapData)\r\n  }, [mapData, crossListMapData])\r\n\r\n  const handleClearMap = () => {\r\n    dispatch(resetMapData())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {current === 0 && (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'center',\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          {renderButtons(active, setActive)}\r\n          <Button onClick={handleClearMap}>Очистить карту</Button>\r\n        </div>\r\n      )}\r\n      <YMaps style={{ minWidth: '100%' }}>\r\n        <Map\r\n          width='100%'\r\n          height='calc(100% - 50px)'\r\n          style={{ minHeight: '500px', minWidth: '100%' }}\r\n          defaultState={mapState}\r\n          modules={['geoObject.addon.editor']}\r\n        >\r\n          {current === 0 && geoObject}\r\n          {geoObjects}\r\n        </Map>\r\n      </YMaps>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = (value) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n\r\n  return ref.current\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { Steps, Button, Form } from 'antd'\r\nimport { CustomYandexMap as YandexMap } from './YandexMap'\r\n\r\nconst { Step } = Steps\r\n\r\nexport const CustomSteps = ({\r\n  steps,\r\n  dispatch,\r\n  current,\r\n  setCurrent,\r\n  formValidate,\r\n  form,\r\n  callback,\r\n}) => {\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [form])\r\n\r\n  const next = () => {\r\n    dispatch(setCurrent(current + 1))\r\n  }\r\n\r\n  const prev = () => {\r\n    dispatch(setCurrent((state) => state - 1))\r\n    dispatch(setCurrent(current - 1))\r\n  }\r\n\r\n  const validate = async () => {\r\n    try {\r\n      const data = await form.validateFields()\r\n\r\n      if (data['end-date'] || data['start-date']) {\r\n        data['end-date'] = data['end-date']['_i']\r\n        data['start-date'] = data['start-date']['_i']\r\n      }\r\n\r\n      dispatch(formValidate(data))\r\n\r\n      next()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Steps current={current} size='small'>\r\n        {steps.map((item) => (\r\n          <Step key={item.title} title={item.title} />\r\n        ))}\r\n      </Steps>\r\n      <div className='steps-content'>\r\n        <Form form={form} name='roadwork-form'>\r\n          <div style={{ width: '100%', display: 'flex' }}>\r\n            <div style={{ width: '50%' }}>{steps[current].content}</div>\r\n            <div style={{ width: '50%', paddingLeft: 10 }}>\r\n              <YandexMap />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <div className='steps-action'>\r\n        {current > 0 && (\r\n          <Button style={{ margin: '0 8px' }} onClick={prev}>\r\n            Назад\r\n          </Button>\r\n        )}\r\n        {current < steps.length - 1 && (\r\n          <Button type='primary' onClick={validate}>\r\n            Далее\r\n          </Button>\r\n        )}\r\n        {current === 3 && (\r\n          <Button key='submit' type='primary' onClick={() => callback()}>\r\n            Отправить\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Tabs } from 'antd'\r\n\r\nexport const CustomTabs = ({ tabs }) => {\r\n  const { TabPane } = Tabs\r\n\r\n  const renderTabs = () => {\r\n    return tabs ? (\r\n      <Tabs type='card' className='tabs'>\r\n        {tabs.map((i, index) => (\r\n          <TabPane tab={i.title} key={index}>\r\n            {i.child}\r\n          </TabPane>\r\n        ))}\r\n      </Tabs>\r\n    ) : (\r\n      'no tabs data to render'\r\n    )\r\n  }\r\n\r\n  return <div className='card-container'>{renderTabs()}</div>\r\n}\r\n\r\n//props stucture\r\n// const tabs = [\r\n//     {\r\n//         title: 'name',\r\n//         child: component\r\n//     }\r\n// ]\r\n","import React from 'react'\r\nimport {\r\n  Upload,\r\n  message,\r\n  Button,\r\n  Input,\r\n  Checkbox,\r\n  DatePicker,\r\n  Form,\r\n  Select,\r\n} from 'antd'\r\n// import { Collapse } from 'react-collapse'\r\n\r\nimport { UploadOutlined } from '@ant-design/icons'\r\nimport moment from 'moment'\r\n\r\nconst { TextArea } = Input\r\nconst { Option } = Select\r\n\r\nexport const renderSelects = (prop) => {\r\n  const { regions, organisations, categories } = prop\r\n  const arr = [\r\n    {\r\n      name: 'category',\r\n      placeholder: 'Категоря работ',\r\n      options:\r\n        categories.status === 'success'\r\n          ? categories.data.map((r) => r.name)\r\n          : [],\r\n    },\r\n    {\r\n      name: 'organisation',\r\n      placeholder: 'Ответсвенный орган',\r\n      options:\r\n        organisations.status === 'success'\r\n          ? organisations.data.map((o) => o.name)\r\n          : [],\r\n    },\r\n    {\r\n      name: 'region',\r\n      placeholder: 'Район',\r\n      options:\r\n        regions.status === 'success' ? regions.data.map((r) => r.name) : [],\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div\r\n    // style={{\r\n    //   display: 'flex',\r\n    //   flexWrap: 'wrap',\r\n    //   justifyContent: 'space-between',\r\n    //   margin: '15px 0',\r\n    // }}\r\n    >\r\n      {arr.map((i, index) => (\r\n        <Form.Item\r\n          name={i.name}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          key={`${i.name}${index}`}\r\n          hasFeedback\r\n        >\r\n          <Select placeholder={i.placeholder} style={{ width: 300 }} allowClear>\r\n            {i.options.map((op) => (\r\n              <Option value={op} key={op}>\r\n                {op}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const renderTextArea = (name, placeholder, isOpen) => {\r\n  return (\r\n    <Form.Item>\r\n      <Form.Item\r\n        name={name}\r\n        valuePropName={'value'}\r\n        hidden={name !== 'area' && !isOpen}\r\n        getValueFromEvent={(e) => e.target.value}\r\n      >\r\n        <TextArea style={{ height: 70 }} placeholder={placeholder} allowClear />\r\n      </Form.Item>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport const renderDatePicker = (picker, handleChange, name, text) => {\r\n  const picker_ = picker ? (\r\n    <DatePicker\r\n      placeholder='Выбрать год'\r\n      allowClear={false}\r\n      picker={'year'}\r\n      format={'YYYY'}\r\n    />\r\n  ) : (\r\n    <DatePicker placeholder='Выбрать дату' allowClear={false} />\r\n  )\r\n\r\n  return (\r\n    <Form.Item label={text}>\r\n      <Input.Group compact>\r\n        <Form.Item\r\n          name={name}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          getValueFromEvent={(e, string) => {\r\n            return moment(string, 'YYYY-MM-DD')\r\n          }}\r\n        >\r\n          {picker_}\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={`is-${name}`}\r\n          style={{ marginLeft: 10 }}\r\n          valuePropName={'checked'}\r\n          getValueFromEvent={(e) => e.target.checked}\r\n        >\r\n          <Checkbox onChange={handleChange}>Год</Checkbox>\r\n        </Form.Item>\r\n      </Input.Group>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport const renderUpload = () => (\r\n  <Form.Item\r\n    name='file-paths'\r\n    valuePropName='fileList'\r\n    // getValueFromEvent={normFile}\r\n  >\r\n    <Upload {...upload_props}>\r\n      <Button icon={<UploadOutlined />}>Добавить рисунок / презентацию</Button>\r\n    </Upload>\r\n  </Form.Item>\r\n)\r\n\r\nexport const upload_props = {\r\n  name: 'file',\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  listType: 'picture',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList)\r\n    }\r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} успешно загружен`)\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`Ошибка загрузки файла ${info.file.name}`)\r\n    }\r\n  },\r\n}\r\n\r\nconst normFile = (e) => {\r\n  console.log('Upload event:', e)\r\n\r\n  if (Array.isArray(e)) {\r\n    return e\r\n  }\r\n\r\n  return e && e.fileList\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Input, Checkbox, Form, DatePicker } from 'antd'\r\n\r\nimport {\r\n  renderDatePicker,\r\n  renderSelects,\r\n  renderTextArea,\r\n  renderUpload,\r\n} from '../../../utils/worklist_form'\r\n\r\nexport const WorkDescription = (props) => {\r\n  const { organisations, regions, categories, form } = props\r\n  const [iscanvas, setCanvas] = useState(false)\r\n  const [isclosured, setClosured] = useState(false)\r\n\r\n  // const [type, setType] = useState('date')\r\n  //checkbox on datepicker\r\n  const [pickerStart, setPickerStart] = useState(false)\r\n  const [pickerEnd, setPickerEnd] = useState(false)\r\n\r\n  useEffect(() => {\r\n    form.getFieldValue('is-canvas-opened') &&\r\n      setCanvas(form.getFieldValue('is-canvas-opened'))\r\n    form.getFieldValue('is-closured') &&\r\n      setClosured(form.getFieldValue('is-closured'))\r\n    form.getFieldValue('is-start-date') &&\r\n      setPickerStart(form.getFieldValue('is-start-date') ? true : false)\r\n    form.getFieldValue('is-end-date') &&\r\n      setPickerEnd(form.getFieldValue('is-end-date' ? true : false))\r\n\r\n    return () => {\r\n      setCanvas(false)\r\n      setClosured(false)\r\n    }\r\n  }, [form])\r\n\r\n  //checkbox on datepicker\r\n  const handleChangeYearStart = (e) =>\r\n    setPickerStart(e.target.checked ? true : false)\r\n\r\n  const handleChangeYearEnd = (e) =>\r\n    setPickerEnd(e.target.checked ? true : false)\r\n\r\n  return (\r\n    <>\r\n      {/* <Checkbox onChange={(e) => setType(e.target.checked ? 'year' : 'date')} />\r\n      {<PickerWithType type={type} />} */}\r\n      {renderSelects({ regions, organisations, categories })}\r\n      <Form.Item name='address'>\r\n        <Input placeholder='Адрес/Улица' />\r\n      </Form.Item>\r\n      {renderTextArea('area', 'Описание участка', true)}\r\n      <Form.Item\r\n        name={'is-closured'}\r\n        noStyle\r\n        valuePropName={'checked'}\r\n        getValueFromEvent={(e) => e.target.checked}\r\n      >\r\n        <Checkbox onChange={() => setClosured((state) => !state)}>\r\n          Перекрытие улиц{' '}\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {renderTextArea('closure-description', 'Описание перекрытия', isclosured)}\r\n      <Form.Item name={'is-canvas-opened'} noStyle valuePropName={'checked'}>\r\n        <Checkbox onChange={() => setCanvas((state) => !state)}>\r\n          Вскрытие дорожного полотна{' '}\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {renderTextArea('canvas-description', 'Описание вскрытия', iscanvas)}\r\n      {renderDatePicker(\r\n        pickerStart,\r\n        handleChangeYearStart,\r\n        'start-date',\r\n        'Дата начала'\r\n      )}\r\n      {renderDatePicker(\r\n        pickerEnd,\r\n        handleChangeYearEnd,\r\n        'end-date',\r\n        'Дата окончания'\r\n      )}\r\n      {renderUpload()}\r\n    </>\r\n  )\r\n}\r\nfunction PickerWithType({ type }) {\r\n  if (type === 'date') return <DatePicker />\r\n  return <DatePicker picker={type} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\nimport { Input, Form } from 'antd'\r\n\r\n// const { TextArea } = Input\r\n\r\nexport const WorkContractor = () => {\r\n  const [phone, setPhone] = useState()\r\n  return (\r\n    <>\r\n      <Form.Item name='lot-name'>\r\n        <Input placeholder='Наименование проекта (№ лота)' />\r\n      </Form.Item>\r\n      <Form.Item name='company-name'>\r\n        <Input placeholder='Наименование компании' />\r\n      </Form.Item>\r\n      <Form.Item name='supervisor-name'>\r\n        <Input placeholder='ФИО руководителя' />\r\n      </Form.Item>\r\n      <Form.Item name='contacts'>\r\n        <PhoneInput\r\n          country={'kz'}\r\n          value={phone}\r\n          onChange={(phone) => setPhone({ phone })}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item name='warranty-period'>\r\n        <Input placeholder='Гарантийный период' />\r\n      </Form.Item>\r\n      {/* <Form.Item\r\n        name='contractor-comment-textarea'\r\n        rules={[{ required: true }]}\r\n      >\r\n        <TextArea style={{ height: 90 }} placeholder='Комментарий' />\r\n      </Form.Item> */}\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { Input, Checkbox, Form, InputNumber } from 'antd'\r\n\r\nconst { TextArea } = Input\r\n\r\nexport const WorkStatus = () => {\r\n  const [disabled, setDisabled] = useState(true)\r\n  const hanldeChange = (e) =>\r\n    e.target.checked ? setDisabled(false) : setDisabled(true)\r\n\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        name='percentage'\r\n        rules={[{ required: true, message: 'Заполните поле' }]}\r\n        label={'Статус исполнения (%)'}\r\n      >\r\n        <InputNumber\r\n          style={{ width: '120px' }}\r\n          min={0}\r\n          max={100}\r\n          formatter={(value) => `${value}%`}\r\n          parser={(value) => value.replace('%', '')}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='commentary'>\r\n        <TextArea style={{ height: 90 }} placeholder='Комментарий' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='is-hidden'\r\n        valuePropName='checked'\r\n        getValueFromEvent={(e) => e.target.checked}\r\n      >\r\n        <Checkbox> Скрыть работу с карты</Checkbox>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='is-canceled'\r\n        valuePropName='checked'\r\n        getValueFromEvent={(e) => e.target.checked}\r\n        noStyle\r\n      >\r\n        <Checkbox onChange={hanldeChange}>\r\n          Закуп работ отменен / приостановлен\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {/* <Form.Item name='canceled-comment'>\r\n        <TextArea\r\n          style={{ height: 90 }}\r\n          placeholder='Комментарий'\r\n          disabled={disabled}\r\n        />\r\n      </Form.Item> */}\r\n    </>\r\n  )\r\n}\r\n","//translate server variables' naming to show on client\r\nexport const nameEnToRuWorkListHelper = (name) => {\r\n  switch (name) {\r\n    case 'area':\r\n      return 'Участок'\r\n    case 'address':\r\n      return 'Адрес/улица'\r\n    case 'contractor':\r\n      return 'Подрядчик'\r\n    case 'category':\r\n      return 'Категоря работ'\r\n    case 'end-date':\r\n      return 'Дата окончания'\r\n    case 'is-end-date':\r\n      return 'Дата окончания отмечено'\r\n    case 'start-date':\r\n      return 'Дата начала'\r\n    case 'is-start-date':\r\n      return 'Дата начало отмечено'\r\n    case 'closure-description':\r\n      return 'Описание перекрытия'\r\n    case 'is-closured':\r\n      return 'Описание перекрытия отмечено'\r\n    case 'organisation':\r\n      return 'Ответсвенный орган'\r\n    case 'file-paths':\r\n      return 'Файл'\r\n    case 'lot-name':\r\n      return 'Лот'\r\n    case 'percentage':\r\n      return 'Статус исполнения (%)'\r\n    case 'region':\r\n      return 'Район'\r\n    case 'supervisor-name':\r\n      return 'ФИО руководителя'\r\n    case 'contacts':\r\n      return 'Контакты'\r\n    case 'warranty-period':\r\n      return 'Гарантийный период'\r\n    case 'canvas-description':\r\n      return 'Описание вскрытия'\r\n    case 'is-canvas-opened':\r\n      return 'Описание вскрытия отмечено'\r\n    case 'company-name':\r\n      return 'Наименование компании'\r\n    case 'canceled-comment':\r\n      return 'Комментарий закупа отмены'\r\n    case 'percentage-comment':\r\n      return 'Комментарий статуса %'\r\n    case 'is-hidden':\r\n      return 'Статус скрыт'\r\n    case 'is-canceled':\r\n      return 'Статус приостановлен'\r\n    case 'commentary':\r\n      return 'Статус комментария'\r\n    default:\r\n      return name\r\n  }\r\n}\r\n\r\n//validate antd form before post|put requests\r\nexport const prepareToShowDetailsObToArr = (ob) => {\r\n  const arr = []\r\n\r\n  Object.keys(ob).map((key) => {\r\n    if (\r\n      typeof ob[key] !== 'undefined' &&\r\n      typeof ob[key] !== 'object' &&\r\n      key !== 'is-start-date' &&\r\n      key !== 'is-end-date' &&\r\n      key !== 'key' &&\r\n      key !== 'id'\r\n    ) {\r\n      arr.push({ name: key, value: ob[key] })\r\n    } else if (ob[key] === undefined && key.split('-')[0] === 'is') {\r\n      arr.push({ name: key, value: false })\r\n    } else if (ob[key] === undefined) {\r\n      arr.push({ name: key, value: null })\r\n    }\r\n  })\r\n\r\n  return arr\r\n}\r\n\r\n//configure client to server data format\r\nexport const validateRoadWorkForm = (\r\n  data,\r\n  categories,\r\n  organisations,\r\n  regions\r\n) => {\r\n  let ob = {}\r\n  let is_hidden = false\r\n  let is_canceled = false\r\n  let commentary = null\r\n  let percentage\r\n\r\n  data.forEach((item) => {\r\n    if (\r\n      item.name !== 'is-hidden' ||\r\n      item.name !== 'is-canceled' ||\r\n      item.name !== 'commentary' ||\r\n      item.name !== 'percentage' ||\r\n      item.name !== 'is-end-date' ||\r\n      item.name !== 'is-start-date'\r\n    ) {\r\n      //save status values\r\n      if (item.name === 'percentage') {\r\n        percentage = item.value\r\n      }\r\n      if (item.name === 'is-canceled') {\r\n        is_canceled = item.value\r\n      }\r\n      if (item.name === 'is-hidden') {\r\n        is_hidden = item.value\r\n      }\r\n      if (item.name === 'commentary') {\r\n        commentary = item.value\r\n      }\r\n\r\n      if (item.name === 'end-date' || item.name === 'start-date') {\r\n        item.value.length > 4\r\n          ? (ob = { ...ob, [item.name]: item.value })\r\n          : (ob = { ...ob, [item.name]: `${item.value}-01-01` })\r\n      }\r\n      //find id for item.names\r\n      else if (item.name === 'category') {\r\n        const id = categories.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else if (item.name === 'organisation') {\r\n        const id = organisations.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else if (item.name === 'region') {\r\n        const id = regions.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else {\r\n        ob = { ...ob, [item.name]: item.value }\r\n      }\r\n    }\r\n  })\r\n\r\n  ob = {\r\n    ...ob,\r\n    status: {\r\n      percentage: percentage,\r\n      'is-hidden': is_hidden,\r\n      'is-canceled': is_canceled,\r\n      commentary: commentary,\r\n    },\r\n  }\r\n\r\n  return ob\r\n}\r\n\r\n//\r\nexport const setCoordinates = (data) => {\r\n  return data.map((i) => {\r\n    let arr = []\r\n    if (i.type === 'polyline') {\r\n      arr = i.coordinates.map((ii) => ({ y: ii[1], x: ii[0] }))\r\n    } else if (i.type === 'polygon') {\r\n      arr = i.coordinates[0].map((k) => ({ y: k[1], x: k[0] }))\r\n    } else {\r\n      arr = [{ y: i.coordinates[1], x: i.coordinates[0] }]\r\n    }\r\n    return arr\r\n  })\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Form } from 'antd'\r\n\r\nimport {\r\n  nameEnToRuWorkListHelper,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../../utils/helper'\r\n\r\nexport const WorkConfirm = ({ ob }) => {\r\n  const arr = useMemo(() => {\r\n    let new_arr = prepareToShowDetailsObToArr(ob)\r\n    new_arr = new_arr.filter(\r\n      (i) => typeof i.value !== 'object' && typeof i.value !== 'boolean'\r\n    )\r\n    return new_arr\r\n  }, [ob])\r\n\r\n  const renderForm = arr.map((i) => (\r\n    <Form.Item\r\n      key={i.name}\r\n      label={\r\n        <span style={{ color: '#92B4A7' }}>\r\n          {nameEnToRuWorkListHelper(i.name)}\r\n        </span>\r\n      }\r\n    >\r\n      {i.value}\r\n    </Form.Item>\r\n  ))\r\n  return <>{renderForm}</>\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport moment from 'moment'\r\n\r\nimport {\r\n  setCurrent,\r\n  formValidate,\r\n} from '../../../../../features/roadmap/roadmapSlice'\r\n\r\nimport {\r\n  WorkDescription,\r\n  WorkContractor,\r\n  WorkStatus,\r\n  WorkConfirm,\r\n} from './index'\r\nimport { CustomSteps as Steps } from '../../../common'\r\n\r\nconst format = 'YYYY/MM/DD'\r\n\r\nexport const StepsWrapper = ({ form, callback, record }) => {\r\n  const { current, organisations, regions, categories, formData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const steps = setSteps(\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    formData,\r\n    form,\r\n    dispatch\r\n  )\r\n\r\n  useEffect(() => {\r\n    record &&\r\n      form.setFieldsValue({\r\n        ...record,\r\n        'start-date': moment(record['start-date'], format),\r\n        'end-date': moment(record['end-date'], format),\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Steps\r\n      steps={steps}\r\n      current={current}\r\n      setCurrent={setCurrent}\r\n      formValidate={formValidate}\r\n      dispatch={dispatch}\r\n      form={form}\r\n      callback={callback}\r\n    />\r\n  )\r\n}\r\n\r\nconst setSteps = (\r\n  organisations,\r\n  regions,\r\n  categories,\r\n  formData,\r\n  form,\r\n  dispatch\r\n) => [\r\n  {\r\n    title: 'Описание работ',\r\n    content: (\r\n      <WorkDescription\r\n        organisations={organisations}\r\n        regions={regions}\r\n        categories={categories}\r\n        form={form}\r\n        dispatch={dispatch}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: 'Данные подрядчика',\r\n    content: <WorkContractor />,\r\n  },\r\n  {\r\n    title: 'Статус работ',\r\n    content: <WorkStatus />,\r\n  },\r\n  {\r\n    title: 'Отправка данных',\r\n    content: <WorkConfirm ob={formData} />,\r\n  },\r\n]\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Button, Modal, Form } from 'antd'\r\n\r\nimport { StepsWrapper as Steps } from './form/StepsWrapper'\r\n\r\nimport {\r\n  setCurrent,\r\n  postRoadMap,\r\n  resetMapData,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\nimport {\r\n  validateRoadWorkForm,\r\n  setCoordinates,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../utils/helper'\r\n\r\nexport const WorkListModal = () => {\r\n  const [visible, setVisible] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    formData,\r\n    status,\r\n    mapData,\r\n  } = useSelector((state) => state.roadmap)\r\n  const [form] = Form.useForm()\r\n\r\n  const postFormData = useCallback(async () => {\r\n    try {\r\n      let arr = prepareToShowDetailsObToArr(formData)\r\n      let ob = validateRoadWorkForm(arr, categories, organisations, regions)\r\n\r\n      const coordinates = setCoordinates(mapData)\r\n\r\n      ob = { data: ob, geometries: coordinates, mapData }\r\n      // console.log(ob)\r\n\r\n      dispatch(postRoadMap(ob))\r\n      dispatch(setCurrent(0))\r\n      dispatch(resetMapData())\r\n\r\n      status === 'success' && setVisible(false)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }, [categories, formData, dispatch, mapData, organisations, status, regions])\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type='primary'\r\n        onClick={() => {\r\n          dispatch(setCurrent(0))\r\n          setVisible(true)\r\n        }}\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        Добавить\r\n      </Button>\r\n      {status === 'success' && (\r\n        <Modal\r\n          title='Форма ввода данных по ремонтным работам'\r\n          visible={visible}\r\n          onOk={() => {\r\n            dispatch(setCurrent(0))\r\n            setVisible(false)\r\n          }}\r\n          onCancel={() => {\r\n            dispatch(setCurrent(0))\r\n            setVisible(false)\r\n            dispatch(resetMapData())\r\n            form.resetFields()\r\n          }}\r\n          width={'80%'}\r\n          footer={null}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Steps form={form} callback={postFormData} />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Form } from 'antd'\r\n\r\nimport { StepsWrapper as Steps } from './form/StepsWrapper'\r\nimport {\r\n  resetFormData,\r\n  resetMapData,\r\n  setCurrent,\r\n  putRoadMap,\r\n  setMapData,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\nimport {\r\n  validateRoadWorkForm,\r\n  setCoordinates,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../utils/helper'\r\n\r\nexport const WorkDetailsModal = (props) => {\r\n  const { visible, setVisible, record } = props\r\n  const [form] = Form.useForm()\r\n\r\n  const {\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    status,\r\n    mapData,\r\n    formData,\r\n  } = useSelector((state) => state.roadmap)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    let coordinates = record.geometries.coordinates\r\n\r\n    if (coordinates.length > 0) {\r\n      let arr = coordinates.map((i) => {\r\n        if (i[0][0] == i[i.length - 1][0]) {\r\n          return { type: 'polygon', coordinates: [i] }\r\n        }\r\n\r\n        return { type: 'polyline', coordinates: i }\r\n      })\r\n\r\n      dispatch(setMapData(arr))\r\n    }\r\n\r\n    return () => {\r\n      dispatch(resetMapData())\r\n      dispatch(resetFormData({}))\r\n      form.setFieldsValue({})\r\n    }\r\n  }, [])\r\n\r\n  // console.log('loaded')\r\n  const onCloseModal = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  const putFormData = useCallback(async () => {\r\n    try {\r\n      let arr = prepareToShowDetailsObToArr(formData)\r\n      let ob = validateRoadWorkForm(arr, categories, organisations, regions)\r\n      const coordinates = setCoordinates(mapData)\r\n\r\n      // console.log(coordinates)\r\n      ob = { data: ob, geometries: coordinates }\r\n\r\n      dispatch(setCurrent(0))\r\n      dispatch(putRoadMap({ reedit: true, data: ob, id: record.id, mapData }))\r\n      form.resetFields()\r\n\r\n      status === 'success' && setVisible(false)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }, [\r\n    categories,\r\n    organisations,\r\n    regions,\r\n    mapData,\r\n    formData,\r\n    form,\r\n    record,\r\n    setVisible,\r\n    status,\r\n  ])\r\n\r\n  return (\r\n    <Modal\r\n      title='Детали улицы'\r\n      visible={visible}\r\n      width={'50%'}\r\n      onCancel={onCloseModal}\r\n      onOk={onCloseModal}\r\n      footer={[]}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Steps form={form} callback={putFormData} record={record} />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const setFilterSelectsHelper = (response) => {\r\n  let ob = {}\r\n  let result = []\r\n  if (response.status === 'success') {\r\n    const data = response.data\r\n    for (let i = 0; i < data.length; i++) {\r\n      ob = { ...ob, [data[i].name]: data[i].name }\r\n    }\r\n    result = Object.keys(ob).map((key) => ({ text: key, value: key }))\r\n  }\r\n  return result\r\n}\r\n\r\nexport const setWorkListDataSourceHelper = (arr) => {\r\n  const dataSource = arr.map((i) => {\r\n    let keys = { key: i.id }\r\n    Object.keys(i).forEach((key) => {\r\n      if (key === 'status') {\r\n        keys = {\r\n          ...keys,\r\n          percentage: i[key].percentage,\r\n          'is-hidden': i[key]['is-hidden'],\r\n          'is-canceled': i[key]['is-canceled'],\r\n          commentary: i[key]['commentary'],\r\n        }\r\n      } else {\r\n        keys = { ...keys, [key]: i[key] }\r\n      }\r\n    })\r\n    return keys\r\n  })\r\n\r\n  return dataSource\r\n}\r\n\r\nexport const setCrossListDataSourceHelper = (data, intersections) => {\r\n  let dataSource = []\r\n  if (intersections.status === 'success') {\r\n    dataSource = intersections.data.map((i, index) => {\r\n      let ob = {\r\n        '№': index + 1,\r\n        key: index + 1,\r\n        address: i['intersection-area'],\r\n        coordinates: i.intersection.coordinates,\r\n      }\r\n\r\n      i['roadwork-ids'].forEach((id, key) => {\r\n        let item = data.find((i) => i.id === id)\r\n        ob = {\r\n          ...ob,\r\n          category: item ? item.category : '',\r\n          [`Работа ${key + 1}`]: id,\r\n        }\r\n      })\r\n\r\n      return ob\r\n    })\r\n  }\r\n\r\n  // const dataSource = data.map((i, index) => {\r\n  //   let keys = { '№': index + 1, key: index + 1 }\r\n  //   Object.keys(i).forEach((key) => {\r\n  //     keys = { ...keys, [key]: i[key] }\r\n  //   })\r\n  //   return keys\r\n  // })\r\n\r\n  return dataSource\r\n}\r\n\r\nexport const setWorkListTableColumnsHelper = (\r\n  organisations,\r\n  categories,\r\n  setVisible,\r\n  setRecord\r\n) => [\r\n  {\r\n    title: '№',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n    width: '2%',\r\n    align: 'center',\r\n    render: (text, record) => (\r\n      <a\r\n        onClick={() => {\r\n          setRecord(record)\r\n          setVisible(true)\r\n        }}\r\n      >\r\n        {text}\r\n      </a>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Улица',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n    render: (text, record) => <>{text}</>,\r\n  },\r\n  {\r\n    title: 'Участок',\r\n    dataIndex: 'area',\r\n    key: 'area',\r\n  },\r\n  {\r\n    title: 'Категория работ',\r\n    dataIndex: 'category',\r\n    key: 'category',\r\n    filters: setFilterSelectsHelper(categories),\r\n    onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Отв орган',\r\n    dataIndex: 'organisation',\r\n    key: 'organisation',\r\n    filters: setFilterSelectsHelper(organisations),\r\n    onFilter: (value, record) => record.organisation.indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Дата начала',\r\n    dataIndex: 'start-date',\r\n    key: 'start-date',\r\n    width: '10%',\r\n    align: 'center',\r\n    filters: date_filters,\r\n    onFilter: (value, record) => record['start-date'].indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Дата окончания',\r\n    dataIndex: 'end-date',\r\n    key: 'end-date',\r\n    width: '10%',\r\n    align: 'center',\r\n    filters: date_filters,\r\n    onFilter: (value, record) => record['end-date'].indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Статус (%)',\r\n    dataIndex: 'percentage',\r\n    key: 'percentage',\r\n    editable: true,\r\n    width: '5%',\r\n    rule: true,\r\n    type: 'number',\r\n    align: 'center',\r\n    sorter: (a, b) => b.percentage - a.percentage,\r\n    sortDirections: ['ascend'],\r\n  },\r\n]\r\n\r\nexport const setCrossListTableColumnsHelper = (\r\n  setVisible,\r\n  setRecord,\r\n  intersections,\r\n  categories\r\n) => {\r\n  let arr = []\r\n\r\n  if (intersections.status === 'success') {\r\n    let count = 0\r\n    intersections.data.forEach((i) => {\r\n      if (i['roadwork-ids'].length > count) {\r\n        count = i['roadwork-ids'].length\r\n      }\r\n    })\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      arr = [\r\n        ...arr,\r\n        {\r\n          title: `Работа ${i + 1}`,\r\n          dataIndex: `Работа ${i + 1}`,\r\n          key: `Работа ${i + 1}`,\r\n          width: '10%',\r\n          align: 'center',\r\n        },\r\n      ]\r\n    }\r\n  }\r\n\r\n  const cols = [\r\n    {\r\n      title: '№',\r\n      dataIndex: '№',\r\n      key: '№',\r\n      width: '2%',\r\n      align: 'center',\r\n      render: (text, record) => {\r\n        return (\r\n          <a\r\n            onClick={() => {\r\n              setRecord(record)\r\n              setVisible(true)\r\n            }}\r\n          >\r\n            {text}\r\n          </a>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: 'Улица',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Категория работ',\r\n      dataIndex: 'category',\r\n      width: '30%',\r\n      key: 'category',\r\n      filters: setFilterSelectsHelper(categories),\r\n      onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n    },\r\n  ]\r\n\r\n  return [...cols, ...arr]\r\n}\r\n\r\n//hardcoded date filters on year\r\nconst date_filters = ['2018', '2019', '2020', '2021', '2022']\r\n  .map((value) => ({\r\n    value,\r\n    text: value,\r\n  }))\r\n  .reverse()\r\n\r\n// //hardcoded date filters on year v2.0\r\n// const year = [2018, 2019, 2020, 2021, 2022]\r\n// const month = [\r\n//   'Январь',\r\n//   'Февраль',\r\n//   'Март',\r\n//   'Апрель',\r\n//   'Май',\r\n//   'Июнь',\r\n//   'Июль',\r\n//   'Август',\r\n//   'Сентябрь',\r\n//   'Октябрь',\r\n//   'Ноябрь',\r\n//   'Декабрь',\r\n// ]\r\n\r\n// const date_filters = [\r\n//   {\r\n//     value: 'year',\r\n//     text: 'year',\r\n//     children: year.map((value) => ({ value, text: value })),\r\n//   },\r\n//   {\r\n//     value: 'month',\r\n//     text: 'month',\r\n//     children: month.map((value) => ({ value, text: value })),\r\n//   },\r\n// ]\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Input } from 'antd'\r\n\r\nimport { WorkDetailsModal } from './WorkDetailsModal'\r\nimport { CustomTable as Table } from '../../../../common/Table'\r\nimport {\r\n  setWorkListTableColumnsHelper,\r\n  setWorkListDataSourceHelper,\r\n} from '../../utils/table_helper'\r\nimport {\r\n  deleteRoadMap,\r\n  putRoadMap,\r\n  setEditedId,\r\n  setDeletedId,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nexport const WorkListTable = () => {\r\n  const {\r\n    organisations,\r\n    categories,\r\n    status,\r\n    data,\r\n    editedId,\r\n    deletedId,\r\n  } = useSelector((state) => state.roadmap)\r\n  const dispatch = useDispatch()\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [record, setRecord] = useState({})\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [filtered, setFiltered] = useState()\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const columns = useMemo(() => {\r\n    //TASK: set table columns labeling and operations\r\n    //LOGIC:pass filters' options and track popup visible state user click on id\r\n    //set row records on click\r\n    return setWorkListTableColumnsHelper(\r\n      organisations,\r\n      categories,\r\n      setVisible,\r\n      setRecord\r\n    )\r\n  }, [organisations, categories, setVisible, setRecord])\r\n\r\n  useEffect(() => {\r\n    //TASK:show changes made on filtered table's row after put || delete requests\r\n    //LOGIC:check if user still remains on filtered data\r\n    //if so, update filtered state data and set id null on redux store for further checkups\r\n    if (filtered) {\r\n      if (editedId) {\r\n        let item = dataSource.find((i) => i.id === editedId)\r\n        setFiltered((state) => state.map((i) => (i.id === editedId ? item : i)))\r\n        dispatch(setEditedId())\r\n      }\r\n      if (deletedId) {\r\n        setFiltered((state) => state.filter((i) => i.id !== deletedId))\r\n        dispatch(setDeletedId())\r\n      }\r\n    }\r\n  }, [dataSource, deletedId, editedId, filtered])\r\n\r\n  useMemo(() => {\r\n    // TASK: set table data\r\n    //LOGIC: pass data to adjust data to ant table's dataSource format\r\n    setDataSource(setWorkListDataSourceHelper(data))\r\n  }, [data])\r\n\r\n  const onEdit = (record) => {\r\n    //TASK: edit record\r\n    //LOGIC: request edit on redux side\r\n    dispatch(\r\n      putRoadMap({\r\n        reedit: false,\r\n        data: {\r\n          percentage: record.percentage,\r\n        },\r\n        id: record.id,\r\n      })\r\n    )\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    //TASK: delete record\r\n    //LOGIC: request delete on redux side\r\n    dispatch(deleteRoadMap(record.id))\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    setFiltered(\r\n      dataSource.filter((i) => {\r\n        if (\r\n          i.address &&\r\n          i.address.toLowerCase().includes(e.target.value.toLowerCase())\r\n        ) {\r\n          return true\r\n        }\r\n\r\n        return i.id.toString().includes(e.target.value.toLowerCase())\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item name={'search'}>\r\n        <Input\r\n          allowClear\r\n          placeholder={'Поиск по улице'}\r\n          onChange={onSearch}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='table'>\r\n        <Table\r\n          columns={columns}\r\n          data={filtered ? filtered : dataSource}\r\n          setData={setDataSource}\r\n          handleEdit={onEdit}\r\n          handleDelete={onDelete}\r\n          loading={status === 'loading' ? true : false}\r\n        />\r\n      </Form.Item>\r\n      {visible && (\r\n        <Form.Item name='modal'>\r\n          <WorkDetailsModal\r\n            visible={visible}\r\n            setVisible={setVisible}\r\n            record={record}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  fecthOrganizations,\r\n  fetchCategories,\r\n  fecthRegions,\r\n  fetchRoadMap,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { WorkListModal as Modal } from './WorkListModal'\r\nimport { WorkListTable as Table } from './WorkListTable'\r\n\r\nexport const WorkList = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fecthOrganizations())\r\n    dispatch(fecthRegions())\r\n    dispatch(fetchCategories())\r\n    dispatch(fetchRoadMap())\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <Table />\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Select, Form, Button, Input } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCrossListMapData } from '../../../../../features/roadmap/roadmapSlice'\r\n\r\nconst { Option } = Select\r\n\r\nexport const AddCrossWorks = () => {\r\n  const { categories, data } = useSelector((state) => state.roadmap)\r\n  const [count, setCount] = useState([1, 2])\r\n  const [options, setOptions] = useState()\r\n  const dispatch = useDispatch()\r\n\r\n  const renderSelectsGroup = (key) => {\r\n    let arr =\r\n      categories.status === 'success' ? categories.data.map((r) => r.name) : []\r\n\r\n    const onChangeWorkId = (id) =>\r\n      dispatch(\r\n        setCrossListMapData([\r\n          {\r\n            type: 'polygon',\r\n            coordinates: data.find((i) => i.id === id).geometries.coordinates,\r\n          },\r\n        ])\r\n      )\r\n\r\n    const onChangeCategory = (value) =>\r\n      setOptions((state) => ({\r\n        ...state,\r\n        [key]: data.filter((i) => i.category === value).map((i) => i.id),\r\n      }))\r\n\r\n    return (\r\n      <Form.Item style={{ marginRight: 20 }}>\r\n        <Form.Item\r\n          name={`category-${key}`}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n        >\r\n          <Select\r\n            placeholder={'Категория работ'}\r\n            style={{ width: 240 }}\r\n            allowClear\r\n            onChange={onChangeCategory}\r\n          >\r\n            {arr.map((i, index) => (\r\n              <Option value={i} key={i}>\r\n                {i}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        {options && options[key] && (\r\n          <Form.Item\r\n            name={`roadwork-${key}`}\r\n            rules={[{ required: true, message: 'Заполните поле' }]}\r\n            key={`roadwork-${key}`}\r\n          >\r\n            <Select\r\n              placeholder={`Работа ${key}`}\r\n              style={{ width: 240 }}\r\n              allowClear\r\n              onChange={onChangeWorkId}\r\n            >\r\n              {options[key].map((i, index) => (\r\n                <Option value={i} key={i}>\r\n                  {i}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n      </Form.Item>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n        }}\r\n      >\r\n        {count.map((i) => renderSelectsGroup(i))}\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginTop: 15 }}>\r\n        <div style={{ marginRight: 25 }}>\r\n          <Button\r\n            size='small'\r\n            type='primary'\r\n            shape='circle'\r\n            onClick={() => setCount([...count, count.length + 1])}\r\n          >\r\n            +\r\n          </Button>{' '}\r\n          <span>Добавить еще одну</span>\r\n        </div>\r\n        <>\r\n          <Button\r\n            disabled={count.length === 2}\r\n            size='small'\r\n            type='primary'\r\n            shape='circle'\r\n            onClick={() => {\r\n              setCount([...count.filter((i) => i !== count.length)])\r\n            }}\r\n          >\r\n            -\r\n          </Button>{' '}\r\n          <span style={{ marginLeft: 5 }}>Убрать</span>\r\n        </>\r\n      </div>\r\n      <Form.Item name='area'>\r\n        <Input\r\n          placeholder={'Участок пересечения'}\r\n          style={{ width: '30%', marginTop: 15 }}\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal, Form } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  postIntersections,\r\n  setCurrent,\r\n  resetCrossListMapData,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\nimport { AddCrossWorks } from './form/AddCrossWorks'\r\nimport { CustomYandexMap as YandexMap } from '../../common'\r\n\r\nexport const CrossListModal = () => {\r\n  const [visible, setVisible] = useState()\r\n  const [form] = Form.useForm()\r\n  const dispatch = useDispatch()\r\n\r\n  const onCancel = () => {\r\n    dispatch(resetCrossListMapData())\r\n    form.resetFields()\r\n    setVisible(false)\r\n  }\r\n\r\n  const onSave = async () => {\r\n    let data = await form.validateFields()\r\n    const ob = Object.values(data)\r\n    const ids = ob.filter((i) => typeof i !== 'string')\r\n    data = { 'roadwork-ids': ids, 'intersection-area': data.area }\r\n    dispatch(postIntersections(data))\r\n    dispatch(resetCrossListMapData())\r\n    form.resetFields()\r\n    setVisible(false)\r\n  }\r\n\r\n  const onAddIntersection = () => {\r\n    dispatch(setCurrent(1))\r\n    setVisible(true)\r\n  }\r\n\r\n  const config = [\r\n    <Button key='back' onClick={() => setVisible(false)}>\r\n      Отменить\r\n    </Button>,\r\n    <Button key='submit' type='primary' onClick={onSave}>\r\n      Сохранить\r\n    </Button>,\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type='primary'\r\n        onClick={onAddIntersection}\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        Добавить пересечение\r\n      </Button>\r\n      <Modal\r\n        title='Форма ввода данных по пересечению работ'\r\n        visible={visible}\r\n        onCancel={onCancel}\r\n        width={'80%'}\r\n        footer={config}\r\n      >\r\n        <Form form={form}>\r\n          <AddCrossWorks />\r\n          <div style={{ width: '100%', paddingLeft: 10 }}>\r\n            <YandexMap />\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, Button } from 'antd'\r\n\r\nimport {\r\n  setCrossListMapData,\r\n  resetCrossListMapData,\r\n  setCurrent,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { CustomYandexMap as YandexMap } from '../../common'\r\nimport { WorkConfirm as FormDetails } from '../WorkList/form/WorkConfirm'\r\n\r\nexport const CrossDetailsModal = (props) => {\r\n  const { visible, setVisible, record, data } = props\r\n  const [array, setArray] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    //get ids from table record\r\n    const ids = Object.keys(record)\r\n      .filter((key) => key.substring(0, 6) === 'Работа' && record[key])\r\n      .map((i) => record[i])\r\n\r\n    //find crosslist work information by ids\r\n    let arr = []\r\n    ids.forEach((id) => {\r\n      data.forEach((i) => {\r\n        if (i.id === id) {\r\n          arr = [...arr, i]\r\n        }\r\n      })\r\n    })\r\n\r\n    //draw work coordinates\r\n    let list = arr.map((i) => ({\r\n      type: 'polygon',\r\n      coordinates: i.geometries.coordinates,\r\n    }))\r\n    list = [\r\n      ...list,\r\n      {\r\n        type: 'placemark',\r\n        coordinates: record.coordinates,\r\n      },\r\n    ]\r\n\r\n    setArray(arr)\r\n    dispatch(setCurrent(1))\r\n    dispatch(setCrossListMapData(list))\r\n\r\n    return () => {\r\n      dispatch(setCurrent(0))\r\n      dispatch(resetCrossListMapData())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      title='Детали улицы'\r\n      visible={visible}\r\n      width={'50%'}\r\n      onCancel={() => setVisible(false)}\r\n      onOk={() => setVisible(false)}\r\n      footer={[\r\n        <Button key='close' onClick={() => setVisible(false)}>\r\n          Закрыть\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          // justifyContent: 'space-between',\r\n          flexWrap: 'wrap',\r\n          width: '90%',\r\n          margin: 'auto',\r\n        }}\r\n      >\r\n        {array.map((i, index) => (\r\n          <div\r\n            style={{\r\n              width: `${array.length > 2 ? '33%' : '50%'}`,\r\n            }}\r\n          >\r\n            <h2>Работа {index + 1}</h2>\r\n            <FormDetails ob={i} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={{ width: '100%', paddingLeft: 10 }}>\r\n        <YandexMap />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Input } from 'antd'\r\n\r\nimport {\r\n  deleteRoadMap,\r\n  resetIntersectionsData,\r\n  setEditedId,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { CrossDetailsModal } from './CrossDetailsModal'\r\nimport { CustomTable as Table } from '../../../../common/Table'\r\nimport {\r\n  setCrossListTableColumnsHelper,\r\n  setCrossListDataSourceHelper,\r\n} from '../../utils/table_helper'\r\n\r\nexport const CrossListTable = () => {\r\n  const { categories, intersections, data, editedId } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [record, setRecord] = useState({})\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [filtered, setFiltered] = useState()\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (editedId && filtered) {\r\n      let item = dataSource.find((i) => i.id === editedId)\r\n      console.log('editing filtered data')\r\n      setFiltered((state) => state.map((i) => (i.id === editedId ? item : i)))\r\n      dispatch(setEditedId({ just_id: false }))\r\n    }\r\n  }, [dataSource, editedId, filtered])\r\n\r\n  const columns = useMemo(() => {\r\n    return setCrossListTableColumnsHelper(\r\n      setVisible,\r\n      setRecord,\r\n      intersections,\r\n      categories\r\n    )\r\n  }, [setVisible, setRecord, intersections, categories])\r\n\r\n  useMemo(() => {\r\n    setDataSource(setCrossListDataSourceHelper(data, intersections))\r\n  }, [data, intersections])\r\n\r\n  const onEdit = (record) => {\r\n    console.log(record, 'run bitch')\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    // console.log(record)\r\n    dispatch(deleteRoadMap(record.id))\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    setFiltered(\r\n      dataSource.filter(\r\n        (i) =>\r\n          i.address &&\r\n          i.address.toLowerCase().includes(e.target.value.toLowerCase())\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item name={'search'}>\r\n        <Input\r\n          allowClear\r\n          placeholder={'Поиск по улице'}\r\n          onChange={onSearch}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='table'>\r\n        <Table\r\n          columns={columns}\r\n          data={filtered ? filtered : dataSource}\r\n          setData={setDataSource}\r\n          handleEdit={onEdit}\r\n          handleDelete={onDelete}\r\n          loading={intersections.status !== 'success' ? true : false}\r\n        />\r\n      </Form.Item>\r\n      {visible && (\r\n        <Form.Item name='modal'>\r\n          <CrossDetailsModal\r\n            visible={visible}\r\n            setVisible={setVisible}\r\n            record={record}\r\n            data={data}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { fetchIntersections } from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { CrossListModal as Modal } from './CrossListModal'\r\nimport { CrossListTable as Table } from './CrossListTable'\r\n\r\nexport const CrossList = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchIntersections())\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <Table />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { CustomTabs as Tabs } from '../common'\r\n\r\nimport { WorkList } from './WorkList/index'\r\nimport { CrossList } from './CrossList/index'\r\n\r\nexport const RoadMap = () => {\r\n  return <Tabs tabs={tabs} />\r\n}\r\n\r\nconst tabs = [\r\n  {\r\n    title: 'Список работ',\r\n    child: <WorkList />,\r\n  },\r\n  {\r\n    title: 'Список пересечений',\r\n    child: <CrossList />,\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { RoadMap } from './components/RoadMap'\r\n\r\nimport './index.css'\r\nimport 'antd/dist/antd.css'\r\n\r\nconst Roadmap = () => <RoadMap />\r\n\r\nexport default withRouter(Roadmap)\r\n","import React, { createContext, useState } from 'react'\r\n\r\nconst AppContext = createContext()\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  let [selectedValue, setSelectedValue] = useState()\r\n  let [selectedDictionaryName, setSelectedDictionaryName] = useState()\r\n  let [selectedIndustry, setSelectedIndustry] = useState()\r\n  let [filteredData, setFilteredData] = useState(null)\r\n  let [indicators, setIndicators] = useState({})\r\n  let [searchText, setSearchText] = useState()\r\n  let [fetchedDictionaryData, setFetchedDictionaryData] = useState({\r\n    loading: true,\r\n  })\r\n  let [fetchedIndicatorInfoData, setFetchedIndicatorInfoData] = useState({\r\n    loading: true,\r\n  })\r\n  let [fetchedIndicatorData, setFetchedIndicatorData] = useState({\r\n    loading: true,\r\n  })\r\n  let [\r\n    fetchedIndicatorStrategyData,\r\n    setFetchedIndicatorStrategyData,\r\n  ] = useState({\r\n    loading: true,\r\n  })\r\n  let [modalIndicator, setModalIndicator] = useState()\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        selectedValue,\r\n        setSelectedValue,\r\n        filteredData,\r\n        setFilteredData,\r\n        indicators,\r\n        setIndicators,\r\n        dictionary_names,\r\n        searchText,\r\n        setSearchText,\r\n        fetchedDictionaryData,\r\n        setFetchedDictionaryData,\r\n        fetchedIndicatorData,\r\n        setFetchedIndicatorData,\r\n        fetchedIndicatorStrategyData,\r\n        setFetchedIndicatorStrategyData,\r\n        fetchedIndicatorInfoData,\r\n        setFetchedIndicatorInfoData,\r\n        selectedDictionaryName,\r\n        setSelectedDictionaryName,\r\n        selectedIndustry,\r\n        setSelectedIndustry,\r\n        modalIndicator,\r\n        setModalIndicator,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport { AppContext, AppContextProvider }\r\n\r\nconst dictionary_names = [\r\n  'Сфера',\r\n  'Государственная программа',\r\n  'Периодичность обновления',\r\n  'Единица измерения',\r\n  'Ответственный орган',\r\n  'Источник информации',\r\n  'Стратегия 2050',\r\n  // 'Стратегия 2050',\r\n]\r\n","import axios from 'axios'\r\n\r\nexport const getAPI = async (url) => await axios(url)\r\n\r\nexport const postAPI = async (url, data) => await axios.post(url, data)\r\n\r\nexport const putAPI = async (url, data) => await axios.put(url, data)\r\n\r\nexport const deleteAPI = async (url) => await axios.delete(url)\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport const AdminButton = ({\r\n  handleAdd,\r\n  text2,\r\n  text1,\r\n  text3,\r\n  style = {\r\n    margin: '5 0',\r\n  },\r\n  text = `+`,\r\n}) => {\r\n  const handleClick = () => handleAdd()\r\n  const renderBTN = (text1, text2, text3) => {\r\n    if (text1) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text1}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    if (text2) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text2}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n    if (text3) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text3}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n  }\r\n  return renderBTN(text1, text2, text3)\r\n  /* text2 ? <Button type='primary' onClick={handleClick} style={style} className='AdminButton_style' title={text2}>\r\n            {text}\r\n        </Button> : <Button type='primary' onClick={handleClick} style={style} className='AdminButton_style' title={text1}>\r\n            {text}\r\n        </Button>*/\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nexport const AdminCard = (props) => {\r\n  const { title } = props\r\n\r\n  return (\r\n    <Card\r\n      title={title}\r\n      bordered={false}\r\n      style={{ width: '100%' }}\r\n      className='AdminCard_style'\r\n    >\r\n      {/* <Space direction='vertical'>{props.children}</Space> */}\r\n      {props.children}\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react'\r\nimport { putAPI, getAPI } from '../../utils/api'\r\nimport {\r\n  getObjectKeys,\r\n  capitalizeFirstLetter,\r\n  strcmp,\r\n} from '../../utils/helper'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Table, Modal } from '../common'\r\n\r\nexport const AdminIndicator = ({ isLink, isStrategy }) => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const {\r\n    dictionary_names,\r\n    setModalIndicator,\r\n    fetchedDictionaryData,\r\n    fetchedIndicatorData,\r\n    setFetchedIndicatorData,\r\n  } = useContext(AppContext)\r\n  let columns = []\r\n  const dataSource = []\r\n\r\n  useEffect(() => {\r\n    getAPI('/sc-analytic-indicators/api/indicators').then((res) => {\r\n      setFetchedIndicatorData({\r\n        loading: false,\r\n        data: res.data,\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  let names = [...dictionary_names, 'Отрасль'] //table column names\r\n  names = names.filter((name) =>\r\n    isStrategy ? name !== 'Сфера' : name !== 'Стратегия 2050'\r\n  )\r\n  names.sort()\r\n\r\n  //get filter and select option drop data\r\n  let filter = {} //table column's filter options\r\n  let option_data = {} // on edit drop select options\r\n  if (!fetchedDictionaryData.loading) {\r\n    fetchedDictionaryData.data.map((item) => {\r\n      filter = {\r\n        ...filter,\r\n        [item.name]: item.options.map((option) => option.name),\r\n      }\r\n\r\n      if (\r\n        !isStrategy ? item.name === 'Сфера' : item.name === 'Стратегия 2050'\r\n      ) {\r\n        const arr = item.options.map((i) => i.options.map((ii) => ii.name))\r\n        filter = { ...filter, Отрасль: [].concat(...arr) }\r\n      }\r\n\r\n      option_data = {\r\n        ...option_data,\r\n        [item.name]: item.options.map((option) => {\r\n          return {\r\n            title: option.name,\r\n            value: option.name,\r\n            id: option.id,\r\n            children: [],\r\n          }\r\n        }),\r\n      }\r\n    })\r\n\r\n    const obj = fetchedDictionaryData.data.find((item) =>\r\n      isStrategy ? item.name === 'Стратегия 2050' : item.name === 'Сфера'\r\n    )\r\n\r\n    option_data = {\r\n      ...option_data,\r\n      Отрасль: [].concat(\r\n        ...obj.options.map((op) =>\r\n          op.options.map((o) => ({\r\n            title: o.name,\r\n            value: o.name,\r\n            id: o.id,\r\n            children: [],\r\n          }))\r\n        )\r\n      ),\r\n    }\r\n  }\r\n\r\n  //set columns and dataSource for table\r\n  columns = [\r\n    {\r\n      title: 'Индикатор',\r\n      dataIndex: 'Индикатор',\r\n      width: 250,\r\n      editable: true,\r\n      render: (text, record) =>\r\n        isLink ? (\r\n          <a\r\n            onClick={() => {\r\n              setOpen(true)\r\n              setModalIndicator({\r\n                name: record.key,\r\n                id: record.id,\r\n              })\r\n            }}\r\n          >\r\n            {text}\r\n          </a>\r\n        ) : (\r\n          text\r\n        ),\r\n      sorter: (a, b) => strcmp(a.Индикатор, b.Индикатор),\r\n      sortDirections: ['ascend'],\r\n    },\r\n    ...names.map((name) => {\r\n      const filtered =\r\n        filter[name] &&\r\n        filter[name].map((option_name) => ({\r\n          text: option_name,\r\n          value: option_name,\r\n        }))\r\n\r\n      return {\r\n        title: capitalizeFirstLetter(\r\n          name === 'Стратегия 2050' ? 'Сфера' : name\r\n        ),\r\n        dataIndex: name,\r\n        editable: true,\r\n        width: 250,\r\n        data: option_data[name],\r\n        filters: filtered,\r\n        type: 'select',\r\n        onFilter: (value, record) => record[name] === value,\r\n      }\r\n    }),\r\n  ]\r\n\r\n  if (!fetchedIndicatorData.loading) {\r\n    const arr = isStrategy\r\n      ? fetchedIndicatorData.data.filter(\r\n          (item) =>\r\n            item.dictionaries.Тип && item.dictionaries.Тип === 'Стратегия'\r\n        )\r\n      : fetchedIndicatorData.data.filter(\r\n          (item) =>\r\n            item.dictionaries.Тип && item.dictionaries.Тип === 'Индикатор'\r\n        )\r\n\r\n    arr.map((indicator) => {\r\n      let ob = {\r\n        id: indicator.id,\r\n        key: indicator.name,\r\n        Индикатор: indicator.name,\r\n      }\r\n      getObjectKeys(indicator.dictionaries).map((dictionary_name) => {\r\n        ob = {\r\n          ...ob,\r\n          [dictionary_name]: indicator.dictionaries[dictionary_name],\r\n        }\r\n      })\r\n      dataSource.push(ob)\r\n    })\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const data_post = {\r\n        name: record['Индикатор'],\r\n        dictionaries: [isStrategy ? 229 : 227],\r\n      }\r\n      let ids = []\r\n      const row = await form.validateFields()\r\n\r\n      const arr = Object.keys(row).map((key) => ({\r\n        name: key,\r\n        value: row[key],\r\n      }))\r\n      const filtered_arr = arr.filter(\r\n        (item) => item.value !== undefined && item.name !== 'Индикатор'\r\n      )\r\n\r\n      filtered_arr.map((item) => {\r\n        if (item.name === 'Отрасль') {\r\n          const name = isStrategy ? 'Стратегия 2050' : 'Сфера'\r\n          const ob = fetchedDictionaryData.data.find((i) => i.name === name)\r\n          const obb = ob.options.find((i) =>\r\n            i.options.find((ii) => ii.name === item.value)\r\n          )\r\n          const o = obb.options.find((i) => i.name === item.value)\r\n          ids = [...ids, o.id]\r\n        } else {\r\n          const ob = fetchedDictionaryData.data.find(\r\n            (i) => i.name === item.name\r\n          )\r\n          const obb = ob.options.find((i) => i.name === item.value)\r\n          ids = [...ids, obb.id]\r\n        }\r\n      })\r\n\r\n      data_post.dictionaries = [...data_post.dictionaries, ...ids]\r\n      putAPI(`/sc-analytic-indicators/api/indicators/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI('/sc-analytic-indicators/api/indicators').then((res) => {\r\n            setFetchedIndicatorData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      form.resetFields()\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal open={open} setOpen={setOpen} className='AdminIndicator_style' />\r\n      <Table\r\n        cols={columns}\r\n        data={dataSource}\r\n        loading={fetchedIndicatorData.loading}\r\n        url={'/sc-analytic-indicators/api/indicators'}\r\n        setFetchedData={setFetchedIndicatorData}\r\n        save={save}\r\n        isLink={isLink}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","export const getObjectKeys = (obj) => Object.keys(obj).map((key) => key)\r\n\r\nexport const capitalizeFirstLetter = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nexport const strcmp = (a, b) => {\r\n  if (a === b) {\r\n    return 0\r\n  }\r\n\r\n  if (a > b) {\r\n    return 1\r\n  }\r\n\r\n  return -1\r\n}\r\n","import React from 'react'\r\nimport { Input } from 'antd'\r\n\r\nexport const AdminInput = ({\r\n  placeholder = 'Новый элемент',\r\n  defaultValue = '',\r\n  required = true,\r\n\r\n  inptRef,\r\n}) => {\r\n  return (\r\n    <Input\r\n      placeholder={placeholder}\r\n      defaultValue={defaultValue}\r\n      required={required}\r\n      allowClear\r\n      ref={inptRef}\r\n      className='AdminInput_style'\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd'\r\n\r\nexport const AdminTabs = (props) => {\r\n  return (\r\n    <Tabs\r\n      defaultActiveKey='1'\r\n      tabPosition={props.position || 'left'}\r\n      className={props.classname || 'Indicators_tab_style'}\r\n    >\r\n      {props.children}\r\n    </Tabs>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Select } from '../common'\r\n\r\nimport { Alert, Form, InputNumber, Button, DatePicker, Space } from 'antd'\r\n\r\nexport const Controllers = ({ plan }) => {\r\n  const [state, setState] = useState({ date: null, value: null })\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n  const { modalIndicator, setFetchedIndicatorInfoData } = useContext(AppContext)\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const handleSubmit = () => {\r\n    if (state.date && state.value) {\r\n      const ob = {\r\n        date: state.date.month\r\n          ? `${state.date.year}-${state.date.month}-15`\r\n          : `${state.date.year}-12-31`,\r\n        'edit-comment': '',\r\n        fact: plan === 'Факт' ? state.value : null,\r\n        planned: plan !== 'Факт' ? state.value : null,\r\n      }\r\n\r\n      setState({ date: null, value: null })\r\n\r\n      postAPI(\r\n        `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`,\r\n        ob\r\n      )\r\n        .then((res) => {\r\n          setStatus({\r\n            alert: true,\r\n            message: 'Успешно',\r\n            description: 'Данные успешно отправлены на сервер',\r\n            type: 'success',\r\n          })\r\n\r\n          setTimeout(\r\n            () =>\r\n              setStatus({\r\n                alert: false,\r\n              }),\r\n            15000\r\n          )\r\n\r\n          getAPI(\r\n            `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n          ).then(function (res) {\r\n            setFetchedIndicatorInfoData({\r\n              data: res.data,\r\n              loading: false,\r\n            })\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          setStatus({\r\n            alert: true,\r\n            message: 'Ошибка',\r\n            description: 'Ошибка с записью данных на сервер',\r\n            type: 'error',\r\n          })\r\n\r\n          setTimeout(\r\n            () =>\r\n              setStatus({\r\n                alert: false,\r\n              }),\r\n            15000\r\n          )\r\n        })\r\n\r\n      form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        15000\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form form={form} className='Controllers_style_inner'>\r\n      <Form.Item className='Controllers_style_item'>\r\n        <Space>\r\n          <Form.Item name='datepicker_field' className='datepicker_field_style'>\r\n            <Space>\r\n              <DatePicker\r\n                onChange={(date, dateString) =>\r\n                  setState((state) => ({\r\n                    ...state,\r\n                    date: { year: dateString },\r\n                  }))\r\n                }\r\n                picker='year'\r\n                allowClear={true}\r\n                placeholder={'Год'}\r\n                locale={locale}\r\n              />\r\n              <Select\r\n                placeholder={'Месяц'}\r\n                data={month}\r\n                style={{ width: 170, background: '#fff', color: '#333' }}\r\n                callBack={(id) =>\r\n                  setState((state) => ({\r\n                    ...state,\r\n                    date: { ...state.date, month: id },\r\n                  }))\r\n                }\r\n              />\r\n            </Space>\r\n          </Form.Item>\r\n          <Form.Item name='number_field'>\r\n            <InputNumber\r\n              onChange={(value) => setState((state) => ({ ...state, value }))}\r\n              placeholder={plan}\r\n            />\r\n          </Form.Item>\r\n          <Button type='primary' onClick={handleSubmit}>\r\n            +\r\n          </Button>\r\n        </Space>\r\n      </Form.Item>\r\n      {status.alert && (\r\n        <Alert\r\n          message={status.message}\r\n          description={status.description}\r\n          type={status.type}\r\n          closable\r\n          onClose={onCloseAlert}\r\n          style={{ margin: 15 }}\r\n        />\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst locale = {\r\n  lang: {\r\n    locale: 'ru',\r\n    placeholder: 'Выбрать дату',\r\n    today: 'Сегодня',\r\n    now: 'Сейчас',\r\n    ok: 'ок',\r\n    clear: 'очистить',\r\n    month: 'Месяц',\r\n    year: 'Год',\r\n    yearFormat: 'YYYY',\r\n    dateFormat: 'M/D/YYYY',\r\n    dayFormat: 'D',\r\n    dateTimeFormat: 'M/D/YYYY HH:mm:ss',\r\n    monthFormat: 'MMMM',\r\n    monthBeforeYear: false,\r\n  },\r\n  timePickerLocale: {\r\n    placeholder: 'Выбрать время',\r\n  },\r\n  dateFormat: 'YYYY-MM-DD',\r\n  dateTimeFormat: 'YYYY-MM-DD HH:mm:ss',\r\n  weekFormat: 'YYYY-wo',\r\n  monthFormat: 'YYYY-MM',\r\n}\r\n\r\nconst month = [\r\n  { id: '01', title: 'Январь', value: 'Январь', children: [] },\r\n  { id: '02', title: 'Февраль', value: 'Февраль', children: [] },\r\n  { id: '03', title: 'Март', value: 'Март', children: [] },\r\n  { id: '04', title: 'Апрель', value: 'Апрель', children: [] },\r\n  { id: '05', title: 'Май', value: 'Май', children: [] },\r\n  { id: '06', title: 'Июнь', value: 'Июнь', children: [] },\r\n  { id: '07', title: 'Июль', value: 'Июль', children: [] },\r\n  { id: '08', title: 'Август', value: 'Август', children: [] },\r\n  {\r\n    id: '09',\r\n    title: 'Сентябрь',\r\n    value: 'Сентябрь',\r\n    children: [],\r\n  },\r\n  {\r\n    id: '10',\r\n    title: 'Октябрь',\r\n    value: 'Октябрь',\r\n    children: [],\r\n  },\r\n  { id: '11', title: 'Ноябрь', value: 'Ноябрь', children: [] },\r\n  {\r\n    id: '12',\r\n    title: 'Декабрь',\r\n    value: 'Декабрь',\r\n    children: [],\r\n  },\r\n]\r\n","import React, { useContext } from 'react'\r\nimport { Table } from '../common'\r\nimport { AppContext } from '../../context/main'\r\nimport { putAPI, getAPI } from '../../utils/api'\r\n\r\nexport const IndicatorInfoTable = ({ plan, isStrategy }) => {\r\n  const {\r\n    fetchedIndicatorInfoData,\r\n    setFetchedIndicatorInfoData,\r\n    modalIndicator,\r\n  } = useContext(AppContext)\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Дата',\r\n      dataIndex: 'year',\r\n      key: 'year',\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: plan,\r\n      dataIndex: plan,\r\n      key: plan,\r\n      type: 'number',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Дата изменения',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Коментарий',\r\n      key: 'comment',\r\n      editable: true,\r\n      dataIndex: 'comment',\r\n    },\r\n  ]\r\n\r\n  let dataSource =\r\n    !fetchedIndicatorInfoData.loading &&\r\n    fetchedIndicatorInfoData.data.map((item, index) => {\r\n      const date = item['last-edit'].substr(0, item['last-edit'].indexOf('T'))\r\n      const year = item.date.substr(0, 7)\r\n\r\n      return plan === 'План'\r\n        ? item.planned && {\r\n            key: index,\r\n            id: item.id,\r\n            year,\r\n            План: item.planned,\r\n            date,\r\n            comment: item['edit-comment'],\r\n          }\r\n        : item.fact && {\r\n            key: index,\r\n            id: item.id,\r\n            year,\r\n            Факт: item.fact,\r\n            date,\r\n            comment: item['edit-comment'],\r\n          }\r\n    })\r\n\r\n  dataSource =\r\n    dataSource && dataSource.filter((ob) => ob !== undefined && ob !== null)\r\n\r\n  const edit = (record, form, setEditingKey) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      const ob = fetchedIndicatorInfoData.data.find(\r\n        (item) => item.id === record.id\r\n      )\r\n\r\n      const data_post = {\r\n        date: `${record.year}-01`,\r\n        'edit-comment': row.comment,\r\n        fact: row.Факт ? row.Факт : ob.fact,\r\n        planned: row.План ? row.План : ob.planned,\r\n      }\r\n\r\n      putAPI(`/sc-analytic-indicators/api/indexes/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI(\r\n            `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n          ).then(function (res) {\r\n            setFetchedIndicatorInfoData({\r\n              data: res.data,\r\n              loading: false,\r\n            })\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      cols={columns}\r\n      data={dataSource}\r\n      loading={fetchedIndicatorInfoData.loading}\r\n      url={'/sc-analytic-indicators/api/indexes'}\r\n      setFetchedData={setFetchedIndicatorInfoData}\r\n      url2={`/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`}\r\n      save={save}\r\n      edit={edit}\r\n      \r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Controllers } from './Controllers'\r\nimport { IndicatorInfoTable as Table } from './IndicatorInfoTable'\r\n\r\nexport const IndicatorInfo = ({ plan, isStrategy }) => {\r\n  return (\r\n    <div className='Controllers_style'>\r\n      <Controllers plan={plan} />\r\n      <Table plan={plan} isStrategy={isStrategy} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Modal, Tabs } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI } from '../../utils/api'\r\n\r\nimport { AdminTabs } from './AdminTabs'\r\nimport { IndicatorInfo } from '../IndicatorInfo'\r\n\r\nexport const AdminModal = ({ open, setOpen }) => {\r\n  const { modalIndicator, setFetchedIndicatorInfoData } = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    if (modalIndicator) {\r\n      getAPI(\r\n        `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n      ).then((res) =>\r\n        setFetchedIndicatorInfoData((state) => ({\r\n          ...state,\r\n          data: res.data,\r\n          loading: false,\r\n        }))\r\n      )\r\n    }\r\n\r\n    return () => setFetchedIndicatorInfoData({ loading: true })\r\n  }, [modalIndicator, setFetchedIndicatorInfoData])\r\n\r\n  const { TabPane } = Tabs\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={modalIndicator && modalIndicator.name}\r\n      visible={open}\r\n      width={'auto'}\r\n      onOk={handleCloseModal}\r\n      onCancel={handleCloseModal}\r\n      className='AdminModal_style'\r\n    >\r\n      <AdminTabs position={'top'}>\r\n        <TabPane tab={'План'} key='1'>\r\n          <IndicatorInfo plan={'План'} />\r\n        </TabPane>\r\n        <TabPane tab={'Факт'} key='2'>\r\n          <IndicatorInfo plan={'Факт'} />\r\n        </TabPane>\r\n      </AdminTabs>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useRef, useContext } from 'react'\r\nimport { Input } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const AdminSearch = ({ style, ref }) => {\r\n  const inptRef = useRef()\r\n  const { setSearchText } = useContext(AppContext)\r\n\r\n  const handleSearch = () => setSearchText(inptRef.current.input.value)\r\n\r\n  return (\r\n    <Input\r\n      placeholder='Поиск справочника'\r\n      defaultValue=''\r\n      ref={inptRef}\r\n      allowClear\r\n      onChange={handleSearch}\r\n      /* style={style}*/\r\n      className='AdminSearch_style'\r\n    />\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TreeSelect } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const AdminSelect = ({\r\n  data,\r\n  placeholder = 'Выбрать справочник',\r\n  style = { margin: 5, marginLeft: 0, marginRight: 8 },\r\n  callBack,\r\n  defaultValue,\r\n\r\n}) => {\r\n  const {\r\n    setSelectedDictionaryName,\r\n    setSelectedIndustry,\r\n    dictionary_names,\r\n  } = useContext(AppContext)\r\n\r\n  const handleChangeDictionaryName = (value) => setSelectedDictionaryName(value)\r\n  const handleChangeOptionName = (value) => {\r\n    const selected_value = data.find((item) => item.value === value)\r\n    setSelectedIndustry(value)\r\n    callBack && selected_value && callBack(selected_value.id)\r\n  }\r\n\r\n  const setTreeData = (data) =>\r\n    data.map((name) => ({\r\n      title: name,\r\n      value: name,\r\n      children: [],\r\n    }))\r\n\r\n  const renderSelect = () =>\r\n    data ? (\r\n      <TreeSelect\r\n        style={style}\r\n        allowClear\r\n        placeholder={placeholder}\r\n        treeData={data}\r\n        onChange={handleChangeOptionName}\r\n        className='AdminSelect_style'\r\n        defaultValue={defaultValue}\r\n      />\r\n    ) : (\r\n      <TreeSelect\r\n        placeholder={placeholder}\r\n        onChange={handleChangeDictionaryName}\r\n        style={style}\r\n        treeData={setTreeData(dictionary_names)}\r\n        className='AdminSelect_style'\r\n      />\r\n    )\r\n\r\n  return <>{renderSelect()}</>\r\n}\r\n","import React from 'react'\r\n\r\nimport { Form, Input, InputNumber, Select } from 'antd'\r\n\r\nexport const EditableCell = ({\r\n  data,\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const switchCase = (type) => {\r\n    switch (type) {\r\n      case 'select':\r\n        return (\r\n          <Select placeholder='Выбрать значение' allowClear>\r\n            {data &&\r\n              data.map((item) => (\r\n                <Select.Option\r\n                  key={`${item.title}-${item.id}`}\r\n                  value={item.title}\r\n                >\r\n                  {item.title}\r\n                </Select.Option>\r\n              ))}\r\n          </Select>\r\n        )\r\n      case 'number':\r\n        return <InputNumber className='Edit_input_style' />\r\n      default:\r\n        return <Input className='Edit_input_style' />\r\n    }\r\n  }\r\n\r\n  const inputNode = switchCase(inputType)\r\n\r\n  return (\r\n    <td {...restProps} className='Table_td_style_line'>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={\r\n            inputType !== 'select' &&\r\n            inputType !== 'date' &&\r\n            inputType !== 'number' && [\r\n              {\r\n                required: true,\r\n                message: `это поле необходимо заполнить!`,\r\n              },\r\n            ]\r\n          }\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { Table, Form, Space, Popconfirm } from 'antd'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from '@ant-design/icons'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI, deleteAPI } from '../../utils/api'\r\n\r\nimport { EditableCell } from './EditableCell'\r\n\r\nexport const AdminTable = ({\r\n  cols,\r\n  data,\r\n  loading,\r\n  url,\r\n  url2,\r\n  setFetchedData,\r\n  save,\r\n  isLink,\r\n}) => {\r\n  const { searchText } = useContext(AppContext)\r\n  const [filtered, setFiltered] = useState()\r\n  const [editingKey, setEditingKey] = useState('')\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (data && searchText) {\r\n      setFiltered(\r\n        data.filter((item) => {\r\n          let obb =\r\n            item.children &&\r\n            item.children.some((ob) => {\r\n              const isNestedFilter = ob.key\r\n                .toLowerCase()\r\n                .includes(searchText.toLowerCase())\r\n              return isNestedFilter\r\n            })\r\n\r\n          const isFilter = item.key\r\n            .toLowerCase()\r\n            .includes(searchText.toLowerCase())\r\n          return obb ? obb : isFilter\r\n        })\r\n      )\r\n    }\r\n  }, [data, searchText])\r\n\r\n  const isEditing = (record) => record.key === editingKey\r\n\r\n  const edit = (record, form, setEditingKey) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const arr = isLink\r\n    ? cols\r\n    : [\r\n        ...cols,\r\n        {\r\n          title: 'Действие',\r\n          dataIndex: '',\r\n          key: 'x',\r\n          render: (_, record) => {\r\n            const editable = isEditing(record)\r\n            return editable ? (\r\n              <span>\r\n                <a\r\n                  onClick={() => save(record, form, setEditingKey)}\r\n                  style={{\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <SaveOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Сохранить'\r\n                  />\r\n                </a>\r\n                <Popconfirm\r\n                  title='Вы уверены что хотите оменить изменения?'\r\n                  onConfirm={cancel}\r\n                >\r\n                  <CloseOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Отменить'\r\n                  />\r\n                </Popconfirm>\r\n              </span>\r\n            ) : (\r\n              <Space>\r\n                <a\r\n                  disabled={editingKey !== ''}\r\n                  onClick={() => edit(record, form, setEditingKey)}\r\n                >\r\n                  <EditOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Редактировать'\r\n                  />\r\n                </a>\r\n                <Popconfirm\r\n                  title='Вы уверены что хотите удалить даныне?'\r\n                  onConfirm={() => handleDelete(record.id)}\r\n                >\r\n                  <DeleteOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Удалить'\r\n                  />\r\n                </Popconfirm>\r\n              </Space>\r\n            )\r\n          },\r\n        },\r\n      ]\r\n\r\n  cols = cols[0].title === 'Все справочники' ? cols : arr\r\n\r\n  const handleDelete = (id) => {\r\n    deleteAPI(`${url}/${id}`).then((res) =>\r\n      getAPI(url2 ? url2 : url)\r\n        .then((res) =>\r\n          setFetchedData({\r\n            loading: false,\r\n            data: res.data,\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n    )\r\n  }\r\n\r\n  const mergedColumns = cols.map((col, index) => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => {\r\n        return {\r\n          record,\r\n          setIndicator: col.setIndicator,\r\n          inputType: col.type,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          data: col.data,\r\n          editing: isEditing(record),\r\n          callBack: col.callBack,\r\n        }\r\n      },\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        locale={{\r\n          filterTitle: 'Меню фильтра',\r\n          filterConfirm: 'Ок',\r\n          filterReset: 'Сбросить',\r\n          filterEmptyText: 'Нет фильтров',\r\n          selectAll: 'Выбрать текущую страницу',\r\n          selectInvert: 'Invert current page',\r\n          selectionAll: 'Выбрать все',\r\n          sortTitle: 'Сортировать',\r\n          expand: 'Expand row',\r\n          collapse: 'Collapse row',\r\n          triggerDesc: 'Сортировать по убыванию',\r\n          triggerAsc: 'Сортировать по возрастанию',\r\n          cancelSort: 'Отменить сортировку',\r\n        }}\r\n        columns={mergedColumns}\r\n        dataSource={searchText ? filtered : data}\r\n        loading={loading}\r\n        pagination={{\r\n          pageSizeOptions: ['10', '20', '25', '30'],\r\n          showSizeChanger: true,\r\n          locale: { items_per_page: '' },\r\n          onChange: cancel,\r\n        }}\r\n        className='AdminTable_style'\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdminTable as Table } from '../common/AdminTable'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI, putAPI } from '../../utils/api'\r\n\r\nexport const DictionaryTable = () => {\r\n  const {\r\n    selectedDictionaryName,\r\n    fetchedDictionaryData,\r\n    setFetchedDictionaryData,\r\n  } = useContext(AppContext)\r\n  let columns = []\r\n  let data = []\r\n\r\n  columns = selectedDictionaryName\r\n    ? [\r\n        {\r\n          title: 'Наименование',\r\n          dataIndex: selectedDictionaryName,\r\n          editable: true,\r\n          width: '90%',\r\n        },\r\n      ]\r\n    : [\r\n        {\r\n          title: 'Наименование',\r\n          dataIndex: 'All',\r\n          width: '90%',\r\n          padding: '10px',\r\n        },\r\n      ]\r\n\r\n  if (!fetchedDictionaryData.loading) {\r\n    const arr = fetchedDictionaryData.data.filter((item) => item.name !== 'Тип')\r\n\r\n    const obb = arr.find((item) => item.name === selectedDictionaryName)\r\n\r\n    data = selectedDictionaryName\r\n      ? obb.options.map((item) =>\r\n          item.options.length > 0\r\n            ? {\r\n                key: item.name,\r\n                id: item.id,\r\n                tag: item.tag,\r\n                'parent-id': obb.id,\r\n                [item.tag]: item.name,\r\n                children: item.options.map((ob) => ({\r\n                  key: ob.name,\r\n                  [item.tag]: ob.name,\r\n                  'parent-id': item.id,\r\n                  tag: item.tag,\r\n                  id: ob.id,\r\n                })),\r\n              }\r\n            : {\r\n                key: item.name,\r\n                id: item.id,\r\n                tag: item.tag,\r\n                'parent-id': obb.id,\r\n                [selectedDictionaryName]: item.name,\r\n              }\r\n        )\r\n      : [].concat(\r\n          ...arr.map((item) =>\r\n            item.name === 'Сфера' || selectedDictionaryName === 'Стратегия 2050'\r\n              ? item.options.map((op) => ({\r\n                  key: op.name,\r\n                  All: op.name,\r\n                  children: op.options.map((ob) => ({\r\n                    key: ob.name,\r\n                    All: ob.name,\r\n                  })),\r\n                }))\r\n              : {\r\n                  key: item.name,\r\n                  All: item.name,\r\n                  children: item.options.map((ob) => ({\r\n                    key: ob.name,\r\n                    All: ob.name,\r\n                  })),\r\n                }\r\n          )\r\n        )\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n\r\n      const data_post = {\r\n        name: row[record.tag],\r\n        tag: record.tag,\r\n      }\r\n\r\n      putAPI(`/sc-analytic-indicators/api/dictionaries/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI(`/sc-analytic-indicators/api/dictionaries`).then((res) =>\r\n            setFetchedDictionaryData({ loading: false, data: res.data })\r\n          )\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      cols={columns}\r\n      data={data}\r\n      loading={fetchedDictionaryData.loading}\r\n      url={'/sc-analytic-indicators/api/dictionaries'}\r\n      setFetchedData={setFetchedDictionaryData}\r\n      save={save}\r\n    />\r\n  )\r\n}\r\n","import React, { useState, useRef, useContext } from 'react'\r\nimport { Alert, Form } from 'antd'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { Button, Input, Select } from '../common'\r\n\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const Controllers = ({ ant_form, setIsError }) => {\r\n  const inptRef = useRef()\r\n  const inptRef2 = useRef()\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n\r\n  const {\r\n    selectedIndustry,\r\n    selectedDictionaryName,\r\n    fetchedDictionaryData,\r\n    setFetchedDictionaryData,\r\n  } = useContext(AppContext)\r\n\r\n  let obb\r\n  if (!fetchedDictionaryData.loading) {\r\n    obb = fetchedDictionaryData.data.find(\r\n      (item) => item.name === selectedDictionaryName\r\n    )\r\n  }\r\n\r\n  const handleAddDictionary = () => {\r\n    if (inptRef.current.input.value) {\r\n      const name = inptRef.current.input.value\r\n      const data = {\r\n        'parent-id': obb.id,\r\n        tag: selectedDictionaryName,\r\n        name,\r\n        options: [],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/dictionaries', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/dictionaries')\r\n          .then((res) =>\r\n            setFetchedDictionaryData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          )\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n\r\n      ant_form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите необходимое название для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleAddDictionaryChild = () => {\r\n    if (selectedIndustry && inptRef2.current.input.value) {\r\n      const name = inptRef2.current.input.value\r\n\r\n      const ob = obb.options.find((item) => item.name === selectedIndustry)\r\n      const data = {\r\n        'parent-id': ob.id,\r\n        tag: 'Отрасль',\r\n        name,\r\n        options: [],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/dictionaries', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/dictionaries')\r\n          .then((res) =>\r\n            setFetchedDictionaryData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          )\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n      ant_form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  let names = []\r\n  if (obb) {\r\n    names = obb.options.map((item) => ({\r\n      id: item.id,\r\n      title: item.name,\r\n      value: item.name,\r\n      children: [],\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {selectedDictionaryName && (\r\n        <Form.Item name='dictionary-controllers Controllers_style'>\r\n          <div className='form_add_sphere Controllers_style_inner'>\r\n            <Input\r\n              inptRef={inptRef}\r\n              required={true}\r\n              placeholder={\r\n                selectedDictionaryName === 'Сфера' ||\r\n                selectedDictionaryName === 'Стратегия 2050'\r\n                  ? 'Добавить новую сферу'\r\n                  : 'Добавить новый элемент'\r\n              }\r\n            />\r\n            <Button handleAdd={handleAddDictionary} text1={'Добавить сферу'} />\r\n          </div>\r\n        </Form.Item>\r\n      )}\r\n      {selectedDictionaryName === 'Сфера' ||\r\n      selectedDictionaryName === 'Стратегия 2050' ? (\r\n        <Form.Item className='form_add_sphere_wrap'>\r\n          <Select data={names} placeholder='Сделайте выбор' />\r\n          <div className='form_add_sphere'>\r\n            <Form.Item name='dictionary-child-controllers'>\r\n              <Input\r\n                inptRef={inptRef2}\r\n                placeholder={'Добавить новую отрасль'}\r\n                required={true}\r\n              />\r\n            </Form.Item>\r\n            <Button\r\n              handleAdd={handleAddDictionaryChild}\r\n              text2={'Добавить отрасль'}\r\n            />\r\n          </div>\r\n        </Form.Item>\r\n      ) : null}\r\n      {status.alert && (\r\n        <Alert\r\n          message={status.message}\r\n          description={status.description}\r\n          type={status.type}\r\n          closable\r\n          onClose={onCloseAlert}\r\n          style={{ margin: 15 }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { Form } from 'antd'\r\n\r\nimport { getAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Select, Search } from '../common'\r\nimport { DictionaryTable as Table } from './DictionaryTable'\r\nimport { Controllers } from './Controllers'\r\n\r\nexport const Dictionary = () => {\r\n  const [form] = Form.useForm()\r\n\r\n  const { setFetchedDictionaryData } = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    getAPI('/sc-analytic-indicators/api/dictionaries').then((res) => {\r\n      setFetchedDictionaryData({\r\n        loading: false,\r\n        data: res.data,\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <div className='first_stage_filter'>\r\n          <Select />\r\n        </div>\r\n      </Form.Item>\r\n      <Controllers ant_form={form} />\r\n      <Form.Item>\r\n        <Search style={{ width: '40%', margin: '5 0', marginRight: 8 }} />\r\n        <Table />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Dictionary } from './components/Dictionary'\r\n\r\nexport const CustomDictionary = () => {\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <Dictionary />\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Alert, Form } from 'antd'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Button, Input, Select } from '../common'\r\n\r\nexport const Controllers = ({ isStrategy }) => {\r\n  const [indicator, setIndicator] = useState([])\r\n  const {\r\n    fetchedDictionaryData,\r\n    setFetchedIndicatorData,\r\n    setFetchedIndicatorStrategyData,\r\n  } = useContext(AppContext)\r\n\r\n  const inputRef = useRef()\r\n  const [form] = Form.useForm()\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n\r\n  const handleSubmit = () => {\r\n    if (inputRef.current.input.value) {\r\n      const typeId = isStrategy ? 229 : 227\r\n      const data = {\r\n        name: inputRef.current.input.value,\r\n        dictionaries: [...indicator, typeId],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/indicators', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/indicators')\r\n          .then((res) => {\r\n            setFetchedIndicatorData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n            setFetchedIndicatorStrategyData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n\r\n      form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleIndicator = (id) => {\r\n    setIndicator((state) => [...state, id])\r\n  }\r\n\r\n  const renderSelect = () => {\r\n    let selects = []\r\n    let industry = []\r\n    if (!fetchedDictionaryData.loading) {\r\n      industry = fetchedDictionaryData.data\r\n        .find((item) =>\r\n          isStrategy ? item.name === 'Стратегия 2050' : item.name === 'Сфера'\r\n        )\r\n        .options.map((option) =>\r\n          option.options.map((ob) => ({ name: ob.name, id: ob.id }))\r\n        )\r\n\r\n      const arr = fetchedDictionaryData.data.filter(\r\n        (item) => item.name !== 'Тип'\r\n      )\r\n\r\n      const ob = arr.filter((item) =>\r\n        !isStrategy ? item.name !== 'Стратегия 2050' : item.name !== 'Сфера'\r\n      )\r\n\r\n      selects = ob.map((item, index) => {\r\n        const name = isStrategy ? 'Стратегия 2050' : 'Сфера'\r\n        const data = item.options.map((option) =>\r\n          item.name === name\r\n            ? {\r\n                id: option.id,\r\n                title: option.name,\r\n                value: option.name,\r\n                children: [],\r\n              }\r\n            : {\r\n                id: option.id,\r\n                title: option.name,\r\n                value: option.name,\r\n                children: option.options.map((ob) => {\r\n                  return {\r\n                    id: ob.id,\r\n                    title: ob.name,\r\n                    value: ob.name,\r\n                    children: [],\r\n                  }\r\n                }),\r\n              }\r\n        )\r\n\r\n        return (\r\n          <Select\r\n            key={index}\r\n            placeholder={item.name === 'Стратегия 2050' ? 'Сфера' : item.name}\r\n            data={data}\r\n            callBack={(id) => handleIndicator(id)}\r\n          />\r\n        )\r\n      })\r\n    }\r\n\r\n    selects.push(\r\n      <Select\r\n        key={45}\r\n        placeholder={'Отрасль'}\r\n        data={[].concat(...industry).map((item) => ({\r\n          id: item.id,\r\n          title: item.name,\r\n          value: item.name,\r\n          children: [],\r\n        }))}\r\n        callBack={(id) => handleIndicator(id)}\r\n      />\r\n    )\r\n\r\n    return selects.map((select) => select)\r\n  }\r\n\r\n  return (\r\n    <div className={'form_indicators'}>\r\n      {!fetchedDictionaryData.loading && (\r\n        <Form form={form}>\r\n          <Form.Item>\r\n            <Form.Item name='input'>\r\n              <Input\r\n                placeholder={'Введите название индикатора'}\r\n                inptRef={inputRef}\r\n                style={{\r\n                  margin: 20,\r\n                  marginLeft: 0,\r\n                  marginTop: 0,\r\n                  minWidth: 250,\r\n                  width: 250,\r\n                }}\r\n              />\r\n            </Form.Item>\r\n            {renderSelect()}\r\n            <Button\r\n              type='primary'\r\n              handleAdd={handleSubmit}\r\n              text3={'Добавить индикатор'}\r\n            />\r\n          </Form.Item>\r\n          {status.alert && (\r\n            <Alert\r\n              message={status.message}\r\n              description={status.description}\r\n              type={status.type}\r\n              closable\r\n              onClose={onCloseAlert}\r\n              style={{ margin: 15 }}\r\n            />\r\n          )}\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\n\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI } from '../../utils/api'\r\n\r\nimport { Controllers } from './Controllers'\r\nimport { Indicator, AdminTabs } from '../common'\r\nimport { Tabs } from 'antd'\r\n\r\nexport const Indicators = () => {\r\n  const { TabPane } = Tabs\r\n\r\n  const { fetchedDictionaryData, setFetchedDictionaryData } = useContext(\r\n    AppContext\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!fetchedDictionaryData.data) {\r\n      getAPI('/sc-analytic-indicators/api/dictionaries').then((res) => {\r\n        setFetchedDictionaryData({\r\n          loading: false,\r\n          data: res.data,\r\n        })\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <AdminTabs position={'top'}>\r\n      <TabPane tab='Панель администратора' key='1'>\r\n        <Controllers />\r\n        <Indicator />\r\n      </TabPane>\r\n      <TabPane tab='Индикатор стратегии' key='2'>\r\n        <Controllers isStrategy={true} />\r\n        <Indicator isStrategy={true} />\r\n      </TabPane>\r\n    </AdminTabs>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Indicators } from './components/Indicators'\r\n\r\nexport const CustomIndicator = () => {\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <Indicators />\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Tabs } from 'antd'\r\nimport { Card, Indicator, AdminTabs } from './components/common'\r\n\r\nexport const CustomIndicatorInfo = () => {\r\n  const { TabPane } = Tabs\r\n\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <AdminTabs position={'top'}>\r\n          <TabPane tab='Панель администратора' key='1'>\r\n            <Card>\r\n              <Indicator isLink={true} />\r\n            </Card>\r\n          </TabPane>\r\n          <TabPane tab='Индикатор стратегии' key='2'>\r\n            <Card>\r\n              <Indicator isStrategy={true} isLink={true} />\r\n            </Card>\r\n          </TabPane>\r\n        </AdminTabs>\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { ProtectedRoute } from './components/ProtectedRoute'\r\n\r\n//components\r\nimport { InfoPanel, Leaders } from './modules/CIP'\r\nimport { SignIn } from './components/SignIn'\r\nimport Users from './modules/Users/Users'\r\nimport Roles from './modules/Roles/Roles'\r\nimport Roadmap from './modules/Roadmap'\r\nimport { Dictionary, Indicator, IndicatorInfo } from './modules/CMD'\r\n\r\nimport { Home } from './components/Home'\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from='/' to='/Роли' />\r\n      <ProtectedRoute exact path='/Роли' component={Roles} />\r\n      <ProtectedRoute exact path='/Пользователи' component={Users} />\r\n      <ProtectedRoute exact path='/Карта ремонтных работ' component={Roadmap} />\r\n      <Route\r\n        path='/Справочники'\r\n        component={() => (\r\n          <Home>\r\n            <Dictionary />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Аналитические индикаторы'\r\n        component={() => (\r\n          <Home>\r\n            <Indicator />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Показатели индикаторов'\r\n        component={() => (\r\n          <Home>\r\n            <IndicatorInfo />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Руководители'\r\n        component={() => (\r\n          <Home>\r\n            <Leaders />\r\n          </Home>\r\n        )}\r\n      />\r\n      {/* <Route\r\n        path='/Инфопанели'\r\n        component={() => (\r\n          <Home>\r\n            <InfoPanel />\r\n          </Home>\r\n        )}\r\n      /> */}\r\n      <Route exact path='/авторизация' component={SignIn} />\r\n      <Route exact path='*' render={() => <Redirect to='/Роли' />} />\r\n    </Switch>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Routes } from './Routes'\r\n\r\n//styles\r\nimport 'antd/dist/antd.css'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return <Routes />\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport adminReducer from './features/admin/adminSlice'\r\nimport roadmapReducer from './features/roadmap/roadmapSlice'\r\nimport rolesReducer from './features/roles/rolesSlice'\r\nimport usersReducer from './features/users/usersSlice'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    roadmap: roadmapReducer,\r\n    admin: adminReducer,\r\n    roles: rolesReducer,\r\n    users: usersReducer,\r\n  },\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <React.StrictMode> */}\r\n    <Router basename='/admin'>\r\n      <App />\r\n    </Router>\r\n    {/* </React.StrictMode> */}\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}