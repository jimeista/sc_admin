{"version":3,"sources":["features/admin/adminSlice.js","features/roadmap/roadmapSlice.js","features/roles/rolesSlice.js","features/users/usersSlice.js","features/heads/headsSlice.js","components/SideNavMenu.js","components/MainContentWrapper.js","components/Home.js","components/ProtectedRoute.js","components/SignIn.js","common/EditableCell.js","common/Table.js","utils/users_table.js","utils/users_helper.js","modules/Users/UserTable.js","modules/Users/UserControllers.js","modules/Users/Users.js","modules/Roles/RoleControllers.js","utils/roles_table.js","modules/Roles/RoleTable.js","modules/Roles/Roles.js","modules/Roadmap/utils/yandex_helper.js","modules/Roadmap/common/YandexMap.js","modules/Roadmap/utils/usePrevious.js","modules/Roadmap/common/Steps.js","modules/Roadmap/common/Tabs.js","modules/Roadmap/utils/worklist_form.js","modules/Roadmap/components/WorkList/form/WorkDescription.js","modules/Roadmap/components/WorkList/form/WorkContractor.js","modules/Roadmap/components/WorkList/form/WorkStatus.js","modules/Roadmap/utils/helper.js","modules/Roadmap/components/WorkList/form/WorkConfirm.js","modules/Roadmap/components/WorkList/form/StepsWrapper.js","modules/Roadmap/components/WorkList/WorkListModal.js","modules/Roadmap/components/WorkList/WorkDetailsModal.js","modules/Roadmap/utils/table_helper.js","modules/Roadmap/components/WorkList/WorkListTable.js","modules/Roadmap/components/WorkList/index.js","modules/Roadmap/components/CrossList/form/SelectGroup.js","modules/Roadmap/components/CrossList/form/AddCrossWorks.js","modules/Roadmap/components/CrossList/CrossListModal.js","modules/Roadmap/components/CrossList/CrossDetailsModal.js","modules/Roadmap/components/CrossList/CrossListTable.js","modules/Roadmap/components/CrossList/index.js","modules/Roadmap/components/RoadMap.js","modules/Roadmap/index.js","modules/Heads/HeadsTable.js","utils/heads_table.js","common/Modal.js","modules/Heads/HeadsModal.js","modules/Heads/Heads.js","modules/CMD/context/main.js","modules/CMD/utils/api.js","modules/CMD/components/common/AdminButton.js","modules/CMD/components/common/AdminCard.js","modules/CMD/components/common/AdminIndicator.js","modules/CMD/utils/helper.js","modules/CMD/components/common/AdminInput.js","modules/CMD/components/common/AdminTabs.js","modules/CMD/components/IndicatorInfo/Controllers.js","modules/CMD/components/IndicatorInfo/IndicatorInfoTable.js","modules/CMD/components/IndicatorInfo/index.js","modules/CMD/components/common/AdminModal.js","modules/CMD/components/common/AdminSearch.js","modules/CMD/components/common/AdminSelect.js","modules/CMD/components/common/EditableCell.js","modules/CMD/components/common/AdminTable.js","modules/CMD/components/Dictionary/DictionaryTable.js","modules/CMD/components/Dictionary/Controllers.js","modules/CMD/components/Dictionary/index.js","modules/CMD/Dictionary.js","modules/CMD/components/Indicators/Controllers.js","modules/CMD/components/Indicators/index.js","modules/CMD/Indicator.js","modules/CMD/IndicatorInfo.js","Routes.js","App.js","index.js"],"names":["getCurrentUser","createAsyncThunk","data","a","axios","get","then","res","catch","err","console","log","getOrganisationList","putOrganisationList","put","id","adminSlice","createSlice","name","initialState","status","error","auth","organisationList","reducers","extraReducers","pending","state","action","fulfilled","payload","failed","map","i","BASE_ROADMAP_URL","getRoadmapOrganisations","r","getRoadmapRegions","getRoadmapCategories","getRoadmap","getIntersections","postRoadmap","ob","post","geometries","coordinates","mapData","type","JSON","parse","config","postIntersections","initialPost","intersection","putRoadmap","reedit","delete","deleteRoadmap","deleteIntersection","roadmapSlice","organisations","regions","categories","formData","current","intersectionsMapData","editedId","deletedId","deletedIntersectionId","intersections","formValidate","setCurrent","setMapData","setIntersectionsMapData","resetMapData","resetIntersectionsMapData","resetData","resetFormData","resetIntersectionsData","setEditedId","setDeletedId","setDeletedIntersectionId","rejected","category","find","region","organisation","index","findIndex","splice","actions","setIntersection","getRoles","isAdmin","roles","forEach","filter","repr","getModules","getRoleModules","modules","role","url","postRoleModules","post_new_role_module","permitted_modules","record_new_role_module","putRoleModule","removed","length","added","deleteRoleModule","role_modules","resetRoles","resetModules","resetRoleModules","record","indx","getUsers","postNewUser","editUser","deleteUser","getHeads","putHeads","server","client","headsSlice","SubMenu","Menu","SideNavMenu","width","useState","collapsed","btnheight","setState","useEffect","disabled","menu","useMemo","sidenavmenu","key","submenu","icon","MailOutlined","ContainerOutlined","title","className","menuitems","menuitem","Item","FileOutlined","to","style","onClick","height","MenuUnfoldOutlined","defaultSelectedKeys","defaultOpenKeys","mode","inlineCollapsed","MainContentWrapper","children","QuestionOutlined","marginRight","margin","Home","window","innerWidth","setWidth","resizeListener","document","documentElement","clientWidth","body","addEventListener","removeEventListener","display","padding","ProtectedRoute","Component","component","rest","useSelector","admin","render","props","Object","keys","pathname","from","location","SignIn","dispatch","useDispatch","username","exact","EditableCell","editing","dataIndex","placeholder","inputType","restProps","Option","Select","inputNode","allowClear","value","tagRender","label","closable","onClose","marginBottom","options","min","max","formatter","parser","replace","switchCase","rules","required","message","CustomTable","Form","useForm","form","editingKey","setEditingKey","arr","columns","align","_","isEditing","onSave","SaveOutlined","onConfirm","cancel","CloseOutlined","isEditable","edit","EditOutlined","isDeletable","onDelete","DeleteOutlined","setFieldsValue","validateFields","row","newData","item","handleEdit","handleDelete","errInfo","mergedColumns","col","editable","onCell","components","cell","bordered","dataSource","rowClassName","pagination","onChange","loading","setColumnsHelper","module","color","toUpperCase","onRequest","o","password","includes","abbreviation","split","React","memo","setDataSource","setDataSourceHelper","setData","record_","onAdd","fields","resetFields","htmlType","withRouter","users","role_options","organisation_options","useCallback","ids","setRoleColumns","setRoleDataSource","setOptions","renderGeoObjects","geo","geometry","fillColor","strokeColor","strokeWidth","editorDrawingCursor","editorMaxPoints","mapState","center","zoom","CustomYandexMap","roadmap","active","setActive","polygons","setPolygons","previousState","ref","useRef","usePrevious","geoObject","draw","instanceRef","createGeoObject","editor","startDrawing","events","add","e","originalEvent","newCoordinates","event","stopDrawing","geoObjects","justifyContent","alignItems","renderButtons","minWidth","minHeight","defaultState","Step","Steps","CustomSteps","steps","callback","validate","size","content","paddingLeft","CustomTabs","tabs","TabPane","Tabs","tab","child","TextArea","Input","renderTextArea","isOpen","valuePropName","hidden","getValueFromEvent","target","renderDatePicker","picker","handleChange","text","picker_","format","Group","compact","string","moment","marginLeft","checked","upload_props","listType","headers","authorization","info","file","fileList","success","WorkDescription","iscanvas","setCanvas","isclosured","setClosured","pickerStart","setPickerStart","pickerEnd","setPickerEnd","getFieldValue","prop","hasFeedback","op","renderSelects","noStyle","UploadOutlined","WorkContractor","phone","setPhone","country","WorkStatus","setDisabled","nameEnToRuWorkListHelper","prepareToShowDetailsObToArr","push","undefined","validateRoadWorkForm","percentage","is_hidden","is_canceled","commentary","setCoordinates","ii","y","x","k","WorkConfirm","renderForm","new_arr","StepsWrapper","setSteps","WorkListModal","visible","setVisible","postFormData","onOk","onCancel","footer","WorkDetailsModal","onCloseModal","putFormData","setFilterSelectsHelper","response","result","date_filters","reverse","WorkListTable","setRecord","filtered","setFiltered","filters","onFilter","indexOf","rule","sorter","b","sortDirections","setWorkListTableColumnsHelper","address","toLowerCase","toString","WorkList","order","AddCrossWorks","count","setCount","flexWrap","marginTop","shape","CrossListModal","area","CrossDetailsModal","array","setArray","list","CrossListTable","setCrossListDataSourceHelper","cols","setCrossListTableColumnsHelper","isIncluded","CrossList","RoadMap","position","tags","tag","CustomModal","showModal","handleOk","handleCancel","this","btntext","btnstyle","heads","AppContext","createContext","AppContextProvider","selectedValue","setSelectedValue","selectedDictionaryName","setSelectedDictionaryName","selectedIndustry","setSelectedIndustry","filteredData","setFilteredData","indicators","setIndicators","searchText","setSearchText","fetchedDictionaryData","setFetchedDictionaryData","fetchedIndicatorInfoData","setFetchedIndicatorInfoData","fetchedIndicatorData","setFetchedIndicatorData","fetchedIndicatorStrategyData","setFetchedIndicatorStrategyData","modalIndicator","setModalIndicator","Provider","dictionary_names","getAPI","postAPI","putAPI","deleteAPI","AdminButton","handleAdd","text2","text1","text3","handleClick","renderBTN","AdminCard","AdminIndicator","isLink","isStrategy","open","setOpen","useContext","names","sort","option_data","option","Отрасль","concat","obj","strcmp","Индикатор","option_name","charAt","slice","dictionaries","Тип","indicator","getObjectKeys","dictionary_name","save","data_post","obb","setFetchedData","AdminInput","defaultValue","inptRef","AdminTabs","defaultActiveKey","tabPosition","classname","Controllers","plan","date","alert","setStatus","dateString","year","locale","month","background","callBack","fact","planned","description","setTimeout","lang","today","now","ok","clear","yearFormat","dateFormat","dayFormat","dateTimeFormat","monthFormat","monthBeforeYear","timePickerLocale","weekFormat","IndicatorInfoTable","substr","План","comment","Факт","url2","IndicatorInfo","AdminModal","handleCloseModal","AdminSearch","input","AdminSelect","handleChangeDictionaryName","handleChangeOptionName","selected_value","setTreeData","treeData","AdminTable","some","isFilter","setIndicator","filterTitle","filterConfirm","filterReset","filterEmptyText","selectAll","selectInvert","selectionAll","sortTitle","expand","collapse","triggerDesc","triggerAsc","cancelSort","pageSizeOptions","showSizeChanger","items_per_page","DictionaryTable","All","ant_form","setIsError","inptRef2","Dictionary","CustomDictionary","inputRef","handleIndicator","selects","industry","select","renderSelect","typeId","Indicators","CustomIndicator","CustomIndicatorInfo","Routes","path","Roles","Users","Roadmap","Heads","App","store","configureStore","reducer","roadmapReducer","adminReducer","rolesReducer","usersReducer","headsReducer","ReactDOM","basename","getElementById"],"mappings":"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","file":"static/js/main.88f1b87a.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getCurrentUser = createAsyncThunk(\r\n  'admin/getCurrentUser',\r\n  async (data) => {\r\n    const url = '/sc-api-gateway/acl/users/current'\r\n    const res = await axios\r\n      .get(url)\r\n      .then((res) => res.data)\r\n      .catch((err) => console.log(err))\r\n\r\n    return res\r\n  }\r\n)\r\n\r\nexport const getOrganisationList = createAsyncThunk(\r\n  'admin/getOrganisationList',\r\n  async () => {\r\n    const url = '/sc-api-gateway/acl/organisations'\r\n    const res = await axios\r\n      .get(url)\r\n      .then((res) => res.data)\r\n      .catch((err) => console.log(err))\r\n\r\n    return res\r\n  }\r\n)\r\n\r\nexport const putOrganisationList = createAsyncThunk(\r\n  'admin/putOrganisationList',\r\n  async (data) => {\r\n    await axios.put(`/sc-api-gateway/acl/organisations/${data.id}`, data)\r\n    return data\r\n  }\r\n)\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'admin',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n    auth: {\r\n      data: {},\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    organisationList: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: null,\r\n    },\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    //get current user info\r\n    [getCurrentUser.pending]: (state, action) => {\r\n      state.auth.status = 'loading'\r\n    },\r\n    [getCurrentUser.fulfilled]: (state, action) => {\r\n      state.auth.status = 'success'\r\n      state.auth.data = action.payload\r\n    },\r\n    [getCurrentUser.failed]: (state, action) => {\r\n      state.auth.status = 'failed'\r\n      state.auth.error = action.payload\r\n    },\r\n\r\n    //get organisation list\r\n    [getOrganisationList.pending]: (state, action) => {\r\n      state.organisationList.status = 'loading'\r\n    },\r\n    [getOrganisationList.fulfilled]: (state, action) => {\r\n      state.organisationList.status = 'success'\r\n      state.organisationList.data = action.payload\r\n    },\r\n    [getOrganisationList.failed]: (state, action) => {\r\n      state.organisationList.status = 'failed'\r\n      state.organisationList.error = action.payload\r\n    },\r\n\r\n    // //put organisation list\r\n    [putOrganisationList.pending]: (state, action) => {\r\n      state.organisationList.status = 'loading'\r\n    },\r\n    [putOrganisationList.fulfilled]: (state, action) => {\r\n      state.organisationList.status = 'success'\r\n      state.organisationList.data = state.organisationList.data.map((i) =>\r\n        i.id === action.payload.id ? { ...action.payload } : i\r\n      )\r\n    },\r\n    [putOrganisationList.failed]: (state, action) => {\r\n      state.organisationList.status = 'failed'\r\n      state.organisationList.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// export const {} = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst BASE_ORGANIZATIONS_URL = '/sc-roadworks/api/organisations'\r\nconst BASE_REGIONS_URL = '/sc-roadworks/api/regions'\r\nconst BASE_CATEGORIES_URL = '/sc-roadworks/api/categories'\r\nconst BASE_ROADMAP_URL = '/sc-roadworks/api/roadworks'\r\nconst BASE_INTERSECTIONS_URL = '/sc-roadworks/api/intersections'\r\n\r\nexport const getRoadmapOrganisations = createAsyncThunk(\r\n  'roadmap/getRoadmapOrganisations',\r\n  async () => await axios.get(BASE_ORGANIZATIONS_URL).then((r) => r.data)\r\n)\r\n\r\nexport const getRoadmapRegions = createAsyncThunk(\r\n  'roadmap/getRoadmapRegions',\r\n  async () => await axios.get(BASE_REGIONS_URL).then((r) => r.data)\r\n)\r\n\r\nexport const getRoadmapCategories = createAsyncThunk(\r\n  'roadmap/getRoadmapCategories',\r\n  async () => await axios.get(BASE_CATEGORIES_URL).then((r) => r.data)\r\n)\r\n\r\nexport const getRoadmap = createAsyncThunk(\r\n  'roadmap/getRoadmap',\r\n  async () => await axios.get(BASE_ROADMAP_URL).then((r) => r.data)\r\n)\r\n\r\nexport const getIntersections = createAsyncThunk(\r\n  'roadmap/getIntersections',\r\n  async () => await axios.get(BASE_INTERSECTIONS_URL).then((r) => r.data)\r\n)\r\n\r\nexport const postRoadmap = createAsyncThunk(\r\n  'roadmap/postRoadmap',\r\n  async (ob) => {\r\n    const res = await axios.post(BASE_ROADMAP_URL, ob.data)\r\n    // console.log(res)\r\n    await axios.post(`/sc-roadworks/api/roadworks/${res.data}/geometries`, {\r\n      geometries: ob.geometries,\r\n    })\r\n\r\n    const coordinates = ob.mapData.map((i) => {\r\n      if (i.type === 'polyline') {\r\n        return i.coordinates\r\n      } else {\r\n        return i.coordinates[0]\r\n      }\r\n    })\r\n\r\n    return {\r\n      data: JSON.parse(res.config.data),\r\n      id: res.data,\r\n      geometries: {\r\n        type: 'polygon',\r\n        coordinates,\r\n      },\r\n    }\r\n  }\r\n)\r\n\r\nexport const postIntersections = createAsyncThunk(\r\n  'roadmap/postIntersections',\r\n  async (initialPost) => {\r\n    const res = await axios.post(BASE_INTERSECTIONS_URL, initialPost)\r\n    return {\r\n      id: res.data,\r\n      ...initialPost,\r\n      intersection: { coordinates: [], type: 'Point' },\r\n    }\r\n  }\r\n)\r\n\r\nexport const putRoadmap = createAsyncThunk(\r\n  'roadmap/putRoadmap',\r\n  async (post) => {\r\n    if (post.reedit) {\r\n      await axios.put(`${BASE_ROADMAP_URL}/${post.id}`, {\r\n        ...post.data.data,\r\n        'status-form': post.data.data.status,\r\n      })\r\n\r\n      //delete geometries and post new coordinates\r\n      await axios.delete(`/sc-roadworks/api/roadworks/${post.id}/geometries`)\r\n      await axios.post(`/sc-roadworks/api/roadworks/${post.id}/geometries`, {\r\n        geometries: post.data.geometries,\r\n      })\r\n\r\n      const coordinates = post.mapData.map((i) => {\r\n        if (i.type === 'polyline') {\r\n          return i.coordinates\r\n        } else {\r\n          return i.coordinates[0]\r\n        }\r\n      })\r\n\r\n      return {\r\n        reedit: post.reedit,\r\n        data: post.data.data,\r\n        id: post.id,\r\n        geometries: {\r\n          type: 'polygon',\r\n          coordinates,\r\n        },\r\n      }\r\n    } else {\r\n      await axios.put(`${BASE_ROADMAP_URL}/${post.id}`, {\r\n        'status-form': post.data,\r\n      })\r\n\r\n      return post\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteRoadmap = createAsyncThunk(\r\n  'roadmap/deleteRoadmap',\r\n  async (id) => {\r\n    await axios.delete(`${BASE_ROADMAP_URL}/${id}`)\r\n    return id\r\n  }\r\n)\r\n\r\nexport const deleteIntersection = createAsyncThunk(\r\n  'roadmap/deleteIntersection',\r\n  async (id) => {\r\n    await axios.delete(`${BASE_INTERSECTIONS_URL}/${id}`)\r\n    return id\r\n  }\r\n)\r\n\r\nexport const roadmapSlice = createSlice({\r\n  name: 'roadmap',\r\n  initialState: {\r\n    organisations: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    regions: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    categories: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n\r\n    formData: {}, //modal form submit values\r\n    current: 0, //modal current step\r\n\r\n    mapData: [], //modal yandex map coordinates data for road works\r\n    intersectionsMapData: [], //modal yandex map coordinates data for intersections\r\n\r\n    editedId: null,\r\n    deletedId: null,\r\n    deletedIntersectionId: null,\r\n    intersections: {\r\n      status: 'idle',\r\n      error: null,\r\n      data: [],\r\n    },\r\n  },\r\n  reducers: {\r\n    formValidate: (state, action) => {\r\n      state.formData = { ...state.formData, ...action.payload }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload\r\n    },\r\n    setMapData: (state, action) => {\r\n      state.mapData = [...state.mapData, ...action.payload]\r\n    },\r\n    setIntersectionsMapData: (state, action) => {\r\n      state.intersectionsMapData = action.payload\r\n    },\r\n    resetMapData: (state) => {\r\n      state.mapData = []\r\n    },\r\n    resetIntersectionsMapData: (state) => {\r\n      state.intersectionsMapData = []\r\n    },\r\n    resetData: (state) => {\r\n      state.data = []\r\n      state.status = 'idle'\r\n    },\r\n    resetFormData: (state) => {\r\n      state.formData = {}\r\n    },\r\n    resetIntersectionsData: (state) => {\r\n      state.intersections.data = []\r\n      state.intersections.status = 'idle'\r\n    },\r\n    setEditedId: (state) => {\r\n      state.editedId = null\r\n    },\r\n    setDeletedId: (state) => {\r\n      state.deletedId = null\r\n    },\r\n    setDeletedIntersectionId: (state) => {\r\n      state.deletedIntersectionId = null\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //get organisation list\r\n    [getRoadmapOrganisations.fulfilled]: (state, action) => {\r\n      state.organisations.status = 'success'\r\n      state.organisations.data = action.payload\r\n    },\r\n    [getRoadmapOrganisations.pending]: (state) => {\r\n      state.organisations.status = 'loading'\r\n    },\r\n    [getRoadmapOrganisations.rejected]: (state, action) => {\r\n      state.organisations.status = 'failed'\r\n      state.organisations.error = action.payload\r\n    },\r\n\r\n    //get region list\r\n    [getRoadmapRegions.fulfilled]: (state, action) => {\r\n      state.regions.status = 'success'\r\n      state.regions.data = action.payload\r\n    },\r\n    [getRoadmapRegions.pending]: (state, action) => {\r\n      state.regions.status = 'loading'\r\n    },\r\n    [getRoadmapRegions.rejected]: (state, action) => {\r\n      state.regions.status = 'failed'\r\n      state.regions.error = action.payload\r\n    },\r\n\r\n    //get categories list\r\n    [getRoadmapCategories.fulfilled]: (state, action) => {\r\n      state.categories.status = 'success'\r\n      state.categories.data = action.payload\r\n    },\r\n    [getRoadmapCategories.pending]: (state, action) => {\r\n      state.categories.status = 'loading'\r\n    },\r\n    [getRoadmapCategories.rejected]: (state, action) => {\r\n      state.categories.status = 'failed'\r\n      state.categories.error = action.payload\r\n    },\r\n\r\n    //get road works\r\n    [getRoadmap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = action.payload\r\n    },\r\n    [getRoadmap.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [getRoadmap.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //post road new work\r\n    [postRoadmap.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [postRoadmap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      let ob = action.payload.data\r\n      const id = action.payload.id\r\n      const geometries = action.payload.geometries\r\n      const category = state.categories.data.find(\r\n        (i) => i.id === action.payload.data.category\r\n      ).name\r\n      const region = state.regions.data.find(\r\n        (i) => i.id === action.payload.data.region\r\n      ).name\r\n      const organisation = state.organisations.data.find(\r\n        (i) => i.id === action.payload.data.organisation\r\n      ).name\r\n      ob = { ...ob, category, region, organisation, id, geometries }\r\n      state.data = [ob, ...state.data]\r\n    },\r\n\r\n    //update road work\r\n    [putRoadmap.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [putRoadmap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      // let data = state.data.find((i) => i.id === action.payload.id)\r\n      let index = state.data.findIndex((i) => i.id === action.payload.id)\r\n      state.editedId = action.payload.id\r\n\r\n      //ids to names\r\n      if (action.payload.reedit) {\r\n        console.log(action.payload, action.payload.data)\r\n        const category = state.categories.data.find(\r\n          (i) => i.id === action.payload.data.category\r\n        ).name\r\n        const region = state.regions.data.find(\r\n          (i) => i.id === action.payload.data.region\r\n        ).name\r\n        const organisation = state.organisations.data.find(\r\n          (i) => i.id === action.payload.data.organisation\r\n        ).name\r\n        state.data[index] = {\r\n          ...action.payload.data,\r\n          category,\r\n          region,\r\n          organisation,\r\n          id: action.payload.id,\r\n        }\r\n        state.data[index].geometries = action.payload.geometries\r\n      } else {\r\n        state.data[index].status = {\r\n          ...state.data[index].status,\r\n          ...action.payload.data,\r\n        }\r\n      }\r\n    },\r\n\r\n    //delete road work\r\n    [deleteRoadmap.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [deleteRoadmap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      let index = state.data.findIndex((i) => i.id === action.payload)\r\n      state.data.splice(index, 1)\r\n      state.deletedId = action.payload\r\n    },\r\n\r\n    //get intersections\r\n    [getIntersections.fulfilled]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      state.intersections.data = action.payload\r\n    },\r\n    [getIntersections.pending]: (state) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [getIntersections.rejected]: (state, action) => {\r\n      state.intersections.status = 'failed'\r\n      state.intersections.error = action.payload\r\n    },\r\n\r\n    //post new intersection\r\n    [postIntersections.pending]: (state) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [postIntersections.fulfilled]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      state.intersections.data = [action.payload, ...state.intersections.data]\r\n    },\r\n\r\n    //delete intersection\r\n    [deleteIntersection.pending]: (state) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [deleteIntersection.fulfilled]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      let index = state.intersections.data.findIndex(\r\n        (i) => i.id === action.payload\r\n      )\r\n      state.intersections.data.splice(index, 1)\r\n      state.deletedIntersectionId = action.payload\r\n      console.log(action.payload, index)\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  formValidate,\r\n  setCurrent,\r\n  setMapData,\r\n  setIntersectionsMapData,\r\n  setIntersection,\r\n  resetFormData,\r\n  setEditedId,\r\n  setDeletedId,\r\n  setDeletedIntersectionId,\r\n  resetIntersectionsMapData,\r\n  resetMapData,\r\n  resetData,\r\n  resetIntersectionsData,\r\n} = roadmapSlice.actions\r\n\r\nexport default roadmapSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getRoles = createAsyncThunk('admin/getRoles', async (auth) => {\r\n  const url = '/sc-api-gateway/acl/roles'\r\n  let isAdmin = false\r\n\r\n  //check if SUPER-ADMIN is loged to show super-admin role\r\n  auth.roles.forEach((name) => {\r\n    if (name === 'SUPER-ADMIN') {\r\n      isAdmin = true\r\n    }\r\n  })\r\n\r\n  //validate SUPER-ADMIN privileges\r\n  const res = await axios\r\n    .get(url)\r\n    .then((res) => {\r\n      if (!isAdmin) {\r\n        return res.data.filter((i) => i.repr !== 'Супер-Администратор')\r\n      }\r\n      return res.data\r\n    })\r\n    .catch((err) => console.log(err))\r\n\r\n  return res\r\n})\r\n\r\nexport const getModules = createAsyncThunk('admin/getModules', async (data) => {\r\n  const url = '/sc-api-gateway/acl/modules'\r\n  const res = await axios\r\n    .get(url)\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err))\r\n\r\n  return res\r\n})\r\n\r\nexport const getRoleModules = createAsyncThunk(\r\n  'admin/getRoleModules',\r\n  async (roles) => {\r\n    let modules = []\r\n    for (const role of roles) {\r\n      const url = `/sc-api-gateway/acl/roles/${role.id}/authorities`\r\n      let data = await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          // console.log(res.data)\r\n          return {\r\n            id: role.id,\r\n            repr: role.repr,\r\n            'permitted-modules': res.data,\r\n          }\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n      modules = [...modules, data]\r\n    }\r\n\r\n    return modules\r\n  }\r\n)\r\n\r\nexport const postRoleModules = createAsyncThunk(\r\n  'admin/postRoleModules',\r\n  async (data) => {\r\n    let id = await axios\r\n      .post('/sc-api-gateway/acl/roles', data.post_new_role_module)\r\n      .then((res) => res.data)\r\n\r\n    let permitted_modules = await axios\r\n      .get(`/sc-api-gateway/acl/roles/${id}/authorities`)\r\n      .then((res) => res.data)\r\n\r\n    return {\r\n      ...data.record_new_role_module,\r\n      id,\r\n      'permitted-modules': permitted_modules,\r\n    }\r\n  }\r\n)\r\n\r\nexport const putRoleModule = createAsyncThunk(\r\n  'admin/putRoleModule',\r\n  async (data) => {\r\n    //delete module authority\r\n    if (data.removed.length > 0) {\r\n      for (const id of data.removed) {\r\n        await axios.delete(`/sc-api-gateway/acl/authorities/${id}`)\r\n        // .then((res) => console.log('removed module authority', res))\r\n      }\r\n    }\r\n\r\n    //add new authority\r\n    if (data.added.length > 0) {\r\n      for (const id of data.added) {\r\n        await axios.post(`/sc-api-gateway/acl/roles/${data.id}/authorities`, {\r\n          'module-id': id,\r\n        })\r\n        // .then((res) => console.log('added', res))\r\n      }\r\n    }\r\n\r\n    //change role name\r\n    await axios.put(`/sc-api-gateway/acl/roles/${data.id}`, { repr: data.repr })\r\n\r\n    let permitted_modules = await axios\r\n      .get(`/sc-api-gateway/acl/roles/${data.id}/authorities`)\r\n      .then((res) => res.data)\r\n\r\n    return {\r\n      id: data.id,\r\n      repr: data.repr,\r\n      'permitted-modules': permitted_modules,\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteRoleModule = createAsyncThunk(\r\n  'admin/deleteRoleModule',\r\n  async (id) => {\r\n    axios.delete(`/sc-api-gateway/acl/roles/${id}`)\r\n    return id\r\n  }\r\n)\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'roles',\r\n  initialState: {\r\n    roles: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    modules: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    role_modules: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n  },\r\n  reducers: {\r\n    resetRoles: (state) => {\r\n      state.roles.status = 'idle'\r\n      state.roles.data = []\r\n    },\r\n    resetModules: (state) => {\r\n      state.modules.status = 'idle'\r\n      state.modules.data = []\r\n    },\r\n    resetRoleModules: (state) => {\r\n      state.role_modules.status = 'idle'\r\n      state.role_modules.data = []\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //get roles\r\n    [getRoles.pending]: (state) => {\r\n      state.roles.status = 'loading'\r\n    },\r\n    [getRoles.fulfilled]: (state, action) => {\r\n      state.roles.status = 'success'\r\n      state.roles.data = action.payload\r\n    },\r\n    [getRoles.failed]: (state, action) => {\r\n      state.roles.status = 'failed'\r\n      state.roles.error = action.payload\r\n    },\r\n\r\n    //get all available modules\r\n    [getModules.pending]: (state) => {\r\n      state.modules.status = 'loading'\r\n    },\r\n    [getModules.fulfilled]: (state, action) => {\r\n      state.modules.status = 'success'\r\n      state.modules.data = action.payload\r\n    },\r\n    [getModules.failed]: (state, action) => {\r\n      state.modules.status = 'failed'\r\n      state.modules.error = action.payload\r\n    },\r\n\r\n    //get all roles' modules\r\n    [getRoleModules.pending]: (state) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [getRoleModules.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = action.payload\r\n    },\r\n    [getRoleModules.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //post new role\r\n    [postRoleModules.pending]: (state) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [postRoleModules.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = [action.payload, ...state.role_modules.data]\r\n      state.roles.data = [\r\n        { repr: action.payload.repr, id: action.payload.id },\r\n        ...state.roles.data,\r\n      ]\r\n    },\r\n    [postRoleModules.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //update role module\r\n    [putRoleModule.pending]: (state) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [putRoleModule.fulfilled]: (state, action) => {\r\n      let record = action.payload\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = state.role_modules.data.map((i) =>\r\n        i.id === record.id ? record : i\r\n      )\r\n      state.roles.data = state.roles.data.map((i) => {\r\n        return i.id === record.id ? { id: record.id, repr: record.repr } : i\r\n      })\r\n    },\r\n    [putRoleModule.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //delete role module\r\n    [deleteRoleModule.pending]: (state) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [deleteRoleModule.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      let index = state.role_modules.data.findIndex(\r\n        (i) => i.id === action.payload\r\n      )\r\n      state.role_modules.data.splice(index, 1)\r\n      let indx = state.roles.data.findIndex((i) => i.id === action.payload)\r\n      state.roles.data.splice(indx, 1)\r\n    },\r\n    [deleteRoleModule.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { resetRoles, resetModules, resetRoleModules } = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getUsers = createAsyncThunk('admin/getUsers', async () => {\r\n  const url = '/sc-api-gateway/acl/users'\r\n  let res = await axios.get(url).then((res) => res.data)\r\n  return res\r\n})\r\n\r\nexport const postNewUser = createAsyncThunk(\r\n  'admin/postNewUser',\r\n  async (data) => {\r\n    const url = '/sc-api-gateway/acl/users'\r\n    let id = await axios.post(url, data.post).then((res) => res.data)\r\n\r\n    return { 'account-id': id, ...data.record }\r\n  }\r\n)\r\n\r\nexport const editUser = createAsyncThunk('admin/editUser', async (data) => {\r\n  const url = `/sc-api-gateway/acl/users/${data.record['account-id']}`\r\n  await axios.put(url, data.post)\r\n\r\n  return data.record\r\n})\r\n\r\nexport const deleteUser = createAsyncThunk('admin/deleteUser', async (id) => {\r\n  const url = `/sc-api-gateway/acl/users/${id}`\r\n  await axios.delete(url)\r\n\r\n  return id\r\n})\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'roles',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle',\r\n    error: '',\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    //fetch users\r\n    [getUsers.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [getUsers.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = action.payload\r\n    },\r\n    [getUsers.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //post user\r\n    [postNewUser.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [postNewUser.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = [action.payload, ...state.data]\r\n    },\r\n    [postNewUser.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //edit user\r\n    [editUser.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [editUser.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = state.data.map((i) =>\r\n        i['account-id'] === action.payload['account-id'] ? action.payload : i\r\n      )\r\n    },\r\n    [editUser.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //delete user\r\n    [deleteUser.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [deleteUser.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      let index = state.data.findIndex((i) => i.id === action.payload)\r\n      state.data.splice(index, 1)\r\n    },\r\n    [deleteUser.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {} = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getHeads = createAsyncThunk('admin/getHeads', async (data) => {\r\n  const url = '/sc-api-gateway/acl/supervisors'\r\n  const res = await axios\r\n    .get(url)\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err))\r\n\r\n  return res\r\n})\r\n\r\nexport const putHeads = createAsyncThunk('admin/putHeads', async (data) => {\r\n  await axios.put(`/sc-api-gateway/acl/supervisors/${data.id}`, data.server)\r\n  return { id: data.id, record: data.client }\r\n})\r\n\r\nconst headsSlice = createSlice({\r\n  name: 'heads',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    //get current user info\r\n    [getHeads.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [getHeads.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = action.payload\r\n    },\r\n    [getHeads.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //put current user info\r\n    [putHeads.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [putHeads.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = state.data.map((i) => {\r\n        if (i['supervisor-id'] === action.payload.id) {\r\n          return { ...i, ...action.payload.record }\r\n        }\r\n\r\n        return i\r\n      })\r\n    },\r\n    [putHeads.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// export const {} = headsSlice.actions\r\n\r\nexport default headsSlice.reducer\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Menu, Button } from 'antd'\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  // AppstoreOutlined,\r\n  // PieChartOutlined,\r\n  // DesktopOutlined,\r\n  ContainerOutlined,\r\n  MailOutlined,\r\n  FileOutlined,\r\n} from '@ant-design/icons'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nexport const SideNavMenu = ({ width }) => {\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n    btnheight: 50,\r\n  })\r\n\r\n  const toggleCollapsed = () => {\r\n    setState((state) => ({ ...state, collapsed: !state.collapsed }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    width < 600 &&\r\n      setState((state) => ({\r\n        ...state,\r\n        disabled: true,\r\n        collapsed: false,\r\n      }))\r\n  }, [width])\r\n\r\n  const menu = useMemo(() => {\r\n    return sidenavmenu.map((ob, index) => (\r\n      <SubMenu\r\n        key={ob.submenu}\r\n        icon={index % 2 === 0 ? <MailOutlined /> : <ContainerOutlined />}\r\n        title={ob.submenu}\r\n        className='SideNavMenu_style_sub_menu'\r\n      >\r\n        {ob.menuitems.map((menuitem) => (\r\n          <Menu.Item\r\n            key={menuitem}\r\n            icon={<FileOutlined />}\r\n            className='SideNavMenu_style_menu_item'\r\n          >\r\n            <Link to={`${menuitem}`}>{menuitem}</Link>\r\n          </Menu.Item>\r\n        ))}\r\n      </SubMenu>\r\n    ))\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      style={{ width: width < 600 ? '100%' : state.collapsed ? 80 : 350 }}\r\n      className='SideNavMenu_style'\r\n    >\r\n      <Button\r\n        type='primary'\r\n        onClick={toggleCollapsed}\r\n        style={{\r\n          height: state.btnheight,\r\n          width: '100%',\r\n        }}\r\n        className='SideNavMenu_style_button'\r\n      >\r\n        {width > 600 && state.collapsed ? (\r\n          <MenuUnfoldOutlined />\r\n        ) : (\r\n          'Панель администратора'\r\n        )}\r\n      </Button>\r\n      <Menu\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode='inline'\r\n        inlineCollapsed={width < 600 ? false : state.collapsed}\r\n        style={{ height: '100%' }}\r\n      >\r\n        {menu}\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst sidenavmenu = [\r\n  {\r\n    submenu: 'Управление мастер-данными',\r\n    menuitems: [\r\n      'Справочники',\r\n      'Аналитические индикаторы',\r\n      'Показатели индикаторов',\r\n      'Карта ремонтных работ',\r\n    ],\r\n  },\r\n  {\r\n    submenu: 'Управление информационной панелью',\r\n    // menuitems: ['Руководители', 'Инфопанели'],\r\n    menuitems: ['Руководители'],\r\n  },\r\n  // {\r\n  //   submenu: 'Управление открытыми данными',\r\n  //   menuitems: [],\r\n  // },\r\n  // {\r\n  //   submenu: 'Аудирование данных',\r\n  //   menuitems: ['Контроль', 'Аудит и сверка'],\r\n  // },\r\n  // {\r\n  //   submenu: 'Управление информационными данными',\r\n  //   menuitems: [],\r\n  // },\r\n  {\r\n    submenu: 'Управление пользователями',\r\n    menuitems: ['Роли', 'Пользователи'],\r\n  },\r\n]\r\n","import React from 'react'\r\n\r\nimport { Button } from 'antd'\r\nimport { QuestionOutlined } from '@ant-design/icons'\r\n\r\nexport const MainContentWrapper = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{ width: '100%', height: '100%' }}\r\n      className='MainContent_style'\r\n    >\r\n      <div className='header header-user-wrapper MainContent_style_header'>\r\n        <div className='MainContent_style_href'>\r\n          {/* <a href='#'>ru</a> | <a href='#'>kaz</a> */}\r\n        </div>\r\n        <div className='MainContent_style_header'>\r\n          <QuestionOutlined style={{ marginRight: '1rem' }} />\r\n          <span\r\n            style={{ margin: '0 1rem' }}\r\n            className='MainContent_style_header_fio'\r\n          >\r\n            ФИО/Организация\r\n          </span>\r\n          <Button className='MainContent_style_header_btn'>Выйти</Button>\r\n        </div>\r\n      </div>\r\n      <div className='main-content-wrapper MainContent_style_body'>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { SideNavMenu } from './SideNavMenu'\r\nimport { MainContentWrapper } from './MainContentWrapper'\r\n\r\nexport const Home = ({ children }) => {\r\n  let [width, setWidth] = useState(window.innerWidth)\r\n\r\n  const getWidth = () =>\r\n    window.innerWidth ||\r\n    document.documentElement.clientWidth ||\r\n    document.body.clientWidth\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      // change width from the state object\r\n      setWidth(getWidth())\r\n    }\r\n    // set resize listener\r\n    window.addEventListener('resize', resizeListener)\r\n\r\n    // clean up function\r\n    return () => {\r\n      // remove resize listener\r\n      window.removeEventListener('resize', resizeListener)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className='App Admin_main_style'\r\n      style={{ display: width < 600 ? 'block' : 'flex' }}\r\n    >\r\n      <SideNavMenu width={width} />\r\n      <MainContentWrapper>\r\n        <div\r\n          style={{ width: '100%', margin: '20px auto', padding: 5 }}\r\n          className='Admin_main_style_content'\r\n        >\r\n          {children}\r\n        </div>\r\n      </MainContentWrapper>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { Home } from './Home'\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { auth } = useSelector((state) => state.admin)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (Object.keys(auth.data).length > 0) {\r\n          return (\r\n            <Home>\r\n              <Component />\r\n            </Home>\r\n          )\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: '/авторизация', state: { from: props.location } }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nimport { getCurrentUser } from '../features/admin/adminSlice'\r\n\r\nexport const SignIn = (props) => {\r\n  const dispatch = useDispatch()\r\n  const { auth } = useSelector((state) => state.admin)\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser())\r\n  }, [dispatch])\r\n\r\n  if (auth.data && auth.data.username) {\r\n    return (\r\n      <Route\r\n        render={() => (\r\n          <Redirect\r\n            exact\r\n            // to={props.history.location.state.pathname}\r\n            to={'/Карта ремонтных работ'}\r\n            from='/авторизация'\r\n          />\r\n        )}\r\n      />\r\n    )\r\n  }\r\n\r\n  return ''\r\n}\r\n","import React from 'react'\r\nimport { Input, InputNumber, Form, Select, Tag } from 'antd'\r\n\r\nexport const EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  placeholder,\r\n  title,\r\n  data,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const { Option } = Select\r\n\r\n  const switchCase = (type) => {\r\n    switch (type) {\r\n      case 'select':\r\n        return (\r\n          <Select placeholder={placeholder} allowClear>\r\n            {data.map((value) => (\r\n              <Option key={`${value}- ${placeholder}`} value={value}>\r\n                {value}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        )\r\n\r\n      case 'multi-select':\r\n        function tagRender(props) {\r\n          const { label, closable, onClose } = props\r\n\r\n          return (\r\n            <Tag\r\n              closable={closable}\r\n              onClose={onClose}\r\n              style={{ marginRight: 3 }}\r\n            >\r\n              {label}\r\n            </Tag>\r\n          )\r\n        }\r\n        return (\r\n          <Select\r\n            placeholder='Модули'\r\n            mode='multiple'\r\n            tagRender={tagRender}\r\n            style={{ width: '100%', marginBottom: 15 }}\r\n            options={data}\r\n          />\r\n        )\r\n      case 'number':\r\n        return (\r\n          <InputNumber\r\n            min={0}\r\n            max={100}\r\n            formatter={(value) => `${value}%`}\r\n            parser={(value) => value.replace('%', '')}\r\n          />\r\n        )\r\n      default:\r\n        return (\r\n          <Input\r\n            className='Edit_input_style'\r\n            placeholder={placeholder}\r\n            allowClear\r\n          />\r\n        )\r\n    }\r\n  }\r\n\r\n  const inputNode = switchCase(inputType)\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, Popconfirm, Form, Space } from 'antd'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from '@ant-design/icons'\r\n\r\nimport { EditableCell } from './EditableCell'\r\n\r\nexport const CustomTable = (props) => {\r\n  const [form] = Form.useForm()\r\n  const [editingKey, setEditingKey] = useState('')\r\n\r\n  const arr = [\r\n    ...props.columns,\r\n    {\r\n      title: 'Действие',\r\n      dataIndex: '',\r\n      width: '5%',\r\n      align: 'center',\r\n      key: 'x',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record)\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              onClick={() => onSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              <SaveOutlined className='icon_edit_btn_style' title='Сохранить' />\r\n            </a>\r\n            <Popconfirm\r\n              title='Вы уверены что хотите оменить изменения?'\r\n              onConfirm={cancel}\r\n            >\r\n              <CloseOutlined className='icon_edit_btn_style' title='Отменить' />\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <Space>\r\n            {props.isEditable && (\r\n              <a\r\n                disabled={editingKey !== ''}\r\n                onClick={() => edit(record, form, setEditingKey)}\r\n              >\r\n                <EditOutlined\r\n                  className='icon_edit_btn_style'\r\n                  title='Редактировать'\r\n                />\r\n              </a>\r\n            )}\r\n            {props.isDeletable && (\r\n              <Popconfirm\r\n                title='Вы уверены что хотите удалить даныне?'\r\n                onConfirm={() => onDelete(record)}\r\n              >\r\n                <DeleteOutlined\r\n                  className='icon_edit_btn_style'\r\n                  title='Удалить'\r\n                />\r\n              </Popconfirm>\r\n            )}\r\n          </Space>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const isEditing = (record) => record.key === editingKey\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const onSave = async (key) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      const newData = [...props.data]\r\n      const index = newData.findIndex((item) => key === item.key)\r\n\r\n      const item = newData[index]\r\n      // newData.splice(index, 1, { ...item, ...row })\r\n      // props.setData(newData)\r\n      props.handleEdit({ ...item, ...row })\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  const onDelete = async (record) => {\r\n    try {\r\n      // let newData = [...props.data]\r\n      // props.setData(newData.filter((item) => item.key !== record.key))\r\n      props.handleDelete(record)\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  const mergedColumns = arr.map((col) => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.type,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        data: col.data,\r\n        placeholder: col.placeholder,\r\n        editing: isEditing(record),\r\n      }),\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={props.data}\r\n        columns={mergedColumns}\r\n        rowClassName='editable-row'\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n        loading={props.loading}\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tag } from 'antd'\r\n\r\nexport const setColumnsHelper = (organisations, roles) => {\r\n  return [\r\n    {\r\n      title: '№',\r\n      dataIndex: '№',\r\n      align: 'center',\r\n      width: '2%',\r\n    },\r\n    {\r\n      title: 'ФИО',\r\n      dataIndex: 'name',\r\n      editable: true,\r\n      placeholder: 'ФИО',\r\n    },\r\n    {\r\n      title: 'Организация',\r\n      dataIndex: 'organisation',\r\n      editable: true,\r\n      placeholder: 'Организация',\r\n      type: 'select',\r\n      data: organisations,\r\n    },\r\n    {\r\n      title: 'Роль',\r\n      dataIndex: 'roles',\r\n      editable: true,\r\n      placeholder: 'Роль',\r\n      type: 'multi-select',\r\n      data: roles,\r\n      render: (modules) => {\r\n        return (\r\n          <span>\r\n            {modules.map((module) => {\r\n              let color = module.length > 5 ? 'geekblue' : 'blue'\r\n              return (\r\n                <Tag color={color} key={module} style={{ margin: '5px 5px' }}>\r\n                  {module.toUpperCase()}\r\n                </Tag>\r\n              )\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: 'Логин',\r\n      dataIndex: 'username',\r\n      editable: true,\r\n      placeholder: 'Логин',\r\n    },\r\n  ]\r\n}\r\n\r\nexport const setDataSourceHelper = (data) => {\r\n  return data.map((i, index) => {\r\n    return {\r\n      key: i['account-id'],\r\n      '№': ++index,\r\n      name: i.name,\r\n      organisation: `${i.organisation['full-name']} - ${i.organisation.abbreviation}`,\r\n      roles: i.roles.map((role) => role),\r\n      username: i.username,\r\n      'account-id': i['account-id'],\r\n    }\r\n  })\r\n}\r\n","export const onRequest = (record, roles, organisations) => {\r\n  let post = {\r\n    name: record.name,\r\n    'organisation-id': organisations.find(\r\n      (o) => o.value === record.organisation\r\n    ).id,\r\n    username: record.username,\r\n    password: record.password ? record.password : '',\r\n    roles: roles.filter((i) => record.roles.includes(i.value)).map((i) => i.id),\r\n  }\r\n\r\n  //client post object\r\n  record = {\r\n    ...record,\r\n    organisation: {\r\n      abbreviation: record.organisation.split('-')[0],\r\n      'full-name': record.organisation.split('-')[1],\r\n    },\r\n  }\r\n\r\n  return { post, record }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { deleteUser, editUser } from '../../features/users/usersSlice'\r\n\r\nimport { setColumnsHelper, setDataSourceHelper } from '../../utils/users_table'\r\nimport { onRequest } from '../../utils/users_helper'\r\n\r\nconst UserTable = ({ data, status, roles, organisations }) => {\r\n  const [dataSource, setDataSource] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (status === 'success') {\r\n      setDataSource(setDataSourceHelper(data))\r\n    }\r\n  }, [data, status])\r\n\r\n  const onEdit = (record_) => {\r\n    let { post, record } = onRequest(record_, roles, organisations)\r\n\r\n    delete record['№']\r\n    delete record['key']\r\n\r\n    dispatch(editUser({ post, record }))\r\n  }\r\n  const onDelete = (record) => {\r\n    dispatch(deleteUser(record['account-id']))\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      columns={setColumnsHelper(\r\n        organisations.map((o) => o.value),\r\n        roles\r\n      )}\r\n      data={dataSource}\r\n      setData={setDataSource}\r\n      loading={status !== 'success'}\r\n      handleEdit={onEdit}\r\n      handleDelete={onDelete}\r\n      isEditable={true}\r\n      isDeletable={true}\r\n    />\r\n  )\r\n}\r\n\r\nexport default React.memo(UserTable)\r\n","import React from 'react'\r\nimport { Form, Input, Button, Select, Tag } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { postNewUser } from '../../features/users/usersSlice'\r\nimport { onRequest } from '../../utils/users_helper'\r\n\r\nconst UserControllers = ({ roles, organisations }) => {\r\n  const [form] = Form.useForm()\r\n  const { Option } = Select\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onAdd = async () => {\r\n    let fields = await form.validateFields()\r\n\r\n    let ob = onRequest(fields, roles, organisations)\r\n\r\n    delete fields.password\r\n\r\n    dispatch(postNewUser(ob))\r\n    form.resetFields()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form form={form} className='admin-controller Roles_block_style'>\r\n        <Form.Item\r\n          name='name'\r\n          style={{ width: '60%' }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите имя пользователя!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='ФИО' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='organisation'\r\n          style={{ width: '60%' }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Выберите название организации!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Select placeholder='Организация' allowClear>\r\n            {organisations.map((o) => (\r\n              <Option key={o.value}>{o.value}</Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='roles'\r\n          style={{ width: '60%' }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Выберите роль пользователя!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Select\r\n            placeholder='Роли'\r\n            allowClear\r\n            mode='multiple'\r\n            tagRender={tagRender}\r\n            options={roles}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item name='username' style={{ width: '60%' }}>\r\n          <Input placeholder='Логин' type={'email'} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='password'\r\n          style={{ width: '60%' }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите пароль пользователя!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder='Пароль'\r\n            type={'password'}\r\n            className='password_style_user'\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            // className='standard_btn_admin'\r\n            onClick={onAdd}\r\n          >\r\n            Добавить\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(UserControllers)\r\n\r\nfunction tagRender(props) {\r\n  const { label, closable, onClose } = props\r\n\r\n  return (\r\n    <Tag closable={closable} onClose={onClose} style={{ marginRight: 3 }}>\r\n      {label}\r\n    </Tag>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUsers } from '../../features/users/usersSlice'\r\nimport UserTable from './UserTable'\r\nimport UserControllers from './UserControllers'\r\n\r\nconst Users = () => {\r\n  const { data, status } = useSelector((state) => state.users)\r\n  const { roles } = useSelector((state) => state.roles)\r\n  const { organisationList } = useSelector((state) => state.admin)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    data.length === 0 && dispatch(getUsers())\r\n  }, [data])\r\n\r\n  const role_options = useMemo(() => {\r\n    if (roles.status === 'success') {\r\n      return roles.data.map((i) => ({ value: i.repr, id: i.id }))\r\n    }\r\n\r\n    return []\r\n  }, [roles])\r\n\r\n  const organisation_options = useMemo(() => {\r\n    if (organisationList.status === 'success') {\r\n      return organisationList.data.map((i) => ({\r\n        ...i,\r\n        value: `${i.abbreviation}-${i['full-name']}`,\r\n      }))\r\n    }\r\n\r\n    return []\r\n  }, [organisationList])\r\n\r\n  return (\r\n    <>\r\n      <UserControllers\r\n        roles={role_options}\r\n        organisations={organisation_options}\r\n      />\r\n      <UserTable\r\n        data={data}\r\n        status={status}\r\n        roles={role_options}\r\n        organisations={organisation_options}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Users)\r\n","import React, { useCallback } from 'react'\r\nimport { Form, Button, Select, Tag, Input } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { postRoleModules } from '../../features/roles/rolesSlice'\r\n\r\n//UI: render form controllers\r\nconst RoleControllers = ({ options }) => {\r\n  const [form] = Form.useForm()\r\n  const dispatch = useDispatch()\r\n  // const { modules } = useSelector((state) => state.admin)\r\n\r\n  // console.log('loading controllers', options)\r\n\r\n  //TASK: add new role's modules on put request (redux side)\r\n  const onAdd = useCallback(async () => {\r\n    try {\r\n      //extract form data to post\r\n      let row = await form.validateFields()\r\n\r\n      let ids = [] // request needs module's ids\r\n      let modules = [] //client side needs module names\r\n\r\n      //fill above looping through options modules\r\n      options.forEach((i) => {\r\n        if (row['permitted-modules'].includes(i.value)) {\r\n          ids = [...ids, i.id]\r\n          modules = [...modules, i.value]\r\n        }\r\n      })\r\n\r\n      let post_new_role_module = { ...row, 'permitted-modules': ids } // post object\r\n      dispatch(\r\n        postRoleModules({ post_new_role_module, record_new_role_module: row })\r\n      )\r\n\r\n      form.resetFields()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }, [form, options])\r\n\r\n  return (\r\n    <Form form={form} className=' Roles_create'>\r\n      <Form.Item\r\n        name='repr'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `Введите роль пользователя!`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder='Роли' allowClear style={{ width: '60%' }} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='permitted-modules'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `Выберите модули доступа пользователя!`,\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder='Модули'\r\n          mode='multiple'\r\n          tagRender={tagRender}\r\n          style={{ width: '60%' }}\r\n          options={options}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type='primary'\r\n          htmlType='submit'\r\n          className='standard_btn_admin'\r\n          onClick={onAdd}\r\n        >\r\n          Добавить\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default React.memo(RoleControllers)\r\n\r\nfunction tagRender(props) {\r\n  const { label, closable, onClose } = props\r\n\r\n  return (\r\n    <Tag closable={closable} onClose={onClose} style={{ marginRight: 3 }}>\r\n      {label}\r\n    </Tag>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tag } from 'antd'\r\n\r\nexport const setRoleColumns = (options) => {\r\n  return [\r\n    {\r\n      title: '№',\r\n      dataIndex: '№',\r\n      align: 'center',\r\n      width: '2%',\r\n    },\r\n    {\r\n      title: 'Роль',\r\n      dataIndex: 'repr',\r\n      width: '30%',\r\n      editable: true,\r\n      placeholder: 'Роли',\r\n    },\r\n    {\r\n      title: 'Модули',\r\n      dataIndex: 'permitted-modules',\r\n      type: 'multi-select',\r\n      editable: true,\r\n      data: options,\r\n      render: (modules) => {\r\n        return (\r\n          <span>\r\n            {modules.map((module) => {\r\n              let color = module.length > 5 ? 'geekblue' : 'blue'\r\n              return (\r\n                <Tag color={color} key={module} style={{ margin: '5px 5px' }}>\r\n                  {module.toUpperCase()}\r\n                </Tag>\r\n              )\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\nexport const setRoleDataSource = (data) => {\r\n  return data.map((i, index) => {\r\n    return {\r\n      key: i.id,\r\n      '№': ++index,\r\n      repr: i.repr,\r\n      'permitted-modules': i['permitted-modules'].map(\r\n        (i) => i['permitted-module']\r\n      ),\r\n      modules: i['permitted-modules'],\r\n    }\r\n  })\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport {\r\n  deleteRoleModule,\r\n  putRoleModule,\r\n} from '../../features/roles/rolesSlice'\r\nimport { setRoleColumns, setRoleDataSource } from '../../utils/roles_table'\r\n\r\n//UI: render table\r\nconst RoleTable = ({ role_modules, options, modules }) => {\r\n  const dispatch = useDispatch()\r\n  const [data, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    //TASK: if role's modules are ready,show them on table\r\n    //LOGIC: set table datasource state\r\n    role_modules.status === 'success' &&\r\n      setData(setRoleDataSource(role_modules.data))\r\n  }, [role_modules])\r\n\r\n  const onEdit = (record) => {\r\n    //store newly added modules\r\n    let added = []\r\n    let arr = record.modules.map((i) => i['permitted-module']) //initial modules\r\n    added = record['permitted-modules'].filter((name) => !arr.includes(name))\r\n    added = modules.data.filter((i) => added.includes(i.name)).map((i) => i.id)\r\n\r\n    // //check if module is removed\r\n    let removed = [] //store removed modules\r\n    removed = record.modules\r\n      .filter(\r\n        (item) =>\r\n          !record['permitted-modules'].includes(item['permitted-module'])\r\n      )\r\n      .map((i) => i['authority-id'])\r\n\r\n    dispatch(\r\n      putRoleModule({\r\n        id: record.key,\r\n        removed,\r\n        added,\r\n        repr: record.repr,\r\n        'permitted-modules': record['permitted-modules'],\r\n      })\r\n    )\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    dispatch(deleteRoleModule(record.key))\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      columns={setRoleColumns(options)} //options as props to show available options on row edit\r\n      data={data}\r\n      setData={setData}\r\n      loading={role_modules.status !== 'success'}\r\n      handleDelete={onDelete}\r\n      handleEdit={onEdit}\r\n      isEditable={true}\r\n      isDeletable={true}\r\n    />\r\n  )\r\n}\r\n\r\nexport default React.memo(RoleTable)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getRoleModules } from '../../features/roles/rolesSlice'\r\n\r\nimport RoleControllers from './RoleControllers'\r\nimport RoleTable from './RoleTable'\r\n\r\n//main ROLES module\r\nconst Roles = () => {\r\n  const dispatch = useDispatch()\r\n  const { roles, modules, role_modules } = useSelector((state) => state.roles)\r\n\r\n  const [options, setOptions] = useState([])\r\n\r\n  useEffect(() => {\r\n    //TASK: request all available role's modules\r\n    roles.status === 'success' &&\r\n      role_modules.data.length === 0 &&\r\n      dispatch(getRoleModules(roles.data))\r\n  }, [roles, role_modules])\r\n\r\n  useEffect(() => {\r\n    //TASK: if modules are rdy, set options state\r\n    if (modules.status === 'success') {\r\n      let arr = modules.data.map((i) => ({ value: i.name, id: i.id }))\r\n      setOptions(arr)\r\n    }\r\n  }, [modules])\r\n\r\n  return (\r\n    <>\r\n      <RoleControllers options={options} />\r\n      <RoleTable\r\n        role_modules={role_modules}\r\n        options={options}\r\n        modules={modules}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Roles)\r\n","import React from 'react'\r\nimport { Placemark, Polygon, Polyline } from 'react-yandex-maps'\r\nimport { Button } from 'antd'\r\nimport { FaDrawPolygon } from 'react-icons/fa'\r\nimport { FcLineChart } from 'react-icons/fc'\r\n\r\nexport const renderGeoObjects = (mapData) => {\r\n  return mapData.map((geo, index) => {\r\n    switch (geo.type) {\r\n      case 'placemark':\r\n        return <Placemark key={index} geometry={geo.coordinates} />\r\n      case 'polyline':\r\n        return (\r\n          <Polyline\r\n            key={index}\r\n            geometry={geo.coordinates}\r\n            options={{\r\n              fillColor: '#00FF00',\r\n              strokeColor: '#0000FF',\r\n              strokeWidth: 5,\r\n            }}\r\n          />\r\n        )\r\n      case 'polygon':\r\n        return (\r\n          <Polygon\r\n            key={index}\r\n            geometry={geo.coordinates}\r\n            options={{\r\n              editorDrawingCursor: 'crosshair',\r\n              editorMaxPoints: 5,\r\n              fillColor: '#00FF00',\r\n              strokeColor: '#0000FF',\r\n              strokeWidth: 5,\r\n            }}\r\n          />\r\n        )\r\n      case 'Point':\r\n        return <Placemark key={index} geometry={geo.coordinates} />\r\n      case 'MultiPoint':\r\n        return geo.coordinates.map((geometry, key) => (\r\n          <Placemark key={`${key}-${geo.type}`} geometry={geometry} />\r\n        ))\r\n      default:\r\n        return null\r\n    }\r\n  })\r\n}\r\n\r\nexport const renderButtons = (active, setActive) => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        type={active === 'polyline' && 'primary'}\r\n        onClick={() =>\r\n          active === 'polyline' ? setActive('') : setActive('polyline')\r\n        }\r\n        icon={<FcLineChart />}\r\n      />\r\n      <Button\r\n        type={active === 'polygon' && 'primary'}\r\n        style={{ margin: '0 10px' }}\r\n        icon={<FaDrawPolygon />}\r\n        onClick={() =>\r\n          active === 'polygon' ? setActive('') : setActive('polygon')\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createGeoObject = (active, draw) => {\r\n  const options = {\r\n    editorDrawingCursor: 'crosshair',\r\n    // editorMaxPoints: 10,\r\n    fillColor: '#00FF00',\r\n    strokeColor: '#0000FF',\r\n    strokeWidth: 5,\r\n  }\r\n\r\n  if (active === 'polygon') {\r\n    return (\r\n      <Polygon\r\n        instanceRef={(ref) => ref && draw(ref, active)}\r\n        geometry={[]}\r\n        options={{ ...options }}\r\n      />\r\n    )\r\n  }\r\n\r\n  if (active === 'polyline') {\r\n    return (\r\n      <Polyline\r\n        instanceRef={(ref) => ref && draw(ref, active)}\r\n        geometry={[]}\r\n        options={options}\r\n      />\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport { YMaps, Map } from 'react-yandex-maps'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button } from 'antd'\r\n\r\nimport {\r\n  resetMapData,\r\n  setMapData,\r\n} from '../../../features/roadmap/roadmapSlice'\r\nimport {\r\n  renderButtons,\r\n  renderGeoObjects,\r\n  createGeoObject,\r\n} from '../utils/yandex_helper'\r\nimport { usePrevious } from '../utils/usePrevious'\r\n\r\nconst mapState = {\r\n  center: [43.238949, 76.889709],\r\n  zoom: 10,\r\n}\r\n\r\nexport const CustomYandexMap = () => {\r\n  const { current, mapData, intersectionsMapData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  const [active, setActive] = useState('')\r\n  const [polygons, setPolygons] = useState([])\r\n  const previousState = usePrevious({ active, polygons })\r\n\r\n  useEffect(() => {\r\n    if (previousState && previousState.active !== active) {\r\n      if (polygons.length > 0 && previousState.polygons === polygons) {\r\n        dispatch(setMapData(polygons))\r\n        setPolygons([])\r\n      }\r\n    }\r\n  }, [active, polygons, previousState])\r\n\r\n  let geoObject = useMemo(() => {\r\n    const draw = async (ref, type) => {\r\n      ref.editor.startDrawing()\r\n\r\n      ref.geometry.events.add('change', (e) => {\r\n        setPolygons((state) => [\r\n          { type, coordinates: e.originalEvent.newCoordinates },\r\n        ])\r\n      })\r\n\r\n      ref.editor.events.add('onchange', (event) => {\r\n        ref.startDrawing()\r\n      })\r\n      ref.editor.events.add('drawingstop', (event) => {\r\n        ref.editor.stopDrawing()\r\n        setActive('')\r\n      })\r\n    }\r\n\r\n    return createGeoObject(active, draw)\r\n  }, [active])\r\n\r\n  let geoObjects = useMemo(() => {\r\n    if (intersectionsMapData.length > 0) {\r\n      return renderGeoObjects(intersectionsMapData)\r\n    }\r\n    return renderGeoObjects(mapData)\r\n  }, [mapData, intersectionsMapData])\r\n\r\n  const handleClearMap = () => {\r\n    dispatch(resetMapData())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {current === 0 && (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'center',\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          {renderButtons(active, setActive)}\r\n          <Button onClick={handleClearMap}>Очистить карту</Button>\r\n        </div>\r\n      )}\r\n      <YMaps style={{ minWidth: '100%' }}>\r\n        <Map\r\n          width='100%'\r\n          height='calc(100% - 50px)'\r\n          style={{ minHeight: '500px', minWidth: '100%' }}\r\n          defaultState={mapState}\r\n          modules={['geoObject.addon.editor']}\r\n        >\r\n          {current === 0 && geoObject}\r\n          {geoObjects}\r\n        </Map>\r\n      </YMaps>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = (value) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n\r\n  return ref.current\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { Steps, Button, Form } from 'antd'\r\nimport { CustomYandexMap as YandexMap } from './YandexMap'\r\n\r\nconst { Step } = Steps\r\n\r\nexport const CustomSteps = ({\r\n  steps,\r\n  dispatch,\r\n  current,\r\n  setCurrent,\r\n  formValidate,\r\n  form,\r\n  callback,\r\n}) => {\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [form])\r\n\r\n  const next = () => {\r\n    dispatch(setCurrent(current + 1))\r\n  }\r\n\r\n  const prev = () => {\r\n    dispatch(setCurrent((state) => state - 1))\r\n    dispatch(setCurrent(current - 1))\r\n  }\r\n\r\n  const validate = async () => {\r\n    try {\r\n      const data = await form.validateFields()\r\n\r\n      if (data['end-date'] || data['start-date']) {\r\n        data['end-date'] = data['end-date']['_i']\r\n        data['start-date'] = data['start-date']['_i']\r\n      }\r\n\r\n      dispatch(formValidate(data))\r\n\r\n      next()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Steps current={current} size='small'>\r\n        {steps.map((item) => (\r\n          <Step key={item.title} title={item.title} />\r\n        ))}\r\n      </Steps>\r\n      <div className='steps-content'>\r\n        <Form form={form} name='roadwork-form'>\r\n          <div style={{ width: '100%', display: 'flex' }}>\r\n            <div style={{ width: '50%' }}>{steps[current].content}</div>\r\n            <div style={{ width: '50%', paddingLeft: 10 }}>\r\n              <YandexMap />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <div className='steps-action'>\r\n        {current > 0 && (\r\n          <Button style={{ margin: '0 8px' }} onClick={prev}>\r\n            Назад\r\n          </Button>\r\n        )}\r\n        {current < steps.length - 1 && (\r\n          <Button type='primary' onClick={validate}>\r\n            Далее\r\n          </Button>\r\n        )}\r\n        {current === 3 && (\r\n          <Button key='submit' type='primary' onClick={() => callback()}>\r\n            Отправить\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Tabs } from 'antd'\r\n\r\nexport const CustomTabs = ({ tabs }) => {\r\n  const { TabPane } = Tabs\r\n\r\n  const renderTabs = () => {\r\n    return tabs ? (\r\n      <Tabs type='card' className='tabs'>\r\n        {tabs.map((i, index) => (\r\n          <TabPane tab={i.title} key={index}>\r\n            {i.child}\r\n          </TabPane>\r\n        ))}\r\n      </Tabs>\r\n    ) : (\r\n      'no tabs data to render'\r\n    )\r\n  }\r\n\r\n  return <div className='card-container'>{renderTabs()}</div>\r\n}\r\n\r\n//props stucture\r\n// const tabs = [\r\n//     {\r\n//         title: 'name',\r\n//         child: component\r\n//     }\r\n// ]\r\n","import React from 'react'\r\nimport {\r\n  Upload,\r\n  message,\r\n  Button,\r\n  Input,\r\n  Checkbox,\r\n  DatePicker,\r\n  Form,\r\n  Select,\r\n} from 'antd'\r\n// import { Collapse } from 'react-collapse'\r\n\r\nimport { UploadOutlined } from '@ant-design/icons'\r\nimport moment from 'moment'\r\n\r\nconst { TextArea } = Input\r\nconst { Option } = Select\r\n\r\nexport const renderSelects = (prop) => {\r\n  const { regions, organisations, categories } = prop\r\n  const arr = [\r\n    {\r\n      name: 'category',\r\n      placeholder: 'Категоря работ',\r\n      options:\r\n        categories.status === 'success'\r\n          ? categories.data.map((r) => r.name)\r\n          : [],\r\n    },\r\n    {\r\n      name: 'organisation',\r\n      placeholder: 'Ответсвенный орган',\r\n      options:\r\n        organisations.status === 'success'\r\n          ? organisations.data.map((o) => o.name)\r\n          : [],\r\n    },\r\n    {\r\n      name: 'region',\r\n      placeholder: 'Район',\r\n      options:\r\n        regions.status === 'success' ? regions.data.map((r) => r.name) : [],\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div\r\n    // style={{\r\n    //   display: 'flex',\r\n    //   flexWrap: 'wrap',\r\n    //   justifyContent: 'space-between',\r\n    //   margin: '15px 0',\r\n    // }}\r\n    >\r\n      {arr.map((i, index) => (\r\n        <Form.Item\r\n          name={i.name}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          key={`${i.name}${index}`}\r\n          hasFeedback\r\n        >\r\n          <Select placeholder={i.placeholder} style={{ width: 300 }} allowClear>\r\n            {i.options.map((op) => (\r\n              <Option value={op} key={op}>\r\n                {op}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const renderTextArea = (name, placeholder, isOpen) => {\r\n  return (\r\n    <Form.Item>\r\n      <Form.Item\r\n        name={name}\r\n        valuePropName={'value'}\r\n        hidden={name !== 'area' && !isOpen}\r\n        getValueFromEvent={(e) => e.target.value}\r\n      >\r\n        <TextArea style={{ height: 70 }} placeholder={placeholder} allowClear />\r\n      </Form.Item>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport const renderDatePicker = (picker, handleChange, name, text) => {\r\n  const picker_ = picker ? (\r\n    <DatePicker\r\n      placeholder='Выбрать год'\r\n      allowClear={false}\r\n      picker={'year'}\r\n      format={'YYYY'}\r\n    />\r\n  ) : (\r\n    <DatePicker placeholder='Выбрать дату' allowClear={false} />\r\n  )\r\n\r\n  return (\r\n    <Form.Item label={text}>\r\n      <Input.Group compact>\r\n        <Form.Item\r\n          name={name}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          getValueFromEvent={(e, string) => {\r\n            return moment(string, 'YYYY-MM-DD')\r\n          }}\r\n        >\r\n          {picker_}\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={`is-${name}`}\r\n          style={{ marginLeft: 10 }}\r\n          valuePropName={'checked'}\r\n          getValueFromEvent={(e) => e.target.checked}\r\n        >\r\n          <Checkbox onChange={handleChange}>Год</Checkbox>\r\n        </Form.Item>\r\n      </Input.Group>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport const renderUpload = () => (\r\n  <Form.Item\r\n    name='file-paths'\r\n    valuePropName='fileList'\r\n    // getValueFromEvent={normFile}\r\n  >\r\n    <Upload {...upload_props}>\r\n      <Button icon={<UploadOutlined />}>Добавить рисунок / презентацию</Button>\r\n    </Upload>\r\n  </Form.Item>\r\n)\r\n\r\nexport const upload_props = {\r\n  name: 'file',\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  listType: 'picture',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList)\r\n    }\r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} успешно загружен`)\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`Ошибка загрузки файла ${info.file.name}`)\r\n    }\r\n  },\r\n}\r\n\r\nconst normFile = (e) => {\r\n  console.log('Upload event:', e)\r\n\r\n  if (Array.isArray(e)) {\r\n    return e\r\n  }\r\n\r\n  return e && e.fileList\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Input, Checkbox, Form, DatePicker } from 'antd'\r\n\r\nimport {\r\n  renderDatePicker,\r\n  renderSelects,\r\n  renderTextArea,\r\n  renderUpload,\r\n} from '../../../utils/worklist_form'\r\n\r\nexport const WorkDescription = (props) => {\r\n  const { organisations, regions, categories, form } = props\r\n  const [iscanvas, setCanvas] = useState(false)\r\n  const [isclosured, setClosured] = useState(false)\r\n\r\n  // const [type, setType] = useState('date')\r\n  //checkbox on datepicker\r\n  const [pickerStart, setPickerStart] = useState(false)\r\n  const [pickerEnd, setPickerEnd] = useState(false)\r\n\r\n  useEffect(() => {\r\n    form.getFieldValue('is-canvas-opened') &&\r\n      setCanvas(form.getFieldValue('is-canvas-opened'))\r\n    form.getFieldValue('is-closured') &&\r\n      setClosured(form.getFieldValue('is-closured'))\r\n    form.getFieldValue('is-start-date') &&\r\n      setPickerStart(form.getFieldValue('is-start-date') ? true : false)\r\n    form.getFieldValue('is-end-date') &&\r\n      setPickerEnd(form.getFieldValue('is-end-date' ? true : false))\r\n\r\n    return () => {\r\n      setCanvas(false)\r\n      setClosured(false)\r\n    }\r\n  }, [form])\r\n\r\n  //checkbox on datepicker\r\n  const handleChangeYearStart = (e) =>\r\n    setPickerStart(e.target.checked ? true : false)\r\n\r\n  const handleChangeYearEnd = (e) =>\r\n    setPickerEnd(e.target.checked ? true : false)\r\n\r\n  return (\r\n    <>\r\n      {/* <Checkbox onChange={(e) => setType(e.target.checked ? 'year' : 'date')} />\r\n      {<PickerWithType type={type} />} */}\r\n      {renderSelects({ regions, organisations, categories })}\r\n      <Form.Item name='address'>\r\n        <Input placeholder='Адрес/Улица' />\r\n      </Form.Item>\r\n      {renderTextArea('area', 'Описание участка', true)}\r\n      <Form.Item\r\n        name={'is-closured'}\r\n        noStyle\r\n        valuePropName={'checked'}\r\n        getValueFromEvent={(e) => e.target.checked}\r\n      >\r\n        <Checkbox onChange={() => setClosured((state) => !state)}>\r\n          Перекрытие улиц{' '}\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {renderTextArea('closure-description', 'Описание перекрытия', isclosured)}\r\n      <Form.Item name={'is-canvas-opened'} noStyle valuePropName={'checked'}>\r\n        <Checkbox onChange={() => setCanvas((state) => !state)}>\r\n          Вскрытие дорожного полотна{' '}\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {renderTextArea('canvas-description', 'Описание вскрытия', iscanvas)}\r\n      {renderDatePicker(\r\n        pickerStart,\r\n        handleChangeYearStart,\r\n        'start-date',\r\n        'Дата начала'\r\n      )}\r\n      {renderDatePicker(\r\n        pickerEnd,\r\n        handleChangeYearEnd,\r\n        'end-date',\r\n        'Дата окончания'\r\n      )}\r\n      {renderUpload()}\r\n    </>\r\n  )\r\n}\r\nfunction PickerWithType({ type }) {\r\n  if (type === 'date') return <DatePicker />\r\n  return <DatePicker picker={type} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\nimport { Input, Form } from 'antd'\r\n\r\n// const { TextArea } = Input\r\n\r\nexport const WorkContractor = () => {\r\n  const [phone, setPhone] = useState()\r\n  return (\r\n    <>\r\n      <Form.Item name='lot-name'>\r\n        <Input placeholder='Наименование проекта (№ лота)' />\r\n      </Form.Item>\r\n      <Form.Item name='company-name'>\r\n        <Input placeholder='Наименование компании' />\r\n      </Form.Item>\r\n      <Form.Item name='supervisor-name'>\r\n        <Input placeholder='ФИО руководителя' />\r\n      </Form.Item>\r\n      <Form.Item name='contacts'>\r\n        <PhoneInput\r\n          country={'kz'}\r\n          value={phone}\r\n          onChange={(phone) => setPhone({ phone })}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item name='warranty-period'>\r\n        <Input placeholder='Гарантийный период' />\r\n      </Form.Item>\r\n      {/* <Form.Item\r\n        name='contractor-comment-textarea'\r\n        rules={[{ required: true }]}\r\n      >\r\n        <TextArea style={{ height: 90 }} placeholder='Комментарий' />\r\n      </Form.Item> */}\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { Input, Checkbox, Form, InputNumber } from 'antd'\r\n\r\nconst { TextArea } = Input\r\n\r\nexport const WorkStatus = () => {\r\n  const [disabled, setDisabled] = useState(true)\r\n  const hanldeChange = (e) =>\r\n    e.target.checked ? setDisabled(false) : setDisabled(true)\r\n\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        name='percentage'\r\n        rules={[{ required: true, message: 'Заполните поле' }]}\r\n        label={'Статус исполнения (%)'}\r\n      >\r\n        <InputNumber\r\n          style={{ width: '120px' }}\r\n          min={0}\r\n          max={100}\r\n          formatter={(value) => `${value}%`}\r\n          parser={(value) => value.replace('%', '')}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='commentary'>\r\n        <TextArea style={{ height: 90 }} placeholder='Комментарий' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='is-hidden'\r\n        valuePropName='checked'\r\n        getValueFromEvent={(e) => e.target.checked}\r\n      >\r\n        <Checkbox> Скрыть работу с карты</Checkbox>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='is-canceled'\r\n        valuePropName='checked'\r\n        getValueFromEvent={(e) => e.target.checked}\r\n        noStyle\r\n      >\r\n        <Checkbox onChange={hanldeChange}>\r\n          Закуп работ отменен / приостановлен\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {/* <Form.Item name='canceled-comment'>\r\n        <TextArea\r\n          style={{ height: 90 }}\r\n          placeholder='Комментарий'\r\n          disabled={disabled}\r\n        />\r\n      </Form.Item> */}\r\n    </>\r\n  )\r\n}\r\n","//translate server variables' naming to show on client\r\nexport const nameEnToRuWorkListHelper = (name) => {\r\n  switch (name) {\r\n    case 'area':\r\n      return 'Участок'\r\n    case 'address':\r\n      return 'Адрес/улица'\r\n    case 'contractor':\r\n      return 'Подрядчик'\r\n    case 'category':\r\n      return 'Категоря работ'\r\n    case 'end-date':\r\n      return 'Дата окончания'\r\n    case 'is-end-date':\r\n      return 'Дата окончания отмечено'\r\n    case 'start-date':\r\n      return 'Дата начала'\r\n    case 'is-start-date':\r\n      return 'Дата начало отмечено'\r\n    case 'closure-description':\r\n      return 'Описание перекрытия'\r\n    case 'is-closured':\r\n      return 'Описание перекрытия отмечено'\r\n    case 'organisation':\r\n      return 'Ответсвенный орган'\r\n    case 'file-paths':\r\n      return 'Файл'\r\n    case 'lot-name':\r\n      return 'Лот'\r\n    case 'percentage':\r\n      return 'Статус исполнения (%)'\r\n    case 'region':\r\n      return 'Район'\r\n    case 'supervisor-name':\r\n      return 'ФИО руководителя'\r\n    case 'contacts':\r\n      return 'Контакты'\r\n    case 'warranty-period':\r\n      return 'Гарантийный период'\r\n    case 'canvas-description':\r\n      return 'Описание вскрытия'\r\n    case 'is-canvas-opened':\r\n      return 'Описание вскрытия отмечено'\r\n    case 'company-name':\r\n      return 'Наименование компании'\r\n    case 'canceled-comment':\r\n      return 'Комментарий закупа отмены'\r\n    case 'percentage-comment':\r\n      return 'Комментарий статуса %'\r\n    case 'is-hidden':\r\n      return 'Статус скрыт'\r\n    case 'is-canceled':\r\n      return 'Статус приостановлен'\r\n    case 'commentary':\r\n      return 'Статус комментария'\r\n    default:\r\n      return name\r\n  }\r\n}\r\n\r\n//validate antd form before post|put requests\r\nexport const prepareToShowDetailsObToArr = (ob) => {\r\n  const arr = []\r\n\r\n  Object.keys(ob).map((key) => {\r\n    if (\r\n      typeof ob[key] !== 'undefined' &&\r\n      typeof ob[key] !== 'object' &&\r\n      key !== 'is-start-date' &&\r\n      key !== 'is-end-date' &&\r\n      key !== 'key' &&\r\n      key !== 'id'\r\n    ) {\r\n      arr.push({ name: key, value: ob[key] })\r\n    } else if (ob[key] === undefined && key.split('-')[0] === 'is') {\r\n      arr.push({ name: key, value: false })\r\n    } else if (ob[key] === undefined) {\r\n      arr.push({ name: key, value: null })\r\n    }\r\n  })\r\n\r\n  return arr\r\n}\r\n\r\n//configure client to server data format\r\nexport const validateRoadWorkForm = (\r\n  data,\r\n  categories,\r\n  organisations,\r\n  regions\r\n) => {\r\n  let ob = {}\r\n  let is_hidden = false\r\n  let is_canceled = false\r\n  let commentary = null\r\n  let percentage\r\n\r\n  data.forEach((item) => {\r\n    if (\r\n      item.name !== 'is-hidden' ||\r\n      item.name !== 'is-canceled' ||\r\n      item.name !== 'commentary' ||\r\n      item.name !== 'percentage' ||\r\n      item.name !== 'is-end-date' ||\r\n      item.name !== 'is-start-date'\r\n    ) {\r\n      //save status values\r\n      if (item.name === 'percentage') {\r\n        percentage = item.value\r\n      }\r\n      if (item.name === 'is-canceled') {\r\n        is_canceled = item.value\r\n      }\r\n      if (item.name === 'is-hidden') {\r\n        is_hidden = item.value\r\n      }\r\n      if (item.name === 'commentary') {\r\n        commentary = item.value\r\n      }\r\n\r\n      if (item.name === 'end-date' || item.name === 'start-date') {\r\n        item.value.length > 4\r\n          ? (ob = { ...ob, [item.name]: item.value })\r\n          : (ob = { ...ob, [item.name]: `${item.value}-01-01` })\r\n      }\r\n      //find id for item.names\r\n      else if (item.name === 'category') {\r\n        const id = categories.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else if (item.name === 'organisation') {\r\n        const id = organisations.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else if (item.name === 'region') {\r\n        const id = regions.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else {\r\n        ob = { ...ob, [item.name]: item.value }\r\n      }\r\n    }\r\n  })\r\n\r\n  ob = {\r\n    ...ob,\r\n    status: {\r\n      percentage: percentage,\r\n      'is-hidden': is_hidden,\r\n      'is-canceled': is_canceled,\r\n      commentary: commentary,\r\n    },\r\n  }\r\n\r\n  return ob\r\n}\r\n\r\n//\r\nexport const setCoordinates = (data) => {\r\n  return data.map((i) => {\r\n    let arr = []\r\n    if (i.type === 'polyline') {\r\n      arr = i.coordinates.map((ii) => ({ y: ii[1], x: ii[0] }))\r\n    } else if (i.type === 'polygon') {\r\n      arr = i.coordinates[0].map((k) => ({ y: k[1], x: k[0] }))\r\n    } else {\r\n      arr = [{ y: i.coordinates[1], x: i.coordinates[0] }]\r\n    }\r\n    return arr\r\n  })\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Form } from 'antd'\r\n\r\nimport {\r\n  nameEnToRuWorkListHelper,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../../utils/helper'\r\n\r\nexport const WorkConfirm = ({ ob }) => {\r\n  const arr = useMemo(() => {\r\n    let new_arr = prepareToShowDetailsObToArr(ob)\r\n    new_arr = new_arr.filter(\r\n      (i) => typeof i.value !== 'object' && typeof i.value !== 'boolean'\r\n    )\r\n    return new_arr\r\n  }, [ob])\r\n\r\n  const renderForm = arr.map((i) => (\r\n    <Form.Item\r\n      key={i.name}\r\n      label={\r\n        <span style={{ color: '#92B4A7' }}>\r\n          {nameEnToRuWorkListHelper(i.name)}\r\n        </span>\r\n      }\r\n    >\r\n      {i.value}\r\n    </Form.Item>\r\n  ))\r\n  return <>{renderForm}</>\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport moment from 'moment'\r\n\r\nimport {\r\n  setCurrent,\r\n  formValidate,\r\n} from '../../../../../features/roadmap/roadmapSlice'\r\n\r\nimport {\r\n  WorkDescription,\r\n  WorkContractor,\r\n  WorkStatus,\r\n  WorkConfirm,\r\n} from './index'\r\nimport { CustomSteps as Steps } from '../../../common'\r\n\r\nconst format = 'YYYY/MM/DD'\r\n\r\nexport const StepsWrapper = ({ form, callback, record }) => {\r\n  const { current, organisations, regions, categories, formData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const steps = setSteps(\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    formData,\r\n    form,\r\n    dispatch\r\n  )\r\n\r\n  useEffect(() => {\r\n    record &&\r\n      form.setFieldsValue({\r\n        ...record,\r\n        'start-date': moment(record['start-date'], format),\r\n        'end-date': moment(record['end-date'], format),\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Steps\r\n      steps={steps}\r\n      current={current}\r\n      setCurrent={setCurrent}\r\n      formValidate={formValidate}\r\n      dispatch={dispatch}\r\n      form={form}\r\n      callback={callback}\r\n    />\r\n  )\r\n}\r\n\r\nconst setSteps = (\r\n  organisations,\r\n  regions,\r\n  categories,\r\n  formData,\r\n  form,\r\n  dispatch\r\n) => [\r\n  {\r\n    title: 'Описание работ',\r\n    content: (\r\n      <WorkDescription\r\n        organisations={organisations}\r\n        regions={regions}\r\n        categories={categories}\r\n        form={form}\r\n        dispatch={dispatch}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: 'Данные подрядчика',\r\n    content: <WorkContractor />,\r\n  },\r\n  {\r\n    title: 'Статус работ',\r\n    content: <WorkStatus />,\r\n  },\r\n  {\r\n    title: 'Отправка данных',\r\n    content: <WorkConfirm ob={formData} />,\r\n  },\r\n]\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Button, Modal, Form } from 'antd'\r\n\r\nimport { StepsWrapper as Steps } from './form/StepsWrapper'\r\n\r\nimport {\r\n  setCurrent,\r\n  postRoadmap,\r\n  resetMapData,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\nimport {\r\n  validateRoadWorkForm,\r\n  setCoordinates,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../utils/helper'\r\n\r\nexport const WorkListModal = () => {\r\n  const [visible, setVisible] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    formData,\r\n    status,\r\n    mapData,\r\n  } = useSelector((state) => state.roadmap)\r\n  const [form] = Form.useForm()\r\n\r\n  const postFormData = useCallback(async () => {\r\n    try {\r\n      let arr = prepareToShowDetailsObToArr(formData)\r\n      let ob = validateRoadWorkForm(arr, categories, organisations, regions)\r\n\r\n      const coordinates = setCoordinates(mapData)\r\n\r\n      ob = { data: ob, geometries: coordinates, mapData }\r\n      // console.log(ob)\r\n\r\n      dispatch(postRoadmap(ob))\r\n      dispatch(setCurrent(0))\r\n      dispatch(resetMapData())\r\n\r\n      status === 'success' && setVisible(false)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }, [categories, formData, dispatch, mapData, organisations, status, regions])\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type='primary'\r\n        onClick={() => {\r\n          dispatch(setCurrent(0))\r\n          setVisible(true)\r\n        }}\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        Добавить\r\n      </Button>\r\n      {status === 'success' && (\r\n        <Modal\r\n          title='Форма ввода данных по ремонтным работам'\r\n          visible={visible}\r\n          onOk={() => {\r\n            dispatch(setCurrent(0))\r\n            setVisible(false)\r\n          }}\r\n          onCancel={() => {\r\n            dispatch(setCurrent(0))\r\n            setVisible(false)\r\n            dispatch(resetMapData())\r\n            form.resetFields()\r\n          }}\r\n          width={'80%'}\r\n          footer={null}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Steps form={form} callback={postFormData} />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Form } from 'antd'\r\n\r\nimport { StepsWrapper as Steps } from './form/StepsWrapper'\r\nimport {\r\n  resetFormData,\r\n  resetMapData,\r\n  setCurrent,\r\n  putRoadmap,\r\n  setMapData,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\nimport {\r\n  validateRoadWorkForm,\r\n  setCoordinates,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../utils/helper'\r\n\r\nexport const WorkDetailsModal = (props) => {\r\n  const { visible, setVisible, record } = props\r\n  const [form] = Form.useForm()\r\n\r\n  const {\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    status,\r\n    mapData,\r\n    formData,\r\n  } = useSelector((state) => state.roadmap)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    let coordinates = record.geometries.coordinates\r\n\r\n    if (coordinates.length > 0) {\r\n      let arr = coordinates.map((i) => {\r\n        if (i[0][0] == i[i.length - 1][0]) {\r\n          return { type: 'polygon', coordinates: [i] }\r\n        }\r\n\r\n        return { type: 'polyline', coordinates: i }\r\n      })\r\n\r\n      dispatch(setMapData(arr))\r\n    }\r\n\r\n    return () => {\r\n      dispatch(resetMapData())\r\n      dispatch(resetFormData({}))\r\n      form.setFieldsValue({})\r\n    }\r\n  }, [])\r\n\r\n  // console.log('loaded')\r\n  const onCloseModal = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  const putFormData = useCallback(async () => {\r\n    try {\r\n      let arr = prepareToShowDetailsObToArr(formData)\r\n      let ob = validateRoadWorkForm(arr, categories, organisations, regions)\r\n      const coordinates = setCoordinates(mapData)\r\n\r\n      // console.log(coordinates)\r\n      ob = { data: ob, geometries: coordinates }\r\n\r\n      dispatch(setCurrent(0))\r\n      dispatch(putRoadmap({ reedit: true, data: ob, id: record.id, mapData }))\r\n      form.resetFields()\r\n\r\n      status === 'success' && setVisible(false)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }, [\r\n    categories,\r\n    organisations,\r\n    regions,\r\n    mapData,\r\n    formData,\r\n    form,\r\n    record,\r\n    setVisible,\r\n    status,\r\n  ])\r\n\r\n  return (\r\n    <Modal\r\n      title='Детали улицы'\r\n      visible={visible}\r\n      width={'50%'}\r\n      onCancel={onCloseModal}\r\n      onOk={onCloseModal}\r\n      footer={[]}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Steps form={form} callback={putFormData} record={record} />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const setFilterSelectsHelper = (response) => {\r\n  let ob = {}\r\n  let result = []\r\n  if (response.status === 'success') {\r\n    const data = response.data\r\n    for (let i = 0; i < data.length; i++) {\r\n      ob = { ...ob, [data[i].name]: data[i].name }\r\n    }\r\n    result = Object.keys(ob).map((key) => ({ text: key, value: key }))\r\n  }\r\n  return result\r\n}\r\n\r\nexport const setWorkListDataSourceHelper = (arr) => {\r\n  const dataSource = arr.map((i) => {\r\n    let keys = { key: i.id }\r\n    Object.keys(i).forEach((key) => {\r\n      if (key === 'status') {\r\n        keys = {\r\n          ...keys,\r\n          percentage: i[key].percentage,\r\n          'is-hidden': i[key]['is-hidden'],\r\n          'is-canceled': i[key]['is-canceled'],\r\n          commentary: i[key]['commentary'],\r\n        }\r\n      } else {\r\n        keys = { ...keys, [key]: i[key] }\r\n      }\r\n    })\r\n    return keys\r\n  })\r\n\r\n  return dataSource\r\n}\r\n\r\nexport const setCrossListDataSourceHelper = (data, intersections) => {\r\n  let dataSource = []\r\n  if (intersections.status === 'success') {\r\n    dataSource = intersections.data.map((i, index) => {\r\n      let ob = {\r\n        '№': ++index,\r\n        key: ++index,\r\n        id: i.id,\r\n        address: i['intersection-area'],\r\n        intersection: i.intersection,\r\n        ids: i['roadwork-ids'],\r\n      }\r\n\r\n      i['roadwork-ids'].forEach((id, key) => {\r\n        let item = data.find((i) => i.id === id)\r\n        ob = {\r\n          ...ob,\r\n          category: item ? item.category : '',\r\n          [`Работа ${key + 1}`]: id,\r\n        }\r\n      })\r\n\r\n      return ob\r\n    })\r\n  }\r\n\r\n  // const dataSource = data.map((i, index) => {\r\n  //   let keys = { '№': index + 1, key: index + 1 }\r\n  //   Object.keys(i).forEach((key) => {\r\n  //     keys = { ...keys, [key]: i[key] }\r\n  //   })\r\n  //   return keys\r\n  // })\r\n\r\n  return dataSource\r\n}\r\n\r\nexport const setWorkListTableColumnsHelper = (\r\n  organisations,\r\n  categories,\r\n  setVisible,\r\n  setRecord\r\n) => [\r\n  {\r\n    title: '№',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n    width: '2%',\r\n    align: 'center',\r\n    render: (text, record) => (\r\n      <a\r\n        onClick={() => {\r\n          setRecord(record)\r\n          setVisible(true)\r\n        }}\r\n      >\r\n        {text}\r\n      </a>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Улица',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n    render: (text, record) => <>{text}</>,\r\n  },\r\n  {\r\n    title: 'Участок',\r\n    dataIndex: 'area',\r\n    key: 'area',\r\n  },\r\n  {\r\n    title: 'Категория работ',\r\n    dataIndex: 'category',\r\n    key: 'category',\r\n    filters: setFilterSelectsHelper(categories),\r\n    onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Отв орган',\r\n    dataIndex: 'organisation',\r\n    key: 'organisation',\r\n    filters: setFilterSelectsHelper(organisations),\r\n    onFilter: (value, record) => record.organisation.indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Дата начала',\r\n    dataIndex: 'start-date',\r\n    key: 'start-date',\r\n    width: '10%',\r\n    align: 'center',\r\n    filters: date_filters,\r\n    onFilter: (value, record) => record['start-date'].indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Дата окончания',\r\n    dataIndex: 'end-date',\r\n    key: 'end-date',\r\n    width: '10%',\r\n    align: 'center',\r\n    filters: date_filters,\r\n    onFilter: (value, record) => record['end-date'].indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Статус (%)',\r\n    dataIndex: 'percentage',\r\n    key: 'percentage',\r\n    editable: true,\r\n    width: '5%',\r\n    rule: true,\r\n    type: 'number',\r\n    align: 'center',\r\n    sorter: (a, b) => b.percentage - a.percentage,\r\n    sortDirections: ['ascend'],\r\n  },\r\n]\r\n\r\nexport const setCrossListTableColumnsHelper = (\r\n  setVisible,\r\n  setRecord,\r\n  intersections,\r\n  categories\r\n) => {\r\n  let arr = []\r\n\r\n  if (intersections.status === 'success') {\r\n    let count = 0\r\n    intersections.data.forEach((i) => {\r\n      if (i['roadwork-ids'].length > count) {\r\n        count = i['roadwork-ids'].length\r\n      }\r\n    })\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      arr = [\r\n        ...arr,\r\n        {\r\n          title: `Работа ${i + 1}`,\r\n          dataIndex: `Работа ${i + 1}`,\r\n          key: `Работа ${i + 1}`,\r\n          width: '10%',\r\n          align: 'center',\r\n        },\r\n      ]\r\n    }\r\n  }\r\n\r\n  const cols = [\r\n    {\r\n      title: '№',\r\n      dataIndex: '№',\r\n      key: '№',\r\n      width: '2%',\r\n      align: 'center',\r\n      render: (text, record) => {\r\n        return (\r\n          <a\r\n            onClick={() => {\r\n              setRecord(record)\r\n              setVisible(true)\r\n            }}\r\n          >\r\n            {text}\r\n          </a>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: 'Улица',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Категория работ',\r\n      dataIndex: 'category',\r\n      width: '30%',\r\n      key: 'category',\r\n      filters: setFilterSelectsHelper(categories),\r\n      onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n    },\r\n  ]\r\n\r\n  return [...cols, ...arr]\r\n}\r\n\r\n//hardcoded date filters on year\r\nconst date_filters = ['2018', '2019', '2020', '2021', '2022']\r\n  .map((value) => ({\r\n    value,\r\n    text: value,\r\n  }))\r\n  .reverse()\r\n\r\n// //hardcoded date filters on year v2.0\r\n// const year = [2018, 2019, 2020, 2021, 2022]\r\n// const month = [\r\n//   'Январь',\r\n//   'Февраль',\r\n//   'Март',\r\n//   'Апрель',\r\n//   'Май',\r\n//   'Июнь',\r\n//   'Июль',\r\n//   'Август',\r\n//   'Сентябрь',\r\n//   'Октябрь',\r\n//   'Ноябрь',\r\n//   'Декабрь',\r\n// ]\r\n\r\n// const date_filters = [\r\n//   {\r\n//     value: 'year',\r\n//     text: 'year',\r\n//     children: year.map((value) => ({ value, text: value })),\r\n//   },\r\n//   {\r\n//     value: 'month',\r\n//     text: 'month',\r\n//     children: month.map((value) => ({ value, text: value })),\r\n//   },\r\n// ]\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Input } from 'antd'\r\n\r\nimport { WorkDetailsModal } from './WorkDetailsModal'\r\nimport { CustomTable as Table } from '../../../../common/Table'\r\nimport {\r\n  setWorkListTableColumnsHelper,\r\n  setWorkListDataSourceHelper,\r\n} from '../../utils/table_helper'\r\nimport {\r\n  deleteRoadmap,\r\n  putRoadmap,\r\n  setEditedId,\r\n  setDeletedId,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nexport const WorkListTable = () => {\r\n  const {\r\n    organisations,\r\n    categories,\r\n    status,\r\n    data,\r\n    editedId,\r\n    deletedId,\r\n  } = useSelector((state) => state.roadmap)\r\n  const dispatch = useDispatch()\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [record, setRecord] = useState({})\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [filtered, setFiltered] = useState()\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const columns = useMemo(() => {\r\n    //TASK: set table columns labeling and operations\r\n    //LOGIC:pass filters' options and track popup visible state user click on id\r\n    //set row records on click\r\n    return setWorkListTableColumnsHelper(\r\n      organisations,\r\n      categories,\r\n      setVisible,\r\n      setRecord\r\n    )\r\n  }, [organisations, categories, setVisible, setRecord])\r\n\r\n  useEffect(() => {\r\n    //TASK:show changes made on filtered table's row after put || delete requests\r\n    //LOGIC:check if user still remains on filtered data\r\n    //if so, update filtered state data and set id null on redux store for further checkups\r\n    if (filtered) {\r\n      if (editedId) {\r\n        let item = dataSource.find((i) => i.id === editedId)\r\n        setFiltered((state) => state.map((i) => (i.id === editedId ? item : i)))\r\n        dispatch(setEditedId())\r\n      }\r\n      if (deletedId) {\r\n        setFiltered((state) => state.filter((i) => i.id !== deletedId))\r\n        dispatch(setDeletedId())\r\n      }\r\n    }\r\n  }, [dataSource, deletedId, editedId, filtered])\r\n\r\n  useMemo(() => {\r\n    // TASK: set table data\r\n    //LOGIC: pass data to adjust data to ant table's dataSource format\r\n    setDataSource(setWorkListDataSourceHelper(data))\r\n  }, [data])\r\n\r\n  const onEdit = (record) => {\r\n    //TASK: edit record\r\n    //LOGIC: request edit on redux side\r\n    dispatch(\r\n      putRoadmap({\r\n        reedit: false,\r\n        data: {\r\n          percentage: record.percentage,\r\n        },\r\n        id: record.id,\r\n      })\r\n    )\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    //TASK: delete record\r\n    //LOGIC: request delete on redux side\r\n    dispatch(deleteRoadmap(record.id))\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    setFiltered(\r\n      dataSource.filter((i) => {\r\n        if (\r\n          i.address &&\r\n          i.address.toLowerCase().includes(e.target.value.toLowerCase())\r\n        ) {\r\n          return true\r\n        }\r\n\r\n        return i.id.toString().includes(e.target.value.toLowerCase())\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item name={'search'}>\r\n        <Input\r\n          allowClear\r\n          placeholder={'Поиск по улице'}\r\n          onChange={onSearch}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='table'>\r\n        <Table\r\n          columns={columns}\r\n          data={filtered ? filtered : dataSource}\r\n          setData={setDataSource}\r\n          handleEdit={onEdit}\r\n          handleDelete={onDelete}\r\n          loading={status === 'loading' ? true : false}\r\n          isEditable={true}\r\n          isDeletable={true}\r\n        />\r\n      </Form.Item>\r\n      {visible && (\r\n        <Form.Item name='modal'>\r\n          <WorkDetailsModal\r\n            visible={visible}\r\n            setVisible={setVisible}\r\n            record={record}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  getRoadmapOrganisations,\r\n  getRoadmapCategories,\r\n  getRoadmapRegions,\r\n  getRoadmap,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { WorkListModal as Modal } from './WorkListModal'\r\nimport { WorkListTable as Table } from './WorkListTable'\r\n\r\nexport const WorkList = () => {\r\n  const dispatch = useDispatch()\r\n  const { organisations, categories, regions, data } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n\r\n  useEffect(() => {\r\n    organisations.data.length === 0 && dispatch(getRoadmapOrganisations())\r\n    regions.data.length === 0 && dispatch(getRoadmapRegions())\r\n    categories.data.length === 0 && dispatch(getRoadmapCategories())\r\n    data.length === 0 && dispatch(getRoadmap())\r\n  }, [organisations, regions, categories, data])\r\n\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <Table />\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Select, Form } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { setIntersectionsMapData } from '../../../../../features/roadmap/roadmapSlice'\r\n\r\nconst { Option } = Select\r\n\r\nconst SelectGroup = ({ order, form }) => {\r\n  const [options, setOptions] = useState([])\r\n\r\n  const { categories, data, intersectionsMapData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  let arr =\r\n    categories.status === 'success' ? categories.data.map((r) => r.name) : []\r\n\r\n  const onChangeWorkId = (id) => {\r\n    dispatch(\r\n      setIntersectionsMapData([\r\n        ...intersectionsMapData,\r\n        {\r\n          type: 'polygon',\r\n          coordinates: data.find((i) => i.id === id).geometries.coordinates,\r\n        },\r\n      ])\r\n    )\r\n  }\r\n\r\n  const onChangeCategory = (value) => {\r\n    setOptions(data.filter((i) => i.category === value).map((i) => i.id))\r\n    form.setFieldsValue({ [`roadwork-${order}`]: '' })\r\n  }\r\n\r\n  return (\r\n    <Form.Item style={{ marginRight: 20 }}>\r\n      <Form.Item\r\n        name={`category-${order}`}\r\n        rules={[{ required: true, message: 'Заполните поле' }]}\r\n      >\r\n        <Select\r\n          placeholder={'Категория работ'}\r\n          style={{ width: 320 }}\r\n          onChange={onChangeCategory}\r\n        >\r\n          {arr.map((i) => (\r\n            <Option value={i} key={i}>\r\n              {i}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      {options.length > 0 && (\r\n        <Form.Item\r\n          name={`roadwork-${order}`}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          key={`roadwork-${order}`}\r\n        >\r\n          <Select\r\n            placeholder={`Работа ${order}`}\r\n            style={{ width: 320 }}\r\n            onChange={onChangeWorkId}\r\n          >\r\n            {options.map((i) => (\r\n              <Option value={i} key={i}>\r\n                {i}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      )}\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport default React.memo(SelectGroup)\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Input } from 'antd'\r\n\r\nimport SelectGroup from './SelectGroup'\r\n\r\nexport const AddCrossWorks = ({ form }) => {\r\n  const [count, setCount] = useState([1, 2])\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n        }}\r\n      >\r\n        {count.map((key) => (\r\n          <SelectGroup order={key} form={form} />\r\n        ))}\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginTop: 15 }}>\r\n        <div style={{ marginRight: 25 }}>\r\n          <Button\r\n            size='small'\r\n            type='primary'\r\n            shape='circle'\r\n            onClick={() => setCount([...count, count.length + 1])}\r\n          >\r\n            +\r\n          </Button>{' '}\r\n          <span>Добавить еще одну</span>\r\n        </div>\r\n        <>\r\n          <Button\r\n            disabled={count.length === 2}\r\n            size='small'\r\n            type='primary'\r\n            shape='circle'\r\n            onClick={() => {\r\n              setCount([...count.filter((i) => i !== count.length)])\r\n            }}\r\n          >\r\n            -\r\n          </Button>{' '}\r\n          <span style={{ marginLeft: 5 }}>Убрать</span>\r\n        </>\r\n      </div>\r\n      <Form.Item name='area'>\r\n        <Input\r\n          placeholder={'Участок пересечения'}\r\n          style={{ width: '30%', marginTop: 15 }}\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal, Form } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  postIntersections,\r\n  setCurrent,\r\n  resetIntersectionsMapData,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\nimport { AddCrossWorks } from './form/AddCrossWorks'\r\nimport { CustomYandexMap as YandexMap } from '../../common'\r\n\r\nexport const CrossListModal = () => {\r\n  const [visible, setVisible] = useState()\r\n  const [form] = Form.useForm()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onCancel = () => {\r\n    dispatch(resetIntersectionsMapData())\r\n    form.resetFields()\r\n    setVisible(false)\r\n  }\r\n\r\n  const onSave = async () => {\r\n    let data = await form.validateFields()\r\n    const ids = Object.keys(data)\r\n      .filter((key) => key.split('-')[0] === 'roadwork')\r\n      .map((i) => data[i])\r\n    data = { 'roadwork-ids': ids, 'intersection-area': data.area }\r\n    dispatch(postIntersections(data))\r\n    form.resetFields()\r\n    setVisible(false)\r\n  }\r\n\r\n  const onAddIntersection = () => {\r\n    dispatch(setCurrent(1))\r\n    setVisible(true)\r\n  }\r\n\r\n  const config = [\r\n    <Button key='back' onClick={onCancel}>\r\n      Отменить\r\n    </Button>,\r\n    <Button key='submit' type='primary' onClick={onSave}>\r\n      Сохранить\r\n    </Button>,\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type='primary'\r\n        onClick={onAddIntersection}\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        Добавить пересечение\r\n      </Button>\r\n      <Modal\r\n        title='Форма ввода данных по пересечению работ'\r\n        visible={visible}\r\n        onCancel={() => setVisible(false)}\r\n        width={'80%'}\r\n        footer={config}\r\n      >\r\n        <Form form={form}>\r\n          <AddCrossWorks form={form} />\r\n          <div style={{ width: '100%', paddingLeft: 10 }}>\r\n            <YandexMap />\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, Button } from 'antd'\r\n\r\nimport {\r\n  setIntersectionsMapData,\r\n  resetIntersectionsMapData,\r\n  setCurrent,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { CustomYandexMap as YandexMap } from '../../common'\r\nimport { WorkConfirm as FormDetails } from '../WorkList/form/WorkConfirm'\r\n\r\nexport const CrossDetailsModal = (props) => {\r\n  const { visible, setVisible, record, data, intersectionsMapData } = props\r\n  const [array, setArray] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    let arr = data.filter((i) => record.ids.includes(i.id))\r\n\r\n    //draw work coordinates\r\n    let list = arr.map((i) => ({\r\n      type: 'polygon',\r\n      coordinates: i.geometries.coordinates,\r\n    }))\r\n    list = [\r\n      ...list,\r\n      {\r\n        ...record.intersection,\r\n      },\r\n    ]\r\n\r\n    setArray(arr)\r\n    dispatch(setCurrent(1))\r\n    dispatch(setIntersectionsMapData([...intersectionsMapData, list]))\r\n\r\n    return () => {\r\n      dispatch(setCurrent(0))\r\n      dispatch(resetIntersectionsMapData())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      title='Детали улицы'\r\n      visible={visible}\r\n      width={'50%'}\r\n      onCancel={() => setVisible(false)}\r\n      onOk={() => setVisible(false)}\r\n      footer={[\r\n        <Button key='close' onClick={() => setVisible(false)}>\r\n          Закрыть\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          // justifyContent: 'space-between',\r\n          flexWrap: 'wrap',\r\n          width: '90%',\r\n          margin: 'auto',\r\n        }}\r\n      >\r\n        {array.map((i, index) => (\r\n          <div\r\n            style={{\r\n              width: `${array.length > 2 ? '33%' : '50%'}`,\r\n            }}\r\n          >\r\n            <h2>Работа {index + 1}</h2>\r\n            <FormDetails ob={i} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={{ width: '100%', paddingLeft: 10 }}>\r\n        <YandexMap />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Input } from 'antd'\r\n\r\nimport {\r\n  setDeletedIntersectionId,\r\n  deleteIntersection,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { CrossDetailsModal } from './CrossDetailsModal'\r\nimport { CustomTable as Table } from '../../../../common/Table'\r\nimport {\r\n  setCrossListTableColumnsHelper,\r\n  setCrossListDataSourceHelper,\r\n} from '../../utils/table_helper'\r\n\r\nexport const CrossListTable = () => {\r\n  const {\r\n    categories,\r\n    intersections,\r\n    data,\r\n    deletedIntersectionId,\r\n    intersectionsMapData,\r\n  } = useSelector((state) => state.roadmap)\r\n  const dispatch = useDispatch()\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [record, setRecord] = useState({})\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [filtered, setFiltered] = useState()\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (filtered && deletedIntersectionId) {\r\n      setFiltered((state) =>\r\n        state.filter((i) => i.id !== deletedIntersectionId)\r\n      )\r\n      dispatch(setDeletedIntersectionId())\r\n    }\r\n  }, [dataSource, deletedIntersectionId, filtered])\r\n\r\n  useMemo(() => {\r\n    setDataSource(setCrossListDataSourceHelper(data, intersections))\r\n  }, [data, intersections])\r\n\r\n  const columns = useMemo(() => {\r\n    return setCrossListTableColumnsHelper(\r\n      setVisible,\r\n      setRecord,\r\n      intersections,\r\n      categories\r\n    )\r\n  }, [setVisible, setRecord, intersections, categories])\r\n\r\n  const onDelete = (record) => {\r\n    dispatch(deleteIntersection(record.id))\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    setFiltered(\r\n      dataSource.filter((i) => {\r\n        if (\r\n          i.address &&\r\n          i.address.toLowerCase().includes(e.target.value.toLowerCase())\r\n        ) {\r\n          return true\r\n        }\r\n\r\n        let isIncluded = false\r\n        i.ids.forEach((id) => {\r\n          if (id.toString().includes(e.target.value.toLowerCase())) {\r\n            isIncluded = true\r\n          }\r\n        })\r\n        return isIncluded\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item name={'search'}>\r\n        <Input\r\n          allowClear\r\n          placeholder={'Поиск по улице'}\r\n          onChange={onSearch}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='table'>\r\n        <Table\r\n          columns={columns}\r\n          data={filtered ? filtered : dataSource}\r\n          setData={setDataSource}\r\n          handleDelete={onDelete}\r\n          loading={intersections.status !== 'success' ? true : false}\r\n          isDeletable={true}\r\n        />\r\n      </Form.Item>\r\n      {visible && (\r\n        <Form.Item name='modal'>\r\n          <CrossDetailsModal\r\n            visible={visible}\r\n            setVisible={setVisible}\r\n            record={record}\r\n            data={data}\r\n            intersectionsMapData={intersectionsMapData}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getIntersections } from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { CrossListModal as Modal } from './CrossListModal'\r\nimport { CrossListTable as Table } from './CrossListTable'\r\n\r\nexport const CrossList = () => {\r\n  const dispatch = useDispatch()\r\n  const { intersections } = useSelector((state) => state.roadmap)\r\n\r\n  useEffect(() => {\r\n    intersections.data.length === 0 && dispatch(getIntersections())\r\n  }, [intersections])\r\n\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <Table />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { CustomTabs as Tabs } from '../common'\r\n\r\nimport { WorkList } from './WorkList/index'\r\nimport { CrossList } from './CrossList/index'\r\n\r\nexport const RoadMap = () => {\r\n  return <Tabs tabs={tabs} />\r\n}\r\n\r\nconst tabs = [\r\n  {\r\n    title: 'Список работ',\r\n    child: <WorkList />,\r\n  },\r\n  {\r\n    title: 'Список пересечений',\r\n    child: <CrossList />,\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { RoadMap } from './components/RoadMap'\r\n\r\nimport './index.css'\r\nimport 'antd/dist/antd.css'\r\n\r\nconst Roadmap = () => <RoadMap />\r\n\r\nexport default withRouter(Roadmap)\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport { putHeads } from '../../features/heads/headsSlice'\r\nimport { setColumnsHelper, setDataSourceHelper } from '../../utils/heads_table'\r\n\r\nconst HeadsTable = ({ organisations, data, status }) => {\r\n  const [dataSource, setDataSource] = useState([])\r\n\r\n  useEffect(() => {\r\n    status === 'success' && setDataSource(setDataSourceHelper(data))\r\n  }, [status, data])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const columns = useMemo(() => {\r\n    let options =\r\n      organisations.status === 'success' &&\r\n      organisations.data.map((i) => ({\r\n        value: `${i.abbreviation}-${i['full-name']}`,\r\n        id: i.id,\r\n        label: `${i.abbreviation}-${i['full-name']}`,\r\n      }))\r\n    return setColumnsHelper(options)\r\n  }, [organisations])\r\n\r\n  const onEdit = (record) => {\r\n    if (organisations.status === 'success') {\r\n      let ids = organisations.data\r\n        .filter((i) =>\r\n          record['supervised-organisations'].includes(\r\n            `${i.abbreviation}-${i['full-name']}`\r\n          )\r\n        )\r\n        .map((i) => i.id)\r\n\r\n      let ob = { name: record.name, 'supervised-organisations': ids }\r\n\r\n      dispatch(\r\n        putHeads({\r\n          id: record['supervisor-id'],\r\n          client: {\r\n            name: record.name,\r\n            'supervised-organisations': record['supervised-organisations'].map(\r\n              (i) => ({\r\n                abbreviation: i.split('-')[0],\r\n                'full-name': i.split('-')[1],\r\n              })\r\n            ),\r\n          },\r\n          server: ob,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        data={dataSource}\r\n        setData={setDataSource}\r\n        loading={status !== 'success'}\r\n        handleEdit={onEdit}\r\n        isEditable={true}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(HeadsTable)\r\n","import React from 'react'\r\nimport { Tag } from 'antd'\r\n\r\nexport const setColumnsHelper = (options) => {\r\n  return [\r\n    {\r\n      title: '№',\r\n      dataIndex: '#',\r\n      width: '2%',\r\n      align: 'center',\r\n    },\r\n\r\n    {\r\n      title: 'Должность',\r\n      dataIndex: 'position',\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: 'ФИО',\r\n      dataIndex: 'name',\r\n      width: '30%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Курируемые организации',\r\n      dataIndex: 'supervised-organisations',\r\n      width: '35%',\r\n      type: 'multi-select',\r\n      editable: true,\r\n      data: options,\r\n      render: (tags) => {\r\n        return (\r\n          <span>\r\n            {tags.map((tag, index) => {\r\n              let color = tags.length > 3 ? 'geekblue' : 'green'\r\n              return (\r\n                <Tag\r\n                  color={color}\r\n                  key={`${tag.split('-')[0]}-${index}`}\r\n                  style={{ margin: '5px 5px' }}\r\n                >\r\n                  {/* {`${tag['abbreviation'].toUpperCase()} -\r\n                    ${tag['full-name'].toUpperCase()}`} */}\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              )\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n    // {\r\n    //   title: 'Фото',\r\n    //   dataIndex: 'image-path',\r\n    //   width: '10%',\r\n    //   editable: true,\r\n    // },\r\n  ]\r\n}\r\n\r\nexport const setDataSourceHelper = (data) =>\r\n  data.map((i, index) => ({\r\n    key: i['supervisor-id'],\r\n    '#': ++index,\r\n    'supervisor-id': i['supervisor-id'],\r\n    name: i.name,\r\n    position: i.position,\r\n    'image-path': i['image-path'],\r\n    'supervised-organisations': i['supervised-organisations'].map(\r\n      (o) => `${o.abbreviation}-${o['full-name']}`\r\n    ),\r\n  }))\r\n","import React from 'react'\r\nimport { Modal, Button } from 'antd'\r\n\r\nexport default class CustomModal extends React.Component {\r\n  state = { visible: false }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    })\r\n  }\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { btntext, btnstyle, title, children } = this.props\r\n    return (\r\n      <>\r\n        <Button type='primary' onClick={this.showModal} style={btnstyle}>\r\n          {btntext}\r\n        </Button>\r\n        <Modal\r\n          title={title}\r\n          width='50%'\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className='Leaders_style_modal'\r\n          footer={null}\r\n        >\r\n          {children}\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Modal from '../../common/Modal'\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport { putOrganisationList } from '../../features/admin/adminSlice'\r\n\r\nconst HeadsModal = ({ organisations }) => {\r\n  const [dataSource, setDataSource] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (organisations.status === 'success') {\r\n      let arr = organisations.data.map((i, index) => ({\r\n        key: i.id,\r\n        '#': ++index,\r\n        'full-name': `${i.abbreviation}-${i['full-name']}`,\r\n        abbreviation: i.abbreviation,\r\n        id: i.id,\r\n      }))\r\n\r\n      setDataSource(arr)\r\n    }\r\n  }, [organisations])\r\n\r\n  const onEdit = (record) => {\r\n    dispatch(\r\n      putOrganisationList({\r\n        abbreviation: record.abbreviation,\r\n        'full-name': record['full-name'],\r\n        id: record.id,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      btntext='Редактировать курируемые организации'\r\n      btnstyle={{ marginBottom: 15 }}\r\n      title='Курируемые организации'\r\n    >\r\n      <Table\r\n        columns={columns}\r\n        data={dataSource}\r\n        setData={setDataSource}\r\n        loading={organisations.status !== 'success'}\r\n        handleEdit={onEdit}\r\n        isEditable={true}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default React.memo(HeadsModal)\r\n\r\nconst columns = [\r\n  {\r\n    title: '№',\r\n    dataIndex: '#',\r\n    width: '2%',\r\n    align: 'center',\r\n  },\r\n  {\r\n    title: 'Аббревиатура',\r\n    dataIndex: 'abbreviation',\r\n    width: '20%',\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Курируемые организации',\r\n    dataIndex: 'full-name',\r\n    width: '50%',\r\n    editable: true,\r\n  },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getHeads } from '../../features/heads/headsSlice'\r\nimport HeadsTable from './HeadsTable'\r\nimport HeadsModal from './HeadsModal'\r\n\r\nconst Heads = () => {\r\n  const { organisationList } = useSelector((state) => state.admin)\r\n  const { status, data } = useSelector((state) => state.heads)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    data.length === 0 && dispatch(getHeads())\r\n  }, [data])\r\n\r\n  return (\r\n    <div>\r\n      <HeadsModal organisations={organisationList} />\r\n      <HeadsTable\r\n        organisations={organisationList}\r\n        data={data}\r\n        status={status}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Heads)\r\n","import React, { createContext, useState } from 'react'\r\n\r\nconst AppContext = createContext()\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  let [selectedValue, setSelectedValue] = useState()\r\n  let [selectedDictionaryName, setSelectedDictionaryName] = useState()\r\n  let [selectedIndustry, setSelectedIndustry] = useState()\r\n  let [filteredData, setFilteredData] = useState(null)\r\n  let [indicators, setIndicators] = useState({})\r\n  let [searchText, setSearchText] = useState()\r\n  let [fetchedDictionaryData, setFetchedDictionaryData] = useState({\r\n    loading: true,\r\n  })\r\n  let [fetchedIndicatorInfoData, setFetchedIndicatorInfoData] = useState({\r\n    loading: true,\r\n  })\r\n  let [fetchedIndicatorData, setFetchedIndicatorData] = useState({\r\n    loading: true,\r\n  })\r\n  let [\r\n    fetchedIndicatorStrategyData,\r\n    setFetchedIndicatorStrategyData,\r\n  ] = useState({\r\n    loading: true,\r\n  })\r\n  let [modalIndicator, setModalIndicator] = useState()\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        selectedValue,\r\n        setSelectedValue,\r\n        filteredData,\r\n        setFilteredData,\r\n        indicators,\r\n        setIndicators,\r\n        dictionary_names,\r\n        searchText,\r\n        setSearchText,\r\n        fetchedDictionaryData,\r\n        setFetchedDictionaryData,\r\n        fetchedIndicatorData,\r\n        setFetchedIndicatorData,\r\n        fetchedIndicatorStrategyData,\r\n        setFetchedIndicatorStrategyData,\r\n        fetchedIndicatorInfoData,\r\n        setFetchedIndicatorInfoData,\r\n        selectedDictionaryName,\r\n        setSelectedDictionaryName,\r\n        selectedIndustry,\r\n        setSelectedIndustry,\r\n        modalIndicator,\r\n        setModalIndicator,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport { AppContext, AppContextProvider }\r\n\r\nconst dictionary_names = [\r\n  'Сфера',\r\n  'Государственная программа',\r\n  'Периодичность обновления',\r\n  'Единица измерения',\r\n  'Ответственный орган',\r\n  'Источник информации',\r\n  'Стратегия 2050',\r\n  // 'Стратегия 2050',\r\n]\r\n","import axios from 'axios'\r\n\r\nexport const getAPI = async (url) => await axios(url)\r\n\r\nexport const postAPI = async (url, data) => await axios.post(url, data)\r\n\r\nexport const putAPI = async (url, data) => await axios.put(url, data)\r\n\r\nexport const deleteAPI = async (url) => await axios.delete(url)\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport const AdminButton = ({\r\n  handleAdd,\r\n  text2,\r\n  text1,\r\n  text3,\r\n  style = {\r\n    margin: '5 0',\r\n  },\r\n  text = `+`,\r\n}) => {\r\n  const handleClick = () => handleAdd()\r\n  const renderBTN = (text1, text2, text3) => {\r\n    if (text1) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text1}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    if (text2) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text2}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n    if (text3) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text3}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n  }\r\n  return renderBTN(text1, text2, text3)\r\n  /* text2 ? <Button type='primary' onClick={handleClick} style={style} className='AdminButton_style' title={text2}>\r\n            {text}\r\n        </Button> : <Button type='primary' onClick={handleClick} style={style} className='AdminButton_style' title={text1}>\r\n            {text}\r\n        </Button>*/\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nexport const AdminCard = (props) => {\r\n  const { title } = props\r\n\r\n  return (\r\n    <Card\r\n      title={title}\r\n      bordered={false}\r\n      style={{ width: '100%' }}\r\n      className='AdminCard_style'\r\n    >\r\n      {/* <Space direction='vertical'>{props.children}</Space> */}\r\n      {props.children}\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react'\r\nimport { putAPI, getAPI } from '../../utils/api'\r\nimport {\r\n  getObjectKeys,\r\n  capitalizeFirstLetter,\r\n  strcmp,\r\n} from '../../utils/helper'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Table, Modal } from '../common'\r\n\r\nexport const AdminIndicator = ({ isLink, isStrategy }) => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const {\r\n    dictionary_names,\r\n    setModalIndicator,\r\n    fetchedDictionaryData,\r\n    fetchedIndicatorData,\r\n    setFetchedIndicatorData,\r\n  } = useContext(AppContext)\r\n  let columns = []\r\n  const dataSource = []\r\n\r\n  useEffect(() => {\r\n    getAPI('/sc-analytic-indicators/api/indicators').then((res) => {\r\n      setFetchedIndicatorData({\r\n        loading: false,\r\n        data: res.data,\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  let names = [...dictionary_names, 'Отрасль'] //table column names\r\n  names = names.filter((name) =>\r\n    isStrategy ? name !== 'Сфера' : name !== 'Стратегия 2050'\r\n  )\r\n  names.sort()\r\n\r\n  //get filter and select option drop data\r\n  let filter = {} //table column's filter options\r\n  let option_data = {} // on edit drop select options\r\n  if (!fetchedDictionaryData.loading) {\r\n    fetchedDictionaryData.data.map((item) => {\r\n      filter = {\r\n        ...filter,\r\n        [item.name]: item.options.map((option) => option.name),\r\n      }\r\n\r\n      if (\r\n        !isStrategy ? item.name === 'Сфера' : item.name === 'Стратегия 2050'\r\n      ) {\r\n        const arr = item.options.map((i) => i.options.map((ii) => ii.name))\r\n        filter = { ...filter, Отрасль: [].concat(...arr) }\r\n      }\r\n\r\n      option_data = {\r\n        ...option_data,\r\n        [item.name]: item.options.map((option) => {\r\n          return {\r\n            title: option.name,\r\n            value: option.name,\r\n            id: option.id,\r\n            children: [],\r\n          }\r\n        }),\r\n      }\r\n    })\r\n\r\n    const obj = fetchedDictionaryData.data.find((item) =>\r\n      isStrategy ? item.name === 'Стратегия 2050' : item.name === 'Сфера'\r\n    )\r\n\r\n    option_data = {\r\n      ...option_data,\r\n      Отрасль: [].concat(\r\n        ...obj.options.map((op) =>\r\n          op.options.map((o) => ({\r\n            title: o.name,\r\n            value: o.name,\r\n            id: o.id,\r\n            children: [],\r\n          }))\r\n        )\r\n      ),\r\n    }\r\n  }\r\n\r\n  //set columns and dataSource for table\r\n  columns = [\r\n    {\r\n      title: 'Индикатор',\r\n      dataIndex: 'Индикатор',\r\n      width: 250,\r\n      editable: true,\r\n      render: (text, record) =>\r\n        isLink ? (\r\n          <a\r\n            onClick={() => {\r\n              setOpen(true)\r\n              setModalIndicator({\r\n                name: record.key,\r\n                id: record.id,\r\n              })\r\n            }}\r\n          >\r\n            {text}\r\n          </a>\r\n        ) : (\r\n          text\r\n        ),\r\n      sorter: (a, b) => strcmp(a.Индикатор, b.Индикатор),\r\n      sortDirections: ['ascend'],\r\n    },\r\n    ...names.map((name) => {\r\n      const filtered =\r\n        filter[name] &&\r\n        filter[name].map((option_name) => ({\r\n          text: option_name,\r\n          value: option_name,\r\n        }))\r\n\r\n      return {\r\n        title: capitalizeFirstLetter(\r\n          name === 'Стратегия 2050' ? 'Сфера' : name\r\n        ),\r\n        dataIndex: name,\r\n        editable: true,\r\n        width: 250,\r\n        data: option_data[name],\r\n        filters: filtered,\r\n        type: 'select',\r\n        onFilter: (value, record) => record[name] === value,\r\n      }\r\n    }),\r\n  ]\r\n\r\n  if (!fetchedIndicatorData.loading) {\r\n    const arr = isStrategy\r\n      ? fetchedIndicatorData.data.filter(\r\n          (item) =>\r\n            item.dictionaries.Тип && item.dictionaries.Тип === 'Стратегия'\r\n        )\r\n      : fetchedIndicatorData.data.filter(\r\n          (item) =>\r\n            item.dictionaries.Тип && item.dictionaries.Тип === 'Индикатор'\r\n        )\r\n\r\n    arr.map((indicator) => {\r\n      let ob = {\r\n        id: indicator.id,\r\n        key: indicator.name,\r\n        Индикатор: indicator.name,\r\n      }\r\n      getObjectKeys(indicator.dictionaries).map((dictionary_name) => {\r\n        ob = {\r\n          ...ob,\r\n          [dictionary_name]: indicator.dictionaries[dictionary_name],\r\n        }\r\n      })\r\n      dataSource.push(ob)\r\n    })\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const data_post = {\r\n        name: record['Индикатор'],\r\n        dictionaries: [isStrategy ? 229 : 227],\r\n      }\r\n      let ids = []\r\n      const row = await form.validateFields()\r\n\r\n      const arr = Object.keys(row).map((key) => ({\r\n        name: key,\r\n        value: row[key],\r\n      }))\r\n      const filtered_arr = arr.filter(\r\n        (item) => item.value !== undefined && item.name !== 'Индикатор'\r\n      )\r\n\r\n      filtered_arr.map((item) => {\r\n        if (item.name === 'Отрасль') {\r\n          const name = isStrategy ? 'Стратегия 2050' : 'Сфера'\r\n          const ob = fetchedDictionaryData.data.find((i) => i.name === name)\r\n          const obb = ob.options.find((i) =>\r\n            i.options.find((ii) => ii.name === item.value)\r\n          )\r\n          const o = obb.options.find((i) => i.name === item.value)\r\n          ids = [...ids, o.id]\r\n        } else {\r\n          const ob = fetchedDictionaryData.data.find(\r\n            (i) => i.name === item.name\r\n          )\r\n          const obb = ob.options.find((i) => i.name === item.value)\r\n          ids = [...ids, obb.id]\r\n        }\r\n      })\r\n\r\n      data_post.dictionaries = [...data_post.dictionaries, ...ids]\r\n      putAPI(`/sc-analytic-indicators/api/indicators/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI('/sc-analytic-indicators/api/indicators').then((res) => {\r\n            setFetchedIndicatorData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      form.resetFields()\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal open={open} setOpen={setOpen} className='AdminIndicator_style' />\r\n      <Table\r\n        cols={columns}\r\n        data={dataSource}\r\n        loading={fetchedIndicatorData.loading}\r\n        url={'/sc-analytic-indicators/api/indicators'}\r\n        setFetchedData={setFetchedIndicatorData}\r\n        save={save}\r\n        isLink={isLink}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","export const getObjectKeys = (obj) => Object.keys(obj).map((key) => key)\r\n\r\nexport const capitalizeFirstLetter = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nexport const strcmp = (a, b) => {\r\n  if (a === b) {\r\n    return 0\r\n  }\r\n\r\n  if (a > b) {\r\n    return 1\r\n  }\r\n\r\n  return -1\r\n}\r\n","import React from 'react'\r\nimport { Input } from 'antd'\r\n\r\nexport const AdminInput = ({\r\n  placeholder = 'Новый элемент',\r\n  defaultValue = '',\r\n  required = true,\r\n\r\n  inptRef,\r\n}) => {\r\n  return (\r\n    <Input\r\n      placeholder={placeholder}\r\n      defaultValue={defaultValue}\r\n      required={required}\r\n      allowClear\r\n      ref={inptRef}\r\n      className='AdminInput_style'\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd'\r\n\r\nexport const AdminTabs = (props) => {\r\n  return (\r\n    <Tabs\r\n      defaultActiveKey='1'\r\n      tabPosition={props.position || 'left'}\r\n      className={props.classname || 'Indicators_tab_style'}\r\n    >\r\n      {props.children}\r\n    </Tabs>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Select } from '../common'\r\n\r\nimport { Alert, Form, InputNumber, Button, DatePicker, Space } from 'antd'\r\n\r\nexport const Controllers = ({ plan }) => {\r\n  const [state, setState] = useState({ date: null, value: null })\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n  const { modalIndicator, setFetchedIndicatorInfoData } = useContext(AppContext)\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const handleSubmit = () => {\r\n    if (state.date && state.value) {\r\n      const ob = {\r\n        date: state.date.month\r\n          ? `${state.date.year}-${state.date.month}-15`\r\n          : `${state.date.year}-12-31`,\r\n        'edit-comment': '',\r\n        fact: plan === 'Факт' ? state.value : null,\r\n        planned: plan !== 'Факт' ? state.value : null,\r\n      }\r\n\r\n      setState({ date: null, value: null })\r\n\r\n      postAPI(\r\n        `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`,\r\n        ob\r\n      )\r\n        .then((res) => {\r\n          setStatus({\r\n            alert: true,\r\n            message: 'Успешно',\r\n            description: 'Данные успешно отправлены на сервер',\r\n            type: 'success',\r\n          })\r\n\r\n          setTimeout(\r\n            () =>\r\n              setStatus({\r\n                alert: false,\r\n              }),\r\n            15000\r\n          )\r\n\r\n          getAPI(\r\n            `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n          ).then(function (res) {\r\n            setFetchedIndicatorInfoData({\r\n              data: res.data,\r\n              loading: false,\r\n            })\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          setStatus({\r\n            alert: true,\r\n            message: 'Ошибка',\r\n            description: 'Ошибка с записью данных на сервер',\r\n            type: 'error',\r\n          })\r\n\r\n          setTimeout(\r\n            () =>\r\n              setStatus({\r\n                alert: false,\r\n              }),\r\n            15000\r\n          )\r\n        })\r\n\r\n      form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        15000\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form form={form} className='Controllers_style_inner'>\r\n      <Form.Item className='Controllers_style_item'>\r\n        <Space>\r\n          <Form.Item name='datepicker_field' className='datepicker_field_style'>\r\n            <Space>\r\n              <DatePicker\r\n                onChange={(date, dateString) =>\r\n                  setState((state) => ({\r\n                    ...state,\r\n                    date: { year: dateString },\r\n                  }))\r\n                }\r\n                picker='year'\r\n                allowClear={true}\r\n                placeholder={'Год'}\r\n                locale={locale}\r\n              />\r\n              <Select\r\n                placeholder={'Месяц'}\r\n                data={month}\r\n                style={{ width: 170, background: '#fff', color: '#333' }}\r\n                callBack={(id) =>\r\n                  setState((state) => ({\r\n                    ...state,\r\n                    date: { ...state.date, month: id },\r\n                  }))\r\n                }\r\n              />\r\n            </Space>\r\n          </Form.Item>\r\n          <Form.Item name='number_field'>\r\n            <InputNumber\r\n              onChange={(value) => setState((state) => ({ ...state, value }))}\r\n              placeholder={plan}\r\n            />\r\n          </Form.Item>\r\n          <Button type='primary' onClick={handleSubmit}>\r\n            +\r\n          </Button>\r\n        </Space>\r\n      </Form.Item>\r\n      {status.alert && (\r\n        <Alert\r\n          message={status.message}\r\n          description={status.description}\r\n          type={status.type}\r\n          closable\r\n          onClose={onCloseAlert}\r\n          style={{ margin: 15 }}\r\n        />\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst locale = {\r\n  lang: {\r\n    locale: 'ru',\r\n    placeholder: 'Выбрать дату',\r\n    today: 'Сегодня',\r\n    now: 'Сейчас',\r\n    ok: 'ок',\r\n    clear: 'очистить',\r\n    month: 'Месяц',\r\n    year: 'Год',\r\n    yearFormat: 'YYYY',\r\n    dateFormat: 'M/D/YYYY',\r\n    dayFormat: 'D',\r\n    dateTimeFormat: 'M/D/YYYY HH:mm:ss',\r\n    monthFormat: 'MMMM',\r\n    monthBeforeYear: false,\r\n  },\r\n  timePickerLocale: {\r\n    placeholder: 'Выбрать время',\r\n  },\r\n  dateFormat: 'YYYY-MM-DD',\r\n  dateTimeFormat: 'YYYY-MM-DD HH:mm:ss',\r\n  weekFormat: 'YYYY-wo',\r\n  monthFormat: 'YYYY-MM',\r\n}\r\n\r\nconst month = [\r\n  { id: '01', title: 'Январь', value: 'Январь', children: [] },\r\n  { id: '02', title: 'Февраль', value: 'Февраль', children: [] },\r\n  { id: '03', title: 'Март', value: 'Март', children: [] },\r\n  { id: '04', title: 'Апрель', value: 'Апрель', children: [] },\r\n  { id: '05', title: 'Май', value: 'Май', children: [] },\r\n  { id: '06', title: 'Июнь', value: 'Июнь', children: [] },\r\n  { id: '07', title: 'Июль', value: 'Июль', children: [] },\r\n  { id: '08', title: 'Август', value: 'Август', children: [] },\r\n  {\r\n    id: '09',\r\n    title: 'Сентябрь',\r\n    value: 'Сентябрь',\r\n    children: [],\r\n  },\r\n  {\r\n    id: '10',\r\n    title: 'Октябрь',\r\n    value: 'Октябрь',\r\n    children: [],\r\n  },\r\n  { id: '11', title: 'Ноябрь', value: 'Ноябрь', children: [] },\r\n  {\r\n    id: '12',\r\n    title: 'Декабрь',\r\n    value: 'Декабрь',\r\n    children: [],\r\n  },\r\n]\r\n","import React, { useContext } from 'react'\r\nimport { Table } from '../common'\r\nimport { AppContext } from '../../context/main'\r\nimport { putAPI, getAPI } from '../../utils/api'\r\n\r\nexport const IndicatorInfoTable = ({ plan, isStrategy }) => {\r\n  const {\r\n    fetchedIndicatorInfoData,\r\n    setFetchedIndicatorInfoData,\r\n    modalIndicator,\r\n  } = useContext(AppContext)\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Дата',\r\n      dataIndex: 'year',\r\n      key: 'year',\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: plan,\r\n      dataIndex: plan,\r\n      key: plan,\r\n      type: 'number',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Дата изменения',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Коментарий',\r\n      key: 'comment',\r\n      editable: true,\r\n      dataIndex: 'comment',\r\n    },\r\n  ]\r\n\r\n  let dataSource =\r\n    !fetchedIndicatorInfoData.loading &&\r\n    fetchedIndicatorInfoData.data.map((item, index) => {\r\n      const date = item['last-edit'].substr(0, item['last-edit'].indexOf('T'))\r\n      const year = item.date.substr(0, 7)\r\n\r\n      return plan === 'План'\r\n        ? item.planned && {\r\n            key: index,\r\n            id: item.id,\r\n            year,\r\n            План: item.planned,\r\n            date,\r\n            comment: item['edit-comment'],\r\n          }\r\n        : item.fact && {\r\n            key: index,\r\n            id: item.id,\r\n            year,\r\n            Факт: item.fact,\r\n            date,\r\n            comment: item['edit-comment'],\r\n          }\r\n    })\r\n\r\n  dataSource =\r\n    dataSource && dataSource.filter((ob) => ob !== undefined && ob !== null)\r\n\r\n  const edit = (record, form, setEditingKey) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      const ob = fetchedIndicatorInfoData.data.find(\r\n        (item) => item.id === record.id\r\n      )\r\n\r\n      const data_post = {\r\n        date: `${record.year}-01`,\r\n        'edit-comment': row.comment,\r\n        fact: row.Факт ? row.Факт : ob.fact,\r\n        planned: row.План ? row.План : ob.planned,\r\n      }\r\n\r\n      putAPI(`/sc-analytic-indicators/api/indexes/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI(\r\n            `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n          ).then(function (res) {\r\n            setFetchedIndicatorInfoData({\r\n              data: res.data,\r\n              loading: false,\r\n            })\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      cols={columns}\r\n      data={dataSource}\r\n      loading={fetchedIndicatorInfoData.loading}\r\n      url={'/sc-analytic-indicators/api/indexes'}\r\n      setFetchedData={setFetchedIndicatorInfoData}\r\n      url2={`/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`}\r\n      save={save}\r\n      edit={edit}\r\n      \r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Controllers } from './Controllers'\r\nimport { IndicatorInfoTable as Table } from './IndicatorInfoTable'\r\n\r\nexport const IndicatorInfo = ({ plan, isStrategy }) => {\r\n  return (\r\n    <div className='Controllers_style'>\r\n      <Controllers plan={plan} />\r\n      <Table plan={plan} isStrategy={isStrategy} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Modal, Tabs } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI } from '../../utils/api'\r\n\r\nimport { AdminTabs } from './AdminTabs'\r\nimport { IndicatorInfo } from '../IndicatorInfo'\r\n\r\nexport const AdminModal = ({ open, setOpen }) => {\r\n  const { modalIndicator, setFetchedIndicatorInfoData } = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    if (modalIndicator) {\r\n      getAPI(\r\n        `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n      ).then((res) =>\r\n        setFetchedIndicatorInfoData((state) => ({\r\n          ...state,\r\n          data: res.data,\r\n          loading: false,\r\n        }))\r\n      )\r\n    }\r\n\r\n    return () => setFetchedIndicatorInfoData({ loading: true })\r\n  }, [modalIndicator, setFetchedIndicatorInfoData])\r\n\r\n  const { TabPane } = Tabs\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={modalIndicator && modalIndicator.name}\r\n      visible={open}\r\n      width={'auto'}\r\n      onOk={handleCloseModal}\r\n      onCancel={handleCloseModal}\r\n      className='AdminModal_style'\r\n    >\r\n      <AdminTabs position={'top'}>\r\n        <TabPane tab={'План'} key='1'>\r\n          <IndicatorInfo plan={'План'} />\r\n        </TabPane>\r\n        <TabPane tab={'Факт'} key='2'>\r\n          <IndicatorInfo plan={'Факт'} />\r\n        </TabPane>\r\n      </AdminTabs>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useRef, useContext } from 'react'\r\nimport { Input } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const AdminSearch = ({ style, ref }) => {\r\n  const inptRef = useRef()\r\n  const { setSearchText } = useContext(AppContext)\r\n\r\n  const handleSearch = () => setSearchText(inptRef.current.input.value)\r\n\r\n  return (\r\n    <Input\r\n      placeholder='Поиск справочника'\r\n      defaultValue=''\r\n      ref={inptRef}\r\n      allowClear\r\n      onChange={handleSearch}\r\n      /* style={style}*/\r\n      className='AdminSearch_style'\r\n    />\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TreeSelect } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const AdminSelect = ({\r\n  data,\r\n  placeholder = 'Выбрать справочник',\r\n  style = { margin: 5, marginLeft: 0, marginRight: 8 },\r\n  callBack,\r\n  defaultValue,\r\n\r\n}) => {\r\n  const {\r\n    setSelectedDictionaryName,\r\n    setSelectedIndustry,\r\n    dictionary_names,\r\n  } = useContext(AppContext)\r\n\r\n  const handleChangeDictionaryName = (value) => setSelectedDictionaryName(value)\r\n  const handleChangeOptionName = (value) => {\r\n    const selected_value = data.find((item) => item.value === value)\r\n    setSelectedIndustry(value)\r\n    callBack && selected_value && callBack(selected_value.id)\r\n  }\r\n\r\n  const setTreeData = (data) =>\r\n    data.map((name) => ({\r\n      title: name,\r\n      value: name,\r\n      children: [],\r\n    }))\r\n\r\n  const renderSelect = () =>\r\n    data ? (\r\n      <TreeSelect\r\n        style={style}\r\n        allowClear\r\n        placeholder={placeholder}\r\n        treeData={data}\r\n        onChange={handleChangeOptionName}\r\n        className='AdminSelect_style'\r\n        defaultValue={defaultValue}\r\n      />\r\n    ) : (\r\n      <TreeSelect\r\n        placeholder={placeholder}\r\n        onChange={handleChangeDictionaryName}\r\n        style={style}\r\n        treeData={setTreeData(dictionary_names)}\r\n        className='AdminSelect_style'\r\n      />\r\n    )\r\n\r\n  return <>{renderSelect()}</>\r\n}\r\n","import React from 'react'\r\n\r\nimport { Form, Input, InputNumber, Select } from 'antd'\r\n\r\nexport const EditableCell = ({\r\n  data,\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const switchCase = (type) => {\r\n    switch (type) {\r\n      case 'select':\r\n        return (\r\n          <Select placeholder='Выбрать значение' allowClear>\r\n            {data &&\r\n              data.map((item) => (\r\n                <Select.Option\r\n                  key={`${item.title}-${item.id}`}\r\n                  value={item.title}\r\n                >\r\n                  {item.title}\r\n                </Select.Option>\r\n              ))}\r\n          </Select>\r\n        )\r\n      case 'number':\r\n        return <InputNumber className='Edit_input_style' />\r\n      default:\r\n        return <Input className='Edit_input_style' />\r\n    }\r\n  }\r\n\r\n  const inputNode = switchCase(inputType)\r\n\r\n  return (\r\n    <td {...restProps} className='Table_td_style_line'>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={\r\n            inputType !== 'select' &&\r\n            inputType !== 'date' &&\r\n            inputType !== 'number' && [\r\n              {\r\n                required: true,\r\n                message: `это поле необходимо заполнить!`,\r\n              },\r\n            ]\r\n          }\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { Table, Form, Space, Popconfirm } from 'antd'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from '@ant-design/icons'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI, deleteAPI } from '../../utils/api'\r\n\r\nimport { EditableCell } from './EditableCell'\r\n\r\nexport const AdminTable = ({\r\n  cols,\r\n  data,\r\n  loading,\r\n  url,\r\n  url2,\r\n  setFetchedData,\r\n  save,\r\n  isLink,\r\n}) => {\r\n  const { searchText } = useContext(AppContext)\r\n  const [filtered, setFiltered] = useState()\r\n  const [editingKey, setEditingKey] = useState('')\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (data && searchText) {\r\n      setFiltered(\r\n        data.filter((item) => {\r\n          let obb =\r\n            item.children &&\r\n            item.children.some((ob) => {\r\n              const isNestedFilter = ob.key\r\n                .toLowerCase()\r\n                .includes(searchText.toLowerCase())\r\n              return isNestedFilter\r\n            })\r\n\r\n          const isFilter = item.key\r\n            .toLowerCase()\r\n            .includes(searchText.toLowerCase())\r\n          return obb ? obb : isFilter\r\n        })\r\n      )\r\n    }\r\n  }, [data, searchText])\r\n\r\n  const isEditing = (record) => record.key === editingKey\r\n\r\n  const edit = (record, form, setEditingKey) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const arr = isLink\r\n    ? cols\r\n    : [\r\n        ...cols,\r\n        {\r\n          title: 'Действие',\r\n          dataIndex: '',\r\n          key: 'x',\r\n          render: (_, record) => {\r\n            const editable = isEditing(record)\r\n            return editable ? (\r\n              <span>\r\n                <a\r\n                  onClick={() => save(record, form, setEditingKey)}\r\n                  style={{\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <SaveOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Сохранить'\r\n                  />\r\n                </a>\r\n                <Popconfirm\r\n                  title='Вы уверены что хотите оменить изменения?'\r\n                  onConfirm={cancel}\r\n                >\r\n                  <CloseOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Отменить'\r\n                  />\r\n                </Popconfirm>\r\n              </span>\r\n            ) : (\r\n              <Space>\r\n                <a\r\n                  disabled={editingKey !== ''}\r\n                  onClick={() => edit(record, form, setEditingKey)}\r\n                >\r\n                  <EditOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Редактировать'\r\n                  />\r\n                </a>\r\n                <Popconfirm\r\n                  title='Вы уверены что хотите удалить даныне?'\r\n                  onConfirm={() => handleDelete(record.id)}\r\n                >\r\n                  <DeleteOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Удалить'\r\n                  />\r\n                </Popconfirm>\r\n              </Space>\r\n            )\r\n          },\r\n        },\r\n      ]\r\n\r\n  cols = cols[0].title === 'Все справочники' ? cols : arr\r\n\r\n  const handleDelete = (id) => {\r\n    deleteAPI(`${url}/${id}`).then((res) =>\r\n      getAPI(url2 ? url2 : url)\r\n        .then((res) =>\r\n          setFetchedData({\r\n            loading: false,\r\n            data: res.data,\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n    )\r\n  }\r\n\r\n  const mergedColumns = cols.map((col, index) => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => {\r\n        return {\r\n          record,\r\n          setIndicator: col.setIndicator,\r\n          inputType: col.type,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          data: col.data,\r\n          editing: isEditing(record),\r\n          callBack: col.callBack,\r\n        }\r\n      },\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        locale={{\r\n          filterTitle: 'Меню фильтра',\r\n          filterConfirm: 'Ок',\r\n          filterReset: 'Сбросить',\r\n          filterEmptyText: 'Нет фильтров',\r\n          selectAll: 'Выбрать текущую страницу',\r\n          selectInvert: 'Invert current page',\r\n          selectionAll: 'Выбрать все',\r\n          sortTitle: 'Сортировать',\r\n          expand: 'Expand row',\r\n          collapse: 'Collapse row',\r\n          triggerDesc: 'Сортировать по убыванию',\r\n          triggerAsc: 'Сортировать по возрастанию',\r\n          cancelSort: 'Отменить сортировку',\r\n        }}\r\n        columns={mergedColumns}\r\n        dataSource={searchText ? filtered : data}\r\n        loading={loading}\r\n        pagination={{\r\n          pageSizeOptions: ['10', '20', '25', '30'],\r\n          showSizeChanger: true,\r\n          locale: { items_per_page: '' },\r\n          onChange: cancel,\r\n        }}\r\n        className='AdminTable_style'\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdminTable as Table } from '../common/AdminTable'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI, putAPI } from '../../utils/api'\r\n\r\nexport const DictionaryTable = () => {\r\n  const {\r\n    selectedDictionaryName,\r\n    fetchedDictionaryData,\r\n    setFetchedDictionaryData,\r\n  } = useContext(AppContext)\r\n  let columns = []\r\n  let data = []\r\n\r\n  columns = selectedDictionaryName\r\n    ? [\r\n        {\r\n          title: 'Наименование',\r\n          dataIndex: selectedDictionaryName,\r\n          editable: true,\r\n          width: '90%',\r\n        },\r\n      ]\r\n    : [\r\n        {\r\n          title: 'Наименование',\r\n          dataIndex: 'All',\r\n          width: '90%',\r\n          padding: '10px',\r\n        },\r\n      ]\r\n\r\n  if (!fetchedDictionaryData.loading) {\r\n    const arr = fetchedDictionaryData.data.filter((item) => item.name !== 'Тип')\r\n\r\n    const obb = arr.find((item) => item.name === selectedDictionaryName)\r\n\r\n    data = selectedDictionaryName\r\n      ? obb.options.map((item) =>\r\n          item.options.length > 0\r\n            ? {\r\n                key: item.name,\r\n                id: item.id,\r\n                tag: item.tag,\r\n                'parent-id': obb.id,\r\n                [item.tag]: item.name,\r\n                children: item.options.map((ob) => ({\r\n                  key: ob.name,\r\n                  [item.tag]: ob.name,\r\n                  'parent-id': item.id,\r\n                  tag: item.tag,\r\n                  id: ob.id,\r\n                })),\r\n              }\r\n            : {\r\n                key: item.name,\r\n                id: item.id,\r\n                tag: item.tag,\r\n                'parent-id': obb.id,\r\n                [selectedDictionaryName]: item.name,\r\n              }\r\n        )\r\n      : [].concat(\r\n          ...arr.map((item) =>\r\n            item.name === 'Сфера' || selectedDictionaryName === 'Стратегия 2050'\r\n              ? item.options.map((op) => ({\r\n                  key: op.name,\r\n                  All: op.name,\r\n                  children: op.options.map((ob) => ({\r\n                    key: ob.name,\r\n                    All: ob.name,\r\n                  })),\r\n                }))\r\n              : {\r\n                  key: item.name,\r\n                  All: item.name,\r\n                  children: item.options.map((ob) => ({\r\n                    key: ob.name,\r\n                    All: ob.name,\r\n                  })),\r\n                }\r\n          )\r\n        )\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n\r\n      const data_post = {\r\n        name: row[record.tag],\r\n        tag: record.tag,\r\n      }\r\n\r\n      putAPI(`/sc-analytic-indicators/api/dictionaries/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI(`/sc-analytic-indicators/api/dictionaries`).then((res) =>\r\n            setFetchedDictionaryData({ loading: false, data: res.data })\r\n          )\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      cols={columns}\r\n      data={data}\r\n      loading={fetchedDictionaryData.loading}\r\n      url={'/sc-analytic-indicators/api/dictionaries'}\r\n      setFetchedData={setFetchedDictionaryData}\r\n      save={save}\r\n    />\r\n  )\r\n}\r\n","import React, { useState, useRef, useContext } from 'react'\r\nimport { Alert, Form } from 'antd'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { Button, Input, Select } from '../common'\r\n\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const Controllers = ({ ant_form, setIsError }) => {\r\n  const inptRef = useRef()\r\n  const inptRef2 = useRef()\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n\r\n  const {\r\n    selectedIndustry,\r\n    selectedDictionaryName,\r\n    fetchedDictionaryData,\r\n    setFetchedDictionaryData,\r\n  } = useContext(AppContext)\r\n\r\n  let obb\r\n  if (!fetchedDictionaryData.loading) {\r\n    obb = fetchedDictionaryData.data.find(\r\n      (item) => item.name === selectedDictionaryName\r\n    )\r\n  }\r\n\r\n  const handleAddDictionary = () => {\r\n    if (inptRef.current.input.value) {\r\n      const name = inptRef.current.input.value\r\n      const data = {\r\n        'parent-id': obb.id,\r\n        tag: selectedDictionaryName,\r\n        name,\r\n        options: [],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/dictionaries', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/dictionaries')\r\n          .then((res) =>\r\n            setFetchedDictionaryData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          )\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n\r\n      ant_form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите необходимое название для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleAddDictionaryChild = () => {\r\n    if (selectedIndustry && inptRef2.current.input.value) {\r\n      const name = inptRef2.current.input.value\r\n\r\n      const ob = obb.options.find((item) => item.name === selectedIndustry)\r\n      const data = {\r\n        'parent-id': ob.id,\r\n        tag: 'Отрасль',\r\n        name,\r\n        options: [],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/dictionaries', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/dictionaries')\r\n          .then((res) =>\r\n            setFetchedDictionaryData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          )\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n      ant_form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  let names = []\r\n  if (obb) {\r\n    names = obb.options.map((item) => ({\r\n      id: item.id,\r\n      title: item.name,\r\n      value: item.name,\r\n      children: [],\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {selectedDictionaryName && (\r\n        <Form.Item name='dictionary-controllers Controllers_style'>\r\n          <div className='form_add_sphere Controllers_style_inner'>\r\n            <Input\r\n              inptRef={inptRef}\r\n              required={true}\r\n              placeholder={\r\n                selectedDictionaryName === 'Сфера' ||\r\n                selectedDictionaryName === 'Стратегия 2050'\r\n                  ? 'Добавить новую сферу'\r\n                  : 'Добавить новый элемент'\r\n              }\r\n            />\r\n            <Button handleAdd={handleAddDictionary} text1={'Добавить сферу'} />\r\n          </div>\r\n        </Form.Item>\r\n      )}\r\n      {selectedDictionaryName === 'Сфера' ||\r\n      selectedDictionaryName === 'Стратегия 2050' ? (\r\n        <Form.Item className='form_add_sphere_wrap'>\r\n          <Select data={names} placeholder='Сделайте выбор' />\r\n          <div className='form_add_sphere'>\r\n            <Form.Item name='dictionary-child-controllers'>\r\n              <Input\r\n                inptRef={inptRef2}\r\n                placeholder={'Добавить новую отрасль'}\r\n                required={true}\r\n              />\r\n            </Form.Item>\r\n            <Button\r\n              handleAdd={handleAddDictionaryChild}\r\n              text2={'Добавить отрасль'}\r\n            />\r\n          </div>\r\n        </Form.Item>\r\n      ) : null}\r\n      {status.alert && (\r\n        <Alert\r\n          message={status.message}\r\n          description={status.description}\r\n          type={status.type}\r\n          closable\r\n          onClose={onCloseAlert}\r\n          style={{ margin: 15 }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { Form } from 'antd'\r\n\r\nimport { getAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Select, Search } from '../common'\r\nimport { DictionaryTable as Table } from './DictionaryTable'\r\nimport { Controllers } from './Controllers'\r\n\r\nexport const Dictionary = () => {\r\n  const [form] = Form.useForm()\r\n\r\n  const { setFetchedDictionaryData } = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    getAPI('/sc-analytic-indicators/api/dictionaries').then((res) => {\r\n      setFetchedDictionaryData({\r\n        loading: false,\r\n        data: res.data,\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <div className='first_stage_filter'>\r\n          <Select />\r\n        </div>\r\n      </Form.Item>\r\n      <Controllers ant_form={form} />\r\n      <Form.Item>\r\n        <Search style={{ width: '40%', margin: '5 0', marginRight: 8 }} />\r\n        <Table />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Dictionary } from './components/Dictionary'\r\n\r\nexport const CustomDictionary = () => {\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <Dictionary />\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Alert, Form } from 'antd'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Button, Input, Select } from '../common'\r\n\r\nexport const Controllers = ({ isStrategy }) => {\r\n  const [indicator, setIndicator] = useState([])\r\n  const {\r\n    fetchedDictionaryData,\r\n    setFetchedIndicatorData,\r\n    setFetchedIndicatorStrategyData,\r\n  } = useContext(AppContext)\r\n\r\n  const inputRef = useRef()\r\n  const [form] = Form.useForm()\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n\r\n  const handleSubmit = () => {\r\n    if (inputRef.current.input.value) {\r\n      const typeId = isStrategy ? 229 : 227\r\n      const data = {\r\n        name: inputRef.current.input.value,\r\n        dictionaries: [...indicator, typeId],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/indicators', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/indicators')\r\n          .then((res) => {\r\n            setFetchedIndicatorData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n            setFetchedIndicatorStrategyData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n\r\n      form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleIndicator = (id) => {\r\n    setIndicator((state) => [...state, id])\r\n  }\r\n\r\n  const renderSelect = () => {\r\n    let selects = []\r\n    let industry = []\r\n    if (!fetchedDictionaryData.loading) {\r\n      industry = fetchedDictionaryData.data\r\n        .find((item) =>\r\n          isStrategy ? item.name === 'Стратегия 2050' : item.name === 'Сфера'\r\n        )\r\n        .options.map((option) =>\r\n          option.options.map((ob) => ({ name: ob.name, id: ob.id }))\r\n        )\r\n\r\n      const arr = fetchedDictionaryData.data.filter(\r\n        (item) => item.name !== 'Тип'\r\n      )\r\n\r\n      const ob = arr.filter((item) =>\r\n        !isStrategy ? item.name !== 'Стратегия 2050' : item.name !== 'Сфера'\r\n      )\r\n\r\n      selects = ob.map((item, index) => {\r\n        const name = isStrategy ? 'Стратегия 2050' : 'Сфера'\r\n        const data = item.options.map((option) =>\r\n          item.name === name\r\n            ? {\r\n                id: option.id,\r\n                title: option.name,\r\n                value: option.name,\r\n                children: [],\r\n              }\r\n            : {\r\n                id: option.id,\r\n                title: option.name,\r\n                value: option.name,\r\n                children: option.options.map((ob) => {\r\n                  return {\r\n                    id: ob.id,\r\n                    title: ob.name,\r\n                    value: ob.name,\r\n                    children: [],\r\n                  }\r\n                }),\r\n              }\r\n        )\r\n\r\n        return (\r\n          <Select\r\n            key={index}\r\n            placeholder={item.name === 'Стратегия 2050' ? 'Сфера' : item.name}\r\n            data={data}\r\n            callBack={(id) => handleIndicator(id)}\r\n          />\r\n        )\r\n      })\r\n    }\r\n\r\n    selects.push(\r\n      <Select\r\n        key={45}\r\n        placeholder={'Отрасль'}\r\n        data={[].concat(...industry).map((item) => ({\r\n          id: item.id,\r\n          title: item.name,\r\n          value: item.name,\r\n          children: [],\r\n        }))}\r\n        callBack={(id) => handleIndicator(id)}\r\n      />\r\n    )\r\n\r\n    return selects.map((select) => select)\r\n  }\r\n\r\n  return (\r\n    <div className={'form_indicators'}>\r\n      {!fetchedDictionaryData.loading && (\r\n        <Form form={form}>\r\n          <Form.Item>\r\n            <Form.Item name='input'>\r\n              <Input\r\n                placeholder={'Введите название индикатора'}\r\n                inptRef={inputRef}\r\n                style={{\r\n                  margin: 20,\r\n                  marginLeft: 0,\r\n                  marginTop: 0,\r\n                  minWidth: 250,\r\n                  width: 250,\r\n                }}\r\n              />\r\n            </Form.Item>\r\n            {renderSelect()}\r\n            <Button\r\n              type='primary'\r\n              handleAdd={handleSubmit}\r\n              text3={'Добавить индикатор'}\r\n            />\r\n          </Form.Item>\r\n          {status.alert && (\r\n            <Alert\r\n              message={status.message}\r\n              description={status.description}\r\n              type={status.type}\r\n              closable\r\n              onClose={onCloseAlert}\r\n              style={{ margin: 15 }}\r\n            />\r\n          )}\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\n\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI } from '../../utils/api'\r\n\r\nimport { Controllers } from './Controllers'\r\nimport { Indicator, AdminTabs } from '../common'\r\nimport { Tabs } from 'antd'\r\n\r\nexport const Indicators = () => {\r\n  const { TabPane } = Tabs\r\n\r\n  const { fetchedDictionaryData, setFetchedDictionaryData } = useContext(\r\n    AppContext\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!fetchedDictionaryData.data) {\r\n      getAPI('/sc-analytic-indicators/api/dictionaries').then((res) => {\r\n        setFetchedDictionaryData({\r\n          loading: false,\r\n          data: res.data,\r\n        })\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <AdminTabs position={'top'}>\r\n      <TabPane tab='Панель администратора' key='1'>\r\n        <Controllers />\r\n        <Indicator />\r\n      </TabPane>\r\n      <TabPane tab='Индикатор стратегии' key='2'>\r\n        <Controllers isStrategy={true} />\r\n        <Indicator isStrategy={true} />\r\n      </TabPane>\r\n    </AdminTabs>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Indicators } from './components/Indicators'\r\n\r\nexport const CustomIndicator = () => {\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <Indicators />\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Tabs } from 'antd'\r\nimport { Card, Indicator, AdminTabs } from './components/common'\r\n\r\nexport const CustomIndicatorInfo = () => {\r\n  const { TabPane } = Tabs\r\n\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <AdminTabs position={'top'}>\r\n          <TabPane tab='Панель администратора' key='1'>\r\n            <Card>\r\n              <Indicator isLink={true} />\r\n            </Card>\r\n          </TabPane>\r\n          <TabPane tab='Индикатор стратегии' key='2'>\r\n            <Card>\r\n              <Indicator isStrategy={true} isLink={true} />\r\n            </Card>\r\n          </TabPane>\r\n        </AdminTabs>\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { ProtectedRoute } from './components/ProtectedRoute'\r\n\r\n//components\r\n// import { InfoPanel, Leaders } from './modules/CIP'\r\nimport { SignIn } from './components/SignIn'\r\nimport Users from './modules/Users/Users'\r\nimport Roles from './modules/Roles/Roles'\r\nimport Roadmap from './modules/Roadmap'\r\nimport Heads from './modules/Heads/Heads'\r\nimport { Dictionary, Indicator, IndicatorInfo } from './modules/CMD'\r\n\r\nimport { Home } from './components/Home'\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from='/' to='/Роли' />\r\n      <ProtectedRoute exact path='/Роли' component={Roles} />\r\n      <ProtectedRoute exact path='/Пользователи' component={Users} />\r\n      <ProtectedRoute exact path='/Карта ремонтных работ' component={Roadmap} />\r\n      <ProtectedRoute exact path='/Руководители' component={Heads} />\r\n      <Route\r\n        path='/Справочники'\r\n        component={() => (\r\n          <Home>\r\n            <Dictionary />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Аналитические индикаторы'\r\n        component={() => (\r\n          <Home>\r\n            <Indicator />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Показатели индикаторов'\r\n        component={() => (\r\n          <Home>\r\n            <IndicatorInfo />\r\n          </Home>\r\n        )}\r\n      />\r\n      {/* <Route\r\n        path='/Инфопанели'\r\n        component={() => (\r\n          <Home>\r\n            <InfoPanel />\r\n          </Home>\r\n        )}\r\n      /> */}\r\n      <Route exact path='/авторизация' component={SignIn} />\r\n      <Route exact path='*' render={() => <Redirect to='/Роли' />} />\r\n    </Switch>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Routes } from './Routes'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getRoles, getModules } from './features/roles/rolesSlice'\r\nimport { getOrganisationList } from './features/admin/adminSlice'\r\n\r\n//styles\r\nimport 'antd/dist/antd.css'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const { auth } = useSelector((state) => state.admin)\r\n  const { roles, modules } = useSelector((state) => state.roles)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(getOrganisationList())\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    //TASK:request all available roles and modules for form options\r\n    if (auth.status === 'success') {\r\n      roles.data.length === 0 && dispatch(getRoles(auth.data))\r\n      modules.data.length === 0 && dispatch(getModules())\r\n    }\r\n  }, [auth, roles, modules])\r\n\r\n  return <Routes />\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport adminReducer from './features/admin/adminSlice'\r\nimport roadmapReducer from './features/roadmap/roadmapSlice'\r\nimport rolesReducer from './features/roles/rolesSlice'\r\nimport usersReducer from './features/users/usersSlice'\r\nimport headsReducer from './features/heads/headsSlice'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    roadmap: roadmapReducer,\r\n    admin: adminReducer,\r\n    roles: rolesReducer,\r\n    users: usersReducer,\r\n    heads: headsReducer,\r\n  },\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <React.StrictMode> */}\r\n    <Router basename='/admin'>\r\n      <App />\r\n    </Router>\r\n    {/* </React.StrictMode> */}\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}