{"version":3,"sources":["features/admin/adminSlice.js","components/SideNavMenu.js","components/MainContentWrapper.js","components/Home.js","components/ProtectedRoute.js","components/SignIn.js","common/EditableCell.js","common/Table.js","common/Avatar.js","modules/Users.js","utils/table.js","modules/Roles.js","modules/Roadmap/features/roadmap/roadmapSlice.js","modules/Roadmap/utils/yandex_helper.js","modules/Roadmap/common/YandexMap.js","modules/Roadmap/utils/usePrevious.js","modules/Roadmap/common/Steps.js","modules/Roadmap/common/Tabs.js","modules/Roadmap/utils/worklist_form.js","modules/Roadmap/components/WorkList/form/WorkDescription.js","modules/Roadmap/components/WorkList/form/WorkContractor.js","modules/Roadmap/components/WorkList/form/WorkStatus.js","modules/Roadmap/utils/helper.js","modules/Roadmap/components/WorkList/form/WorkConfirm.js","modules/Roadmap/components/WorkList/form/StepsWrapper.js","modules/Roadmap/components/WorkList/WorkListModal.js","modules/Roadmap/components/WorkList/WorkDetailsModal.js","modules/Roadmap/utils/table_helper.js","modules/Roadmap/components/WorkList/WorkListTable.js","modules/Roadmap/components/WorkList/index.js","modules/Roadmap/components/CrossList/form/AddCrossWorks.js","modules/Roadmap/components/CrossList/CrossListModal.js","modules/Roadmap/components/CrossList/CrossDetailsModal.js","modules/Roadmap/components/CrossList/CrossListTable.js","modules/Roadmap/components/CrossList/index.js","modules/Roadmap/components/RoadMap.js","modules/Roadmap/index.js","modules/CMD/context/main.js","modules/CMD/utils/api.js","modules/CMD/components/common/AdminButton.js","modules/CMD/components/common/AdminCard.js","modules/CMD/components/common/AdminIndicator.js","modules/CMD/utils/helper.js","modules/CMD/components/common/AdminInput.js","modules/CMD/components/common/AdminTabs.js","modules/CMD/components/IndicatorInfo/Controllers.js","modules/CMD/components/IndicatorInfo/IndicatorInfoTable.js","modules/CMD/components/IndicatorInfo/index.js","modules/CMD/components/common/AdminModal.js","modules/CMD/components/common/AdminSearch.js","modules/CMD/components/common/AdminSelect.js","modules/CMD/components/common/EditableCell.js","modules/CMD/components/common/AdminTable.js","modules/CMD/components/Dictionary/DictionaryTable.js","modules/CMD/components/Dictionary/Controllers.js","modules/CMD/components/Dictionary/index.js","modules/CMD/Dictionary.js","modules/CMD/components/Indicators/Controllers.js","modules/CMD/components/Indicators/index.js","modules/CMD/Indicator.js","modules/CMD/IndicatorInfo.js","Routes.js","App.js","index.js"],"names":["getCurrentUser","createAsyncThunk","data","a","axios","get","then","res","catch","err","console","log","getRoles","getModules","getRoleModules","roles","modules","role","url","id","repr","map","i","postRoleModules","ids","ob","arr","forEach","row","includes","value","post","adminSlice","createSlice","name","initialState","status","error","auth","role_modules","reducers","resetRoles","state","resetModules","resetRoleModules","extraReducers","pending","action","fulfilled","payload","failed","actions","SubMenu","Menu","SideNavMenu","width","useState","collapsed","btnheight","setState","useEffect","disabled","menu","useMemo","sidenavmenu","index","key","submenu","icon","MailOutlined","ContainerOutlined","title","className","menuitems","menuitem","Item","FileOutlined","to","style","type","onClick","height","MenuUnfoldOutlined","defaultSelectedKeys","defaultOpenKeys","mode","inlineCollapsed","MainContentWrapper","children","QuestionOutlined","marginRight","margin","Home","window","innerWidth","setWidth","resizeListener","document","documentElement","clientWidth","body","addEventListener","removeEventListener","display","padding","ProtectedRoute","Component","component","rest","useSelector","admin","render","props","Object","keys","length","pathname","from","location","SignIn","dispatch","useDispatch","username","exact","EditableCell","editing","dataIndex","placeholder","inputType","record","restProps","Option","Select","inputNode","allowClear","tagRender","label","closable","onClose","marginBottom","options","min","max","formatter","parser","replace","switchCase","rules","required","message","CustomTable","Form","useForm","form","editingKey","setEditingKey","columns","align","_","isEditing","onSave","SaveOutlined","onConfirm","cancel","CloseOutlined","edit","EditOutlined","onDelete","DeleteOutlined","setFieldsValue","validateFields","newData","findIndex","item","handleEdit","handleDelete","mergedColumns","col","editable","onCell","components","cell","bordered","dataSource","rowClassName","pagination","onChange","loading","getBase64","img","callback","reader","FileReader","result","readAsDataURL","beforeUpload","file","isJpgOrPng","isLt2M","size","Avatar","handleChange","info","originFileObj","imageUrl","uploadButton","this","LoadingOutlined","PlusOutlined","listType","showUploadList","src","alt","React","withRouter","ФИО","Организация","Роль","Логин","Пароль","Фото","setData","UserControllers","handleAdd","organization","pwd","avatar","resetFields","onFinish","onFinishFailed","errorInfo","organizations","htmlType","setRoleColumns","module","color","toUpperCase","setRoleDataSource","RoleControllers","BASE_ROADMAP_URL","fecthOrganizations","fecthRegions","fetchCategories","fetchRoadMap","fetchIntersections","postRoadMap","geometries","coordinates","mapData","JSON","parse","config","postIntersections","initialPost","putRoadMap","reedit","put","delete","deleteRoadMap","dataId","roadmapSlice","organisations","regions","categories","formData","current","crossListMapData","editedId","deletedId","editedIntersectionId","deletedIntersectionId","intersections","formValidate","setCurrent","setMapData","setCrossListMapData","resetMapData","resetCrossListMapData","resetData","resetFormData","resetIntersectionsData","setEditedId","just_id","setDeletedId","rejected","category","find","region","organisation","succes","filter","setIntersection","renderGeoObjects","geo","geometry","fillColor","strokeColor","strokeWidth","editorDrawingCursor","editorMaxPoints","mapState","center","zoom","CustomYandexMap","roadmap","active","setActive","polygons","setPolygons","previousState","ref","useRef","usePrevious","geoObject","draw","instanceRef","createGeoObject","editor","startDrawing","events","add","e","originalEvent","newCoordinates","event","stopDrawing","geoObjects","justifyContent","alignItems","renderButtons","minWidth","minHeight","defaultState","Step","Steps","CustomSteps","steps","validate","content","paddingLeft","CustomTabs","tabs","TabPane","Tabs","tab","child","TextArea","Input","renderTextArea","isOpen","valuePropName","hidden","getValueFromEvent","target","renderDatePicker","picker","text","picker_","format","Group","compact","string","moment","marginLeft","checked","upload_props","headers","authorization","fileList","success","WorkDescription","iscanvas","setCanvas","isclosured","setClosured","pickerStart","setPickerStart","pickerEnd","setPickerEnd","getFieldValue","prop","r","o","hasFeedback","op","renderSelects","noStyle","UploadOutlined","WorkContractor","phone","setPhone","country","WorkStatus","setDisabled","nameEnToRuWorkListHelper","prepareToShowDetailsObToArr","push","undefined","split","validateRoadWorkForm","percentage","is_hidden","is_canceled","commentary","setCoordinates","ii","y","x","k","WorkConfirm","renderForm","new_arr","StepsWrapper","setSteps","WorkListModal","visible","setVisible","postFormData","useCallback","onOk","onCancel","footer","WorkDetailsModal","putFormData","setFilterSelectsHelper","response","date_filters","reverse","WorkListTable","setRecord","setDataSource","filtered","setFiltered","filters","onFilter","indexOf","rule","sorter","b","sortDirections","setWorkListTableColumnsHelper","address","toLowerCase","toString","WorkList","AddCrossWorks","count","setCount","setOptions","flexWrap","renderSelectsGroup","marginTop","shape","CrossListModal","values","area","CrossDetailsModal","array","setArray","substring","list","CrossListTable","cols","setCrossListTableColumnsHelper","intersection","setCrossListDataSourceHelper","CrossList","RoadMap","store","configureStore","reducer","roadmapReducer","AppContext","createContext","AppContextProvider","selectedValue","setSelectedValue","selectedDictionaryName","setSelectedDictionaryName","selectedIndustry","setSelectedIndustry","filteredData","setFilteredData","indicators","setIndicators","searchText","setSearchText","fetchedDictionaryData","setFetchedDictionaryData","fetchedIndicatorInfoData","setFetchedIndicatorInfoData","fetchedIndicatorData","setFetchedIndicatorData","fetchedIndicatorStrategyData","setFetchedIndicatorStrategyData","modalIndicator","setModalIndicator","Provider","dictionary_names","getAPI","postAPI","putAPI","deleteAPI","AdminButton","text2","text1","text3","handleClick","renderBTN","AdminCard","AdminIndicator","isLink","isStrategy","open","setOpen","useContext","names","sort","option_data","option","Отрасль","concat","obj","strcmp","Индикатор","option_name","charAt","slice","dictionaries","Тип","indicator","getObjectKeys","dictionary_name","save","data_post","obb","setFetchedData","AdminInput","defaultValue","inptRef","AdminTabs","defaultActiveKey","tabPosition","position","classname","Controllers","plan","date","alert","setStatus","dateString","year","locale","month","background","callBack","fact","planned","description","setTimeout","lang","today","now","ok","clear","yearFormat","dateFormat","dayFormat","dateTimeFormat","monthFormat","monthBeforeYear","timePickerLocale","weekFormat","IndicatorInfoTable","substr","План","comment","Факт","url2","IndicatorInfo","AdminModal","handleCloseModal","AdminSearch","input","AdminSelect","handleChangeDictionaryName","handleChangeOptionName","selected_value","setTreeData","treeData","AdminTable","some","isFilter","setIndicator","filterTitle","filterConfirm","filterReset","filterEmptyText","selectAll","selectInvert","selectionAll","sortTitle","expand","collapse","triggerDesc","triggerAsc","cancelSort","pageSizeOptions","showSizeChanger","items_per_page","DictionaryTable","tag","All","ant_form","setIsError","inptRef2","Dictionary","CustomDictionary","inputRef","handleIndicator","selects","industry","select","renderSelect","typeId","Indicators","CustomIndicator","CustomIndicatorInfo","Routes","path","Roles","Users","Roadmap","App","adminReducer","ReactDOM","basename","getElementById"],"mappings":"mWAGaA,EAAiBC,YAC5B,uBAD4C,uCAE5C,WAAOC,GAAP,eAAAC,EAAA,4DACc,oCADd,SAEoBC,IACfC,IAFS,qCAGTC,MAAK,SAACC,GAAD,OAASA,EAAIL,QAClBM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MALhC,cAEQF,EAFR,yBAOSA,GAPT,2CAF4C,uDAajCK,EAAWX,YAAiB,iBAAD,uCAAmB,WAAOC,GAAP,eAAAC,EAAA,4DAC7C,4BAD6C,SAEvCC,IACfC,IAFS,6BAGTC,MAAK,SAACC,GAAD,OAASA,EAAIL,QAClBM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAL2B,cAEnDF,EAFmD,yBAOlDA,GAPkD,2CAAnB,uDAU3BM,EAAaZ,YAAiB,mBAAD,uCAAqB,WAAOC,GAAP,eAAAC,EAAA,4DACjD,8BADiD,SAE3CC,IACfC,IAFS,+BAGTC,MAAK,SAACC,GAAD,OAASA,EAAIL,QAClBM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAL+B,cAEvDF,EAFuD,yBAOtDA,GAPsD,2CAArB,uDAU7BO,EAAiBb,YAC5B,uBAD4C,uCAE5C,WAAOc,GAAP,qBAAAZ,EAAA,sDACMa,EAAU,GADhB,cAEqBD,GAFrB,aAAAZ,EAAA,sCAAAA,EAAA,6DAEac,EAFb,QAGUC,EAHV,oCAG6CD,EAAKE,GAHlD,yBAIqBf,IACdC,IAAIa,GACJZ,MAAK,SAACC,GACL,MAAO,CACLa,KAAMH,EAAKG,KACX,oBAAqBb,EAAIL,KAAKmB,KAAI,SAACC,GAAD,OAAOA,EAAE,sBAG9Cd,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAZlC,OAIQP,EAJR,OAcIc,EAAO,sBAAOA,GAAP,CAAgBd,IAd3B,kSAiBSc,GAjBT,gEAF4C,uDAuBjCO,EAAkBtB,YAC7B,wBAD6C,uCAE7C,WAAOC,GAAP,mBAAAC,EAAA,6DACMqB,EAAM,GACNC,EAAK,GACLT,EAAU,GAEdd,EAAKwB,IAAIC,SAAQ,SAACL,GACZpB,EAAK0B,IAAI,qBAAqBC,SAASP,EAAEQ,SAC3CN,EAAG,sBAAOA,GAAP,CAAYF,EAAEH,KACjBH,EAAO,sBAAOA,GAAP,CAAgBM,EAAEQ,YAI7BL,EAAE,eAAQvB,EAAK0B,IAAb,CAAkB,oBAAqBJ,IAZ3C,SAcQpB,IAAM2B,KAAK,4BAA6BN,GAAInB,MAAK,SAACC,GAAD,OAASA,EAAIL,QAdtE,cAgBEQ,QAAQC,IAAIc,EAAZ,eAAqBvB,EAAK0B,IAA1B,CAA+B,oBAAqBZ,KAhBtD,iCAkBcd,EAAK0B,IAlBnB,CAkBwB,oBAAqBZ,KAlB7C,2CAF6C,uDAwBzCgB,EAAaC,YAAY,CAC7BC,KAAM,QACNC,aAAc,CACZjC,KAAM,GACNkC,OAAQ,OACRC,MAAO,KACPC,KAAM,CACJpC,KAAM,GACNkC,OAAQ,OACRC,MAAO,IAETtB,MAAO,CACLb,KAAM,GACNkC,OAAQ,OACRC,MAAO,IAETrB,QAAS,CACPd,KAAM,GACNkC,OAAQ,OACRC,MAAO,IAETE,aAAc,CACZrC,KAAM,GACNkC,OAAQ,OACRC,MAAO,KAGXG,SAAU,CACRC,WAAY,SAACC,GACXA,EAAM3B,MAAMqB,OAAS,OACrBM,EAAM3B,MAAMb,KAAO,IAErByC,aAAc,SAACD,GACbA,EAAM1B,QAAQoB,OAAS,OACvBM,EAAM1B,QAAQd,KAAO,IAEvB0C,iBAAkB,SAACF,GACjBA,EAAMH,aAAaH,OAAS,OAC5BM,EAAMH,aAAarC,KAAO,KAG9B2C,eAAa,mBAEVjC,EAASkC,SAAU,SAACJ,EAAOK,GAC1BL,EAAM3B,MAAMqB,OAAS,aAHZ,cAKVxB,EAASoC,WAAY,SAACN,EAAOK,GAC5BL,EAAM3B,MAAMqB,OAAS,UACrBM,EAAM3B,MAAMb,KAAO6C,EAAOE,WAPjB,cASVrC,EAASsC,QAAS,SAACR,EAAOK,GACzBL,EAAM3B,MAAMqB,OAAS,SACrBM,EAAM3B,MAAMsB,MAAQU,EAAOE,WAXlB,cAeVjD,EAAe8C,SAAU,SAACJ,EAAOK,GAChCL,EAAMJ,KAAKF,OAAS,aAhBX,cAkBVpC,EAAegD,WAAY,SAACN,EAAOK,GAClCL,EAAMJ,KAAKF,OAAS,UACpBM,EAAMJ,KAAKpC,KAAO6C,EAAOE,WApBhB,cAsBVjD,EAAekD,QAAS,SAACR,EAAOK,GAC/BL,EAAM1B,QAAQoB,OAAS,SACvBM,EAAM1B,QAAQqB,MAAQU,EAAOE,WAxBpB,cA4BVpC,EAAWiC,SAAU,SAACJ,EAAOK,GAC5BL,EAAM1B,QAAQoB,OAAS,aA7Bd,cA+BVvB,EAAWmC,WAAY,SAACN,EAAOK,GAC9BL,EAAM1B,QAAQoB,OAAS,UACvBM,EAAM1B,QAAQd,KAAO6C,EAAOE,WAjCnB,cAmCVpC,EAAWqC,QAAS,SAACR,EAAOK,GAC3BL,EAAM1B,QAAQoB,OAAS,SACvBM,EAAM1B,QAAQqB,MAAQU,EAAOE,WArCpB,cAyCVnC,EAAegC,SAAU,SAACJ,EAAOK,GAChCL,EAAMH,aAAaH,OAAS,aA1CnB,cA4CVtB,EAAekC,WAAY,SAACN,EAAOK,GAClCL,EAAMH,aAAaH,OAAS,UAC5BM,EAAMH,aAAarC,KAAO6C,EAAOE,WA9CxB,cAgDVnC,EAAeoC,QAAS,SAACR,EAAOK,GAC/BL,EAAMH,aAAaH,OAAS,SAC5BM,EAAMH,aAAaF,MAAQU,EAAOE,WAlDzB,cAsDV1B,EAAgBuB,SAAU,SAACJ,EAAOK,GACjCL,EAAMH,aAAaH,OAAS,aAvDnB,cAyDVb,EAAgByB,WAAY,SAACN,EAAOK,GACnCrC,QAAQC,IAAIoC,EAAOE,SACnBP,EAAMH,aAAaH,OAAS,UAC5BM,EAAMH,aAAarC,KAAnB,CAA2B6C,EAAOE,SAAlC,mBAA8CP,EAAMH,aAAarC,UA5DxD,cA8DVqB,EAAgB2B,QAAS,SAACR,EAAOK,GAChCL,EAAMH,aAAaH,OAAS,SAC5BM,EAAMH,aAAaF,MAAQU,EAAOE,WAhEzB,K,EAqE+CjB,EAAWmB,QAA1DV,E,EAAAA,WAAYE,E,EAAAA,aAAcC,E,EAAAA,iBAE1BZ,IAAf,Q,qFCrLQoB,EAAYC,IAAZD,QAEKE,EAAc,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAAY,EACdC,mBAAS,CACjCC,WAAW,EACXC,UAAW,KAH2B,mBACjChB,EADiC,KAC1BiB,EAD0B,KAUxCC,qBAAU,WACRL,EAAQ,KACNI,GAAS,SAACjB,GAAD,sBACJA,EADI,CAEPmB,UAAU,EACVJ,WAAW,SAEd,CAACF,IAEJ,IAAMO,EAAOC,mBAAQ,WACnB,OAAOC,EAAY3C,KAAI,SAACI,EAAIwC,GAAL,OACrB,kBAACb,EAAD,CACEc,IAAKzC,EAAG0C,QACRC,KAAMH,EAAQ,IAAM,EAAI,kBAACI,EAAA,EAAD,MAAmB,kBAACC,EAAA,EAAD,MAC3CC,MAAO9C,EAAG0C,QACVK,UAAU,8BAET/C,EAAGgD,UAAUpD,KAAI,SAACqD,GAAD,OAChB,kBAAC,IAAKC,KAAN,CACET,IAAKQ,EACLN,KAAM,kBAACQ,EAAA,EAAD,MACNJ,UAAU,+BAEV,kBAAC,IAAD,CAAMK,GAAE,UAAKH,IAAaA,aAKjC,IAEH,OACE,yBACEI,MAAO,CAAEvB,MAAOA,EAAQ,IAAM,OAASb,EAAMe,UAAY,GAAK,KAC9De,UAAU,qBAEV,kBAAC,IAAD,CACEO,KAAK,UACLC,QAzCkB,WACtBrB,GAAS,SAACjB,GAAD,sBAAiBA,EAAjB,CAAwBe,WAAYf,EAAMe,gBAyC/CqB,MAAO,CACLG,OAAQvC,EAAMgB,UACdH,MAAO,QAETiB,UAAU,4BAETjB,EAAQ,KAAOb,EAAMe,UACpB,kBAACyB,EAAA,EAAD,MAEA,6HAGJ,kBAAC,IAAD,CACEC,oBAAqB,CAAC,KACtBC,gBAAiB,CAAC,QAClBC,KAAK,SACLC,kBAAiB/B,EAAQ,MAAcb,EAAMe,UAC7CqB,MAAO,CAAEG,OAAQ,SAEhBnB,KAMHE,EAAc,CAClB,CACEG,QAAS,+IACTM,UAAW,CACT,qEACA,8IACA,kIACA,yHAmBJ,CACEN,QAAS,oJACTM,UAAW,CAAC,2BAAQ,8E,SChHXc,EAAqB,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACnC,OACE,yBACEV,MAAO,CAAEvB,MAAO,OAAQ0B,OAAQ,QAChCT,UAAU,qBAEV,yBAAKA,UAAU,uDACb,yBAAKA,UAAU,2BAGf,yBAAKA,UAAU,4BACb,kBAACiB,EAAA,EAAD,CAAkBX,MAAO,CAAEY,YAAa,UACxC,0BACEZ,MAAO,CAAEa,OAAQ,UACjBnB,UAAU,gCAFZ,yFAMA,kBAAC,IAAD,CAAQA,UAAU,gCAAlB,oCAGJ,yBAAKA,UAAU,+CACZgB,KCtBII,EAAO,SAAC,GAAkB,IAAhBJ,EAAe,EAAfA,SAAe,EACZhC,mBAASqC,OAAOC,YADJ,mBAC/BvC,EAD+B,KACxBwC,EADwB,KAuBpC,OAfAnC,qBAAU,WACR,IAAMoC,EAAiB,WAErBD,EAPFF,OAAOC,YACPG,SAASC,gBAAgBC,aACzBF,SAASG,KAAKD,cAWd,OAHAN,OAAOQ,iBAAiB,SAAUL,GAG3B,WAELH,OAAOS,oBAAoB,SAAUN,MAEtC,IAGD,yBACExB,UAAU,uBACVM,MAAO,CAAEyB,QAAShD,EAAQ,IAAM,QAAU,SAE1C,kBAAC,EAAD,CAAaA,MAAOA,IACpB,kBAAC,EAAD,KACE,yBACEuB,MAAO,CAAEvB,MAAO,OAAQoC,OAAQ,YAAaa,QAAS,GACtDhC,UAAU,4BAETgB,MCjCEiB,EAAiB,SAAC,GAAuC,IAA1BC,EAAyB,EAApCC,UAAyBC,EAAW,6BAC3DtE,EAASuE,aAAY,SAACnE,GAAD,OAAWA,EAAMoE,SAAtCxE,KAER,OACE,kBAAC,IAAD,iBACMsE,EADN,CAEEG,OAAQ,SAACC,GACP,OAAIC,OAAOC,KAAK5E,EAAKpC,MAAMiH,OAAS,EAEhC,kBAAC,EAAD,KACE,kBAACT,EAAD,OAKF,kBAAC,IAAD,CACE7B,GAAI,CAAEuC,SAAU,sEAAgB1E,MAAO,CAAE2E,KAAML,EAAMM,kBChBtDC,EAAS,SAACP,GAErB,IAAMQ,EAAWC,cACTnF,EAASuE,aAAY,SAACnE,GAAD,OAAWA,EAAMoE,SAAtCxE,KAMR,OAJAsB,qBAAU,WACR4D,EAASxH,OACR,CAACwH,IAEAlF,EAAKpC,MAAQoC,EAAKpC,KAAKwH,SAEvB,kBAAC,IAAD,CACEX,OAAQ,kBACN,kBAAC,IAAD,CACEY,OAAK,EAEL9C,GAAI,wHACJwC,KAAK,2EAOR,I,kHC3BIO,GAAe,SAAC,GAWtB,IAVLC,EAUI,EAVJA,QACAC,EASI,EATJA,UACAC,EAQI,EARJA,YACAxD,EAOI,EAPJA,MACArE,EAMI,EANJA,KACA8H,EAKI,EALJA,UAGAxC,GAEI,EAJJyC,OAII,EAHJhE,MAGI,EAFJuB,UACG0C,EACC,4GACIC,EAAWC,IAAXD,OA0DFE,EAxDa,SAACtD,GAClB,OAAQA,GACN,IAAK,SACH,OACE,kBAAC,IAAD,CAAQgD,YAAaA,EAAaO,YAAU,GACzCpI,EAAKmB,KAAI,SAACJ,GAAD,OACR,kBAACkH,EAAD,CAAQjE,IAAG,UAAKjD,EAAL,aAAc8G,GAAejG,MAAOb,GAC5CA,OAMX,IAAK,eAcH,OACE,kBAAC,IAAD,CACE8G,YAAY,uCACZ1C,KAAK,WACLkD,UAjBJ,SAAmBvB,GAAQ,IACjBwB,EAA6BxB,EAA7BwB,MAAOC,EAAsBzB,EAAtByB,SAAUC,EAAY1B,EAAZ0B,QAEzB,OACE,kBAAC,KAAD,CACED,SAAUA,EACVC,QAASA,EACT5D,MAAO,CAAEY,YAAa,IAErB8C,IASH1D,MAAO,CAAEvB,MAAO,OAAQoF,aAAc,IACtCC,QAAS1I,IAGf,IAAK,SACH,OACE,kBAAC,KAAD,CACE2I,IAAK,EACLC,IAAK,IACLC,UAAW,SAACjH,GAAD,gBAAcA,EAAd,MACXkH,OAAQ,SAAClH,GAAD,OAAWA,EAAMmH,QAAQ,IAAK,OAG5C,QACE,OACE,kBAAC,IAAD,CACEzE,UAAU,mBACVuD,YAAaA,EACbO,YAAU,KAMFY,CAAWlB,GAE7B,OACE,uBAAQE,EACLL,EACC,kBAAC,IAAKlD,KAAN,CACEzC,KAAM4F,EACNhD,MAAO,CACLa,OAAQ,GAEVwD,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,8CAAD,OAAa9E,EAAb,QAIV8D,GAGH7C,IClFK8D,GAAc,SAACtC,GAAW,IAAD,EACrBuC,IAAKC,UAAbC,EAD6B,sBAEAjG,mBAAS,IAFT,mBAE7BkG,EAF6B,KAEjBC,EAFiB,KAI9BjI,EAAG,sBACJsF,EAAM4C,SADF,CAEP,CACErF,MAAO,mDACPuD,UAAW,GACXvE,MAAO,KACPsG,MAAO,SACP3F,IAAK,IACL6C,OAAQ,SAAC+C,EAAG7B,GAEV,OADiB8B,EAAU9B,GAEzB,8BACE,uBACEjD,QAAS,kBAAMgF,EAAO/B,EAAO/D,MAC7BY,MAAO,CACLY,YAAa,IAGf,kBAACuE,GAAA,EAAD,CAAczF,UAAU,sBAAsBD,MAAM,4DAEtD,kBAAC,IAAD,CACEA,MAAM,qNACN2F,UAAWC,GAEX,kBAACC,GAAA,EAAD,CAAe5F,UAAU,sBAAsBD,MAAM,uDAIzD,kBAAC,IAAD,KACE,uBACEV,SAAyB,KAAf6F,EACV1E,QAAS,kBAAMqF,EAAKpC,EAAQwB,EAAME,KAElC,kBAACW,GAAA,EAAD,CACE9F,UAAU,sBACVD,MAAM,oFAGV,kBAAC,IAAD,CACEA,MAAM,mMACN2F,UAAW,kBAAMK,EAAStC,KAE1B,kBAACuC,GAAA,EAAD,CAAgBhG,UAAU,sBAAsBD,MAAM,qDAQ5DwF,EAAY,SAAC9B,GAAD,OAAYA,EAAO/D,MAAQwF,GAEvCW,EAAO,SAACpC,GACZwB,EAAKgB,eAAL,eACKxC,IAEL0B,EAAc1B,EAAO/D,MAGjBiG,EAAS,WACbR,EAAc,KAGVK,EAAM,uCAAG,WAAO9F,GAAP,qBAAA/D,EAAA,+EAEOsJ,EAAKiB,iBAFZ,OAEL9I,EAFK,OAGL+I,EAHK,YAGS3D,EAAM9G,MACpB+D,EAAQ0G,EAAQC,WAAU,SAACC,GAAD,OAAU3G,IAAQ2G,EAAK3G,OACjD2G,EAAOF,EAAQ1G,GACrB+C,EAAM8D,WAAN,eAAsBD,EAAtB,GAA+BjJ,IAC/B+H,EAAc,IAPH,kDAsBXjJ,QAAQC,IAAI,mBAAZ,MAtBW,0DAAH,sDA0BN4J,EAAQ,uCAAG,WAAOtC,GAAP,SAAA9H,EAAA,sDAQf6G,EAAM+D,aAAa9C,GARJ,2CAAH,sDAWR+C,EAAgBtJ,EAAIL,KAAI,SAAC4J,GAC7B,OAAKA,EAAIC,SAIF,eACFD,EADL,CAEEE,OAAQ,SAAClD,GAAD,MAAa,CACnBA,SACAD,UAAWiD,EAAIlG,KACf+C,UAAWmD,EAAInD,UACfvD,MAAO0G,EAAI1G,MACXrE,KAAM+K,EAAI/K,KACV6H,YAAakD,EAAIlD,YACjBF,QAASkC,EAAU9B,OAZdgD,KAiBX,OACE,kBAAC,IAAD,CAAMxB,KAAMA,EAAM9C,WAAW,GAC3B,kBAAC,IAAD,CACEyE,WAAY,CACVhF,KAAM,CACJiF,KAAMzD,KAGV0D,UAAQ,EACRC,WAAYvE,EAAM9G,KAClB0J,QAASoB,EACTQ,aAAa,eACbC,WAAY,CACVC,SAAUvB,GAEZwB,QAAS3E,EAAM2E,Y,gFCjJvB,SAASC,GAAUC,EAAKC,GACtB,IAAMC,EAAS,IAAIC,WACnBD,EAAO1F,iBAAiB,QAAQ,kBAAMyF,EAASC,EAAOE,WACtDF,EAAOG,cAAcL,GAGvB,SAASM,GAAaC,GACpB,IAAMC,EAA2B,eAAdD,EAAKrH,MAAuC,cAAdqH,EAAKrH,KACjDsH,GACHhD,KAAQhH,MAAM,2MAEhB,IAAMiK,EAASF,EAAKG,KAAO,KAAO,KAAO,EAIzC,OAHKD,GACHjD,KAAQhH,MAAM,4JAETgK,GAAcC,E,OAiDRE,G,+MA7Cb9J,MAAQ,CACNiJ,SAAS,G,EAGXc,aAAe,SAACC,GACW,cAArBA,EAAKN,KAAKhK,OAIW,SAArBsK,EAAKN,KAAKhK,QAEZwJ,GAAUc,EAAKN,KAAKO,eAAe,SAACC,GAAD,OACjC,EAAKjJ,SAAS,CACZiJ,WACAjB,SAAS,OARb,EAAKhI,SAAS,CAAEgI,SAAS,K,wDAe3B,IAAMkB,EACJ,6BAAMC,KAAKpK,MAAMiJ,QAAU,kBAACoB,GAAA,EAAD,MAAsB,kBAACC,GAAA,EAAD,OAE3CJ,EAAaE,KAAKpK,MAAlBkK,SACR,OACE,kBAAC,KAAD,CACE1K,KAAK,SACL+K,SAAS,eACTzI,UAAU,kBACVzB,OAAQ6J,EACRM,gBAAgB,EAChBf,aAAcA,GACdT,SAAUoB,KAAKL,cAEdG,EACC,yBAAKO,IAAKP,EAAUQ,IAAI,SAAStI,MAAO,CAAEvB,MAAO,UAEjDsJ,O,GAvCWQ,IAAM3G,WCeZ4G,gBA/BD,WAAO,IAAD,EACM9J,mBAAS,CAC/B,CACEU,IAAK,IACL,SAAK,EACLqJ,qBAAK,YACLC,qEAAa,iBACbC,2BAAM,+DACNC,iCAAO,WACPC,uCAAQ,aACRC,2BAAM,6BAER,CACE1J,IAAK,IACL,SAAK,EACLqJ,qBAAK,YACLC,qEAAa,WACbC,2BAAM,iFACNC,iCAAO,cACPC,uCAAQ,iBACRC,2BAAM,+BApBQ,mBACX1N,EADW,KACL2N,EADK,KAuBlB,OACE,oCACE,kBAAC,GAAD,CAAiBA,QAASA,EAAS3N,KAAMA,IACzC,kBAAC,GAAD,CAAO0J,QAASA,GAAS1J,KAAMA,EAAM2N,QAASA,QAO9CC,GAAkB,SAAC,GAAsB,EAApB5N,KAAqB,IAAf2N,EAAc,EAAdA,QACvB1F,EAAWC,IAAXD,OADqC,EAG9BoB,IAAKC,UAAbC,EAHsC,oBAKvCsE,EAAS,uCAAG,4BAAA5N,EAAA,+EAGIsJ,EAAKiB,iBAHT,OAGR9I,EAHQ,OAIdiM,GAAQ,SAAC3N,GAAD,4BACHA,GADG,CAEN,CACEgE,IAAI,GAAD,OAAKtC,EAAIX,KAAT,YAAiBf,EAAKiH,OAAS,GAClC,SAAKjH,EAAKiH,OAAS,EACnBoG,qBAAK3L,EAAIM,KACTsL,qEAAa5L,EAAIoM,aACjBP,2BAAM7L,EAAIX,KACVyM,iCAAO9L,EAAI8F,SACXiG,uCAAQ/L,EAAIqM,IACZL,2BAAMhM,EAAIsM,aAGdzE,EAAK0E,cAjBS,gDAmBdzN,QAAQC,IAAR,MAnBc,yDAAH,qDA2Bf,OACE,6BACE,kBAAC,IAAD,CACE8I,KAAMA,EACNjF,UAAU,qCACV4J,SAAUL,EACVM,eAViB,SAACC,GACtB5N,QAAQC,IAAI,UAAW2N,KAWnB,kBAAC,IAAK3J,KAAN,CACEH,UAAU,oBACVtC,KAAK,OACLiH,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,6IAIZ,kBAAC,IAAD,CAAOtB,YAAY,wBAErB,kBAAC,IAAKpD,KAAN,CACEzC,KAAK,eACLiH,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,2KAIZ,kBAAC,IAAD,CAAQtB,YAAY,qEAAcO,YAAU,GACzCiG,GAAclN,KAAI,SAAC2M,GAAD,OACjB,kBAAC7F,EAAD,CAAQjE,IAAK8J,EAAclM,MAAOkM,GAC/BA,QAKT,kBAAC,IAAKrJ,KAAN,CACEzC,KAAK,OACLiH,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,yJAIZ,kBAAC,IAAD,CAAQtB,YAAY,2BAAOO,YAAU,GAClCvH,GAAMM,KAAI,SAACJ,GAAD,OACT,kBAACkH,EAAD,CAAQjE,IAAKjD,EAAMa,MAAOb,GACvBA,QAKT,kBAAC,IAAK0D,KAAN,CAAWzC,KAAK,YACd,kBAAC,IAAD,CAAO6F,YAAY,iCAAQhD,KAAM,WAEnC,kBAAC,IAAKJ,KAAN,CACEzC,KAAK,MACLiH,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,+JAIZ,kBAAC,IAAD,CACEtB,YAAY,uCACZhD,KAAM,WACNP,UAAU,yBAGd,kBAAC,IAAKG,KAAN,CACEzC,KAAK,UAQL,kBAAC,GAAD,OAEF,kBAAC,IAAKyC,KAAN,KACE,kBAAC,IAAD,CACEI,KAAK,UACLyJ,SAAS,SACThK,UAAU,sBAHZ,wDAeJzD,GAAQ,CACZ,+DACA,iFACA,sHACA,yKAGIwN,GAAgB,CAAC,uEAAiB,uEAAiB,wEAEnD3E,GAAU,CACd,CACErF,MAAO,SACPuD,UAAW,UAEb,CACEvD,MAAO,qBACPuD,UAAW,qBAEXoD,UAAU,GAEZ,CACE3G,MAAO,qEACPuD,UAAW,qEAEX/C,KAAM,SACNgD,YAAa,qEACb7H,KAAMqO,GACNrD,UAAU,GAEZ,CACE3G,MAAO,2BACPuD,UAAW,2BAEX/C,KAAM,SACNgD,YAAa,2BACb7H,KAAMa,GACNmK,UAAU,GAEZ,CACE3G,MAAO,iCACPuD,UAAW,kCAEb,CACEvD,MAAO,uCACPuD,UAAW,uCACXoD,UAAU,GAEZ,CACE3G,MAAO,2BACPuD,UAAW,2BACXoD,UAAU,ICzNDuD,GAAiB,SAAC7F,GAC7B,MAAO,CACL,CACErE,MAAO,2BACPuD,UAAW,OACXvE,MAAO,MACP2H,UAAU,EACVnD,YAAa,4BAEf,CACExD,MAAO,uCACPuD,UAAW,oBACX/C,KAAM,eACNmG,UAAU,EACVhL,KAAM0I,EACN7B,OAAQ,SAAC/F,GAAD,OACN,8BACGA,EAAQK,KAAI,SAACqN,GACZ,IAAIC,EAAQD,EAAOvH,OAAS,EAAI,WAAa,OAC7C,OACE,kBAAC,KAAD,CAAKwH,MAAOA,EAAOzK,IAAKwK,EAAQ5J,MAAO,CAAEa,OAAQ,YAC9C+I,EAAOE,uBCsCTtB,gBA7CD,WACZ,IAAM9F,EAAWC,cADC,EAEuBZ,aAAY,SAACnE,GAAD,OAAWA,EAAMoE,SAA9D9F,EAFU,EAEVA,QAASD,EAFC,EAEDA,MAAOwB,EAFN,EAEMA,aAFN,EAGMiB,mBAAS,IAHf,mBAGXtD,EAHW,KAGL2N,EAHK,KAKlBjK,qBAAU,WAIR,OAHA4D,EAAS5G,KACT4G,EAAS3G,KAEF,WACL2G,EAAS/E,KACT+E,EAAS7E,QAEV,CAAC6E,IAEJ5D,qBAAU,WAGR,MAFiB,YAAjB7C,EAAMqB,QAAwBoF,EAAS1G,EAAeC,EAAMb,OAErD,kBAAMsH,EAAS5E,QACrB,CAAC7B,EAAOyG,IAEX5D,qBAAU,WACgB,YAAxBrB,EAAaH,QACXyL,EDN2B,SAAC3N,GAChC,OAAOA,EAAKmB,KAAI,SAACC,EAAG2C,GAClB,MAAO,CACLC,IAAKD,EACL7C,KAAME,EAAEF,KACR,oBAAqBE,EAAE,yBCCfuN,CAAkBtM,EAAarC,SACxC,CAACqC,IAEJ,IAAIqG,EAAU7E,mBAAQ,WACpB,OAAO/C,EAAQd,KAAKmB,KAAI,SAACC,GAAD,MAAQ,CAAEQ,MAAOR,EAAEY,KAAMf,GAAIG,EAAEH,SACtD,CAACH,IAEJ,OACE,oCACG,kBAAC,GAAD,CAAiB4H,QAASA,EAASpB,SAAUA,IAE5C,kBAAC,GAAD,CACEoC,QAAS6E,GAAe7F,GACxB1I,KAAMA,EACN2N,QAASA,EACTlC,QAAiC,YAAxBpJ,EAAaH,aAS1B0M,GAAkB,SAAC,GAA2B,IAAzBlG,EAAwB,EAAxBA,QAASpB,EAAe,EAAfA,SAAe,EAClC+B,IAAKC,UAAbC,EAD0C,oBAG3CsE,EAAS,uCAAG,4BAAA5N,EAAA,+EAaEsJ,EAAKiB,iBAbP,OAaV9I,EAbU,OAmBd4F,EAASjG,EAAgB,CAAEK,MAAKF,IAAKkH,KAErCa,EAAK0E,cArBS,gDAuBdzN,QAAQC,IAAR,MAvBc,yDAAH,qDA+Bf,OACE,kBAAC,IAAD,CACE8I,KAAMA,EACNjF,UAAU,gBACV4J,SAAUL,EACVM,eATmB,SAACC,GACtB5N,QAAQC,IAAI,UAAW2N,KAUrB,kBAAC,IAAK3J,KAAN,CACEzC,KAAK,OACLiH,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,mJAIZ,kBAAC,IAAD,CAAOtB,YAAY,2BAAOO,YAAU,EAACxD,MAAO,CAAEvB,MAAO,UAEvD,kBAAC,IAAKoB,KAAN,CACEzC,KAAK,oBACLiH,MAAO,CACL,CACEC,UAAU,EACVC,QAAQ,gNAIZ,kBAAC,IAAD,CACEtB,YAAY,uCACZ1C,KAAK,WACLkD,UAAWA,GACXzD,MAAO,CAAEvB,MAAO,OAChBqF,QAASA,KAGb,kBAAC,IAAKjE,KAAN,KACE,kBAAC,IAAD,CAAQI,KAAK,UAAUyJ,SAAS,SAAShK,UAAU,sBAAnD,uDAQR,SAAS+D,GAAUvB,GAAQ,IACjBwB,EAA6BxB,EAA7BwB,MAAOC,EAAsBzB,EAAtByB,SAAUC,EAAY1B,EAAZ0B,QAEzB,OACE,kBAAC,KAAD,CAAKD,SAAUA,EAAUC,QAASA,EAAS5D,MAAO,CAAEY,YAAa,IAC9D8C,GChJP,IAGMuG,GAAmB,8BAGZC,GAAqB/O,YAChC,6BADgD,sBAEhD,4BAAAE,EAAA,sEACoBC,IAAMC,IATG,mCAQ7B,cACQE,EADR,yBAESA,EAAIL,MAFb,4CAMW+O,GAAehP,YAC1B,uBAD0C,sBAE1C,4BAAAE,EAAA,sEACoBC,IAAMC,IAhBH,6BAevB,cACQE,EADR,yBAESA,EAAIL,MAFb,4CAMWgP,GAAkBjP,YAC7B,0BAD6C,sBAE7C,4BAAAE,EAAA,sEACoBC,IAAMC,IAvBA,gCAsB1B,cACQE,EADR,yBAESA,EAAIL,MAFb,4CAMWiP,GAAelP,YAC1B,uBAD0C,sBAE1C,4BAAAE,EAAA,sEACoBC,IAAMC,IAAI0O,IAD9B,cACQxO,EADR,yBAESA,EAAIL,MAFb,4CAMWkP,GAAqBnP,YAChC,6BADgD,sBAEhD,4BAAAE,EAAA,sEACoBC,IAAMC,IArCG,mCAoC7B,cACQE,EADR,yBAESA,EAAIL,MAFb,4CAMWmP,GAAcpP,YACzB,sBADyC,uCAEzC,WAAOwB,GAAP,iBAAAtB,EAAA,sEACoBC,IAAM2B,KAAKgN,GAAkBtN,EAAGvB,MADpD,cACQK,EADR,gBAGQH,IAAM2B,KAAN,sCAA0CxB,EAAIL,KAA9C,eAAiE,CACrEoP,WAAY7N,EAAG6N,aAJnB,cAOQC,EAAc9N,EAAG+N,QAAQnO,KAAI,SAACC,GAClC,MAAe,aAAXA,EAAEyD,KACGzD,EAAEiO,YAEFjO,EAAEiO,YAAY,MAX3B,kBAeS,CACLrP,KAAMuP,KAAKC,MAAMnP,EAAIoP,OAAOzP,MAC5BiB,GAAIZ,EAAIL,KACRoP,WAAY,CACVvK,KAAM,UACNwK,iBApBN,2CAFyC,uDA4B9BK,GAAoB3P,YAC/B,4BAD+C,uCAE/C,WAAO4P,GAAP,eAAA1P,EAAA,sEACoBC,IAAM2B,KACtB,yCACA8N,GAHJ,cACQtP,EADR,OAKEG,QAAQC,IAAIJ,GALd,kBAMSkP,KAAKC,MAAMnP,EAAIoP,OAAOzP,OAN/B,2CAF+C,uDAYpC4P,GAAa7P,YACxB,qBADwC,uCAExC,WAAO8B,GAAP,eAAA5B,EAAA,0DACM4B,EAAKgO,OADX,iCAEU3P,IAAM4P,IAAN,UAAajB,GAAb,YAAiChN,EAAKZ,IAAtC,eACDY,EAAK7B,KAAKA,KADT,CAEJ,cAAe6B,EAAK7B,KAAKA,KAAKkC,UAJpC,uBAQUhC,IAAM6P,OAAN,sCAA4ClO,EAAKZ,GAAjD,gBARV,uBASUf,IAAM2B,KAAN,sCAA0CA,EAAKZ,GAA/C,eAAgE,CACpEmO,WAAYvN,EAAK7B,KAAKoP,aAV5B,cAaUC,EAAcxN,EAAKyN,QAAQnO,KAAI,SAACC,GACpC,MAAe,aAAXA,EAAEyD,KACGzD,EAAEiO,YAEFjO,EAAEiO,YAAY,MAjB7B,kBAqBW,CACLQ,OAAQhO,EAAKgO,OACb7P,KAAM6B,EAAK7B,KAAKA,KAChBiB,GAAIY,EAAKZ,GACTmO,WAAY,CACVvK,KAAM,UACNwK,iBA3BR,yBA+BUnP,IAAM4P,IAAN,UAAajB,GAAb,YAAiChN,EAAKZ,IAAM,CAChD,cAAeY,EAAK7B,OAhC1B,iCAmCW6B,GAnCX,4CAFwC,uDA0C7BmO,GAAgBjQ,YAC3B,wBAD2C,uCAE3C,WAAOkQ,GAAP,SAAAhQ,EAAA,sEACQC,IAAM6P,OAAN,UAAgBlB,GAAhB,YAAoCoB,IAD5C,gCAES,CAAEhP,GAAIgP,IAFf,2CAF2C,uDAQhCC,GAAenO,YAAY,CACtCC,KAAM,UACNC,aAAc,CACZkO,cAAe,CACbjO,OAAQ,OACRlC,KAAM,GACNmC,MAAO,MAETiO,QAAS,CACPlO,OAAQ,OACRlC,KAAM,GACNmC,MAAO,MAETkO,WAAY,CACVnO,OAAQ,OACRlC,KAAM,GACNmC,MAAO,MAETnC,KAAM,GACNkC,OAAQ,OACRC,MAAO,KACPmO,SAAU,GACVC,QAAS,EACTjB,QAAS,GACTkB,iBAAkB,GAClBC,SAAU,KACVC,UAAW,KACXC,qBAAsB,KACtBC,sBAAuB,KACvBC,cAAe,CACb3O,OAAQ,OACRC,MAAO,KACPnC,KAAM,KAGVsC,SAAU,CACRwO,aAAc,SAACtO,EAAOK,GACpBL,EAAM8N,SAAN,eAAsB9N,EAAM8N,SAA5B,GAAyCzN,EAAOE,UAElDgO,WAAY,SAACvO,EAAOK,GAClBL,EAAM+N,QAAU1N,EAAOE,SAEzBiO,WAAY,SAACxO,EAAOK,GAClBL,EAAM8M,QAAN,sBAAoB9M,EAAM8M,SAA1B,YAAsCzM,EAAOE,WAE/CkO,oBAAqB,SAACzO,EAAOK,GAC3BL,EAAMgO,iBAAN,sBAA6BhO,EAAMgO,kBAAnC,YAAwD3N,EAAOE,WAEjEmO,aAAc,SAAC1O,GACbA,EAAM8M,QAAU,IAElB6B,sBAAuB,SAAC3O,GACtBA,EAAMgO,iBAAmB,IAE3BY,UAAW,SAAC5O,GACVA,EAAMxC,KAAO,GACbwC,EAAMN,OAAS,QAEjBmP,cAAe,SAAC7O,GACdA,EAAM8N,SAAW,IAEnBgB,uBAAwB,SAAC9O,GACvBA,EAAMqO,cAAc7Q,KAAO,GAC3BwC,EAAMqO,cAAc3O,OAAS,QAE/BqP,YAAa,SAAC/O,EAAOK,GACfA,EAAOE,QAAQyO,QACjBhP,EAAMiO,SAAW,KAEjBjO,EAAMmO,qBAAuB,MAGjCc,aAAc,SAACjP,EAAOK,GAChBA,EAAOE,QAAQyO,QACjBhP,EAAMkO,UAAY,KAElBlO,EAAMoO,sBAAwB,OAIpCjO,eAAa,qBACVmM,GAAmBhM,WAAY,SAACN,EAAOK,GACtCL,EAAM2N,cAAcjO,OAAS,UAC7BM,EAAM2N,cAAcnQ,KAAO6C,EAAOE,WAHzB,eAKV+L,GAAmBlM,SAAU,SAACJ,EAAOK,GACpCL,EAAM2N,cAAcjO,OAAS,aANpB,eAQV4M,GAAmB4C,UAAW,SAAClP,EAAOK,GACrCL,EAAM2N,cAAcjO,OAAS,SAC7BM,EAAM2N,cAAchO,MAAQU,EAAOE,WAV1B,eAYVgM,GAAajM,WAAY,SAACN,EAAOK,GAChCL,EAAM4N,QAAQlO,OAAS,UACvBM,EAAM4N,QAAQpQ,KAAO6C,EAAOE,WAdnB,eAgBVgM,GAAanM,SAAU,SAACJ,EAAOK,GAC9BL,EAAM4N,QAAQlO,OAAS,aAjBd,eAmBV6M,GAAa2C,UAAW,SAAClP,EAAOK,GAC/BL,EAAM4N,QAAQlO,OAAS,SACvBM,EAAM4N,QAAQjO,MAAQU,EAAOE,WArBpB,eAuBViM,GAAgBlM,WAAY,SAACN,EAAOK,GACnCL,EAAM6N,WAAWnO,OAAS,UAC1BM,EAAM6N,WAAWrQ,KAAO6C,EAAOE,WAzBtB,eA2BViM,GAAgBpM,SAAU,SAACJ,EAAOK,GACjCL,EAAM6N,WAAWnO,OAAS,aA5BjB,eA8BV8M,GAAgB0C,UAAW,SAAClP,EAAOK,GAClCL,EAAM6N,WAAWnO,OAAS,SAC1BM,EAAM6N,WAAWlO,MAAQU,EAAOE,WAhCvB,eAkCVkM,GAAanM,WAAY,SAACN,EAAOK,GAChCL,EAAMN,OAAS,UACfM,EAAMxC,KAAO6C,EAAOE,WApCX,eAsCVkM,GAAarM,SAAU,SAACJ,EAAOK,GAC9BL,EAAMN,OAAS,aAvCN,eAyCV+M,GAAayC,UAAW,SAAClP,EAAOK,GAC/BL,EAAMN,OAAS,SACfM,EAAML,MAAQU,EAAOE,WA3CZ,eA6CVmM,GAAmBpM,WAAY,SAACN,EAAOK,GACtCL,EAAMqO,cAAc3O,OAAS,UAC7BM,EAAMqO,cAAc7Q,KAAO6C,EAAOE,WA/CzB,eAiDVmM,GAAmBtM,SAAU,SAACJ,EAAOK,GACpCL,EAAMqO,cAAc3O,OAAS,aAlDpB,eAoDVgN,GAAmBwC,UAAW,SAAClP,EAAOK,GACrCL,EAAMqO,cAAc3O,OAAS,SAC7BM,EAAMqO,cAAc1O,MAAQU,EAAOE,WAtD1B,eAwDVoM,GAAYvM,SAAU,SAACJ,GACtBA,EAAMN,OAAS,aAzDN,eA2DViN,GAAYrM,WAAY,SAACN,EAAOK,GAC/BL,EAAMN,OAAS,UACf,IAAIX,EAAKsB,EAAOE,QAAQ/C,KAClBiB,EAAK4B,EAAOE,QAAQ9B,GACpBmO,EAAavM,EAAOE,QAAQqM,WAC5BuC,EAAWnP,EAAM6N,WAAWrQ,KAAK4R,MACrC,SAACxQ,GAAD,OAAOA,EAAEH,KAAO4B,EAAOE,QAAQ/C,KAAK2R,YACpC3P,KACI6P,EAASrP,EAAM4N,QAAQpQ,KAAK4R,MAChC,SAACxQ,GAAD,OAAOA,EAAEH,KAAO4B,EAAOE,QAAQ/C,KAAK6R,UACpC7P,KACI8P,EAAetP,EAAM2N,cAAcnQ,KAAK4R,MAC5C,SAACxQ,GAAD,OAAOA,EAAEH,KAAO4B,EAAOE,QAAQ/C,KAAK8R,gBACpC9P,KACFT,EAAE,eAAQA,EAAR,CAAYoQ,WAAUE,SAAQC,eAAc7Q,KAAImO,eAClD5M,EAAMxC,KAAN,CAAcuB,GAAd,mBAAqBiB,EAAMxC,UA1ElB,eA4EV0P,GAAkB9M,SAAU,SAACJ,EAAOK,GACnCL,EAAMqO,cAAc3O,OAAS,aA7EpB,eA+EVwN,GAAkBqC,QAAS,SAACvP,EAAOK,GAClCL,EAAMqO,cAAc3O,OAAS,UAC7BM,EAAMqO,cAAc7Q,KAApB,CAA4B6C,EAAOE,SAAnC,mBAA+CP,EAAMqO,cAAc7Q,UAjF1D,eAmFV4P,GAAWhN,SAAU,SAACJ,EAAOK,GAC5BL,EAAMN,OAAS,aApFN,eAsFV0N,GAAW9M,WAAY,SAACN,EAAOK,GAC9BL,EAAMN,OAAS,UAEf,IAAI6B,EAAQvB,EAAMxC,KAAK0K,WAAU,SAACtJ,GAAD,OAAOA,EAAEH,KAAO4B,EAAOE,QAAQ9B,MAIhE,GAHAuB,EAAMiO,SAAW5N,EAAOE,QAAQ9B,GAG5B4B,EAAOE,QAAQ8M,OAAQ,CACzBrP,QAAQC,IAAIoC,EAAOE,QAASF,EAAOE,QAAQ/C,MAC3C,IAAM2R,EAAWnP,EAAM6N,WAAWrQ,KAAK4R,MACrC,SAACxQ,GAAD,OAAOA,EAAEH,KAAO4B,EAAOE,QAAQ/C,KAAK2R,YACpC3P,KACI6P,EAASrP,EAAM4N,QAAQpQ,KAAK4R,MAChC,SAACxQ,GAAD,OAAOA,EAAEH,KAAO4B,EAAOE,QAAQ/C,KAAK6R,UACpC7P,KACI8P,EAAetP,EAAM2N,cAAcnQ,KAAK4R,MAC5C,SAACxQ,GAAD,OAAOA,EAAEH,KAAO4B,EAAOE,QAAQ/C,KAAK8R,gBACpC9P,KACFQ,EAAMxC,KAAK+D,GAAX,eACKlB,EAAOE,QAAQ/C,KADpB,CAEE2R,WACAE,SACAC,eACA7Q,GAAI4B,EAAOE,QAAQ9B,KAErBuB,EAAMxC,KAAK+D,GAAOqL,WAAavM,EAAOE,QAAQqM,gBAE9C5M,EAAMxC,KAAK+D,GAAO7B,OAAlB,eACKM,EAAMxC,KAAK+D,GAAO7B,OADvB,GAEKW,EAAOE,QAAQ/C,SAnHb,eAuHVgQ,GAAcpN,SAAU,SAACJ,GACxBA,EAAMN,OAAS,aAxHN,eA0HV8N,GAAclN,WAAY,SAACN,EAAOK,GACjCL,EAAMN,OAAS,UACfM,EAAMxC,KAAOwC,EAAMxC,KAAKgS,QAAO,SAAC5Q,GAAD,OAAOA,EAAEH,KAAO4B,EAAOE,QAAQ9B,MAC9DuB,EAAMkO,UAAY7N,EAAOE,QAAQ9B,MA7HxB,M,GA+IXiP,GAAajN,QAZf6N,G,GAAAA,aACAC,G,GAAAA,WACAC,G,GAAAA,WACAC,G,GAAAA,oBAEAI,I,GADAY,gB,GACAZ,eACAE,G,GAAAA,YACAE,G,GAAAA,aACAN,G,GAAAA,sBACAD,G,GAAAA,aAOahB,I,GANbkB,U,GACAE,uBAKapB,GAAf,S,uCCxWagC,GAAmB,SAAC5C,GAC/B,OAAOA,EAAQnO,KAAI,SAACgR,EAAKpO,GACvB,OAAQoO,EAAItN,MACV,IAAK,YACH,OAAO,kBAAC,KAAD,CAAWb,IAAKD,EAAOqO,SAAUD,EAAI9C,cAC9C,IAAK,WACH,OACE,kBAAC,KAAD,CACErL,IAAKD,EACLqO,SAAUD,EAAI9C,YACd3G,QAAS,CACP2J,UAAW,UACXC,YAAa,UACbC,YAAa,KAIrB,IAAK,UACH,OACE,kBAAC,KAAD,CACEvO,IAAKD,EACLqO,SAAUD,EAAI9C,YACd3G,QAAS,CACP8J,oBAAqB,YACrBC,gBAAiB,EACjBJ,UAAW,UACXC,YAAa,UACbC,YAAa,KAIrB,QACE,OAAO,UCzBTG,GAAW,CACfC,OAAQ,CAAC,UAAW,WACpBC,KAAM,IAGKC,GAAkB,WAAO,IAAD,EACYlM,aAC7C,SAACnE,GAAD,OAAWA,EAAMsQ,WADXvC,EAD2B,EAC3BA,QAASjB,EADkB,EAClBA,QAASkB,EADS,EACTA,iBAGpBlJ,EAAWC,cAJkB,EAMPjE,mBAAS,IANF,mBAM5ByP,EAN4B,KAMpBC,EANoB,OAOH1P,mBAAS,IAPN,mBAO5B2P,EAP4B,KAOlBC,EAPkB,KAQ7BC,ECxBmB,SAACvR,GAC1B,IAAMwR,EAAMC,mBAMZ,OAJA3P,qBAAU,WACR0P,EAAI7C,QAAU3O,KAGTwR,EAAI7C,QDiBW+C,CAAY,CAAEP,SAAQE,aAE5CvP,qBAAU,WACJyP,GAAiBA,EAAcJ,SAAWA,GACxCE,EAAShM,OAAS,GAAKkM,EAAcF,WAAaA,IACpD3L,EAAS0J,GAAWiC,IACpBC,EAAY,OAGf,CAACH,EAAQE,EAAUE,IAEtB,IAAII,EAAY1P,mBAAQ,WAmBtB,ODS2B,SAACkP,EAAQS,GACtC,IAAM9K,EAAU,CACd8J,oBAAqB,YAErBH,UAAW,UACXC,YAAa,UACbC,YAAa,GAGf,MAAe,YAAXQ,EAEA,kBAAC,KAAD,CACEU,YAAa,SAACL,GAAD,OAASA,GAAOI,EAAKJ,EAAKL,IACvCX,SAAU,GACV1J,QAAO,eAAOA,KAKL,aAAXqK,EAEA,kBAAC,KAAD,CACEU,YAAa,SAACL,GAAD,OAASA,GAAOI,EAAKJ,EAAKL,IACvCX,SAAU,GACV1J,QAASA,IAKR,KCtCEgL,CAAgBX,EAlBb,uCAAG,WAAOK,EAAKvO,GAAZ,SAAA5E,EAAA,sDACXmT,EAAIO,OAAOC,eAEXR,EAAIhB,SAASyB,OAAOC,IAAI,UAAU,SAACC,GACjCb,GAAY,SAAC1Q,GAAD,MAAW,CACrB,CAAEqC,OAAMwK,YAAa0E,EAAEC,cAAcC,uBAIzCb,EAAIO,OAAOE,OAAOC,IAAI,YAAY,SAACI,GACjCd,EAAIQ,kBAENR,EAAIO,OAAOE,OAAOC,IAAI,eAAe,SAACI,GACpCd,EAAIO,OAAOQ,cACXnB,EAAU,OAdD,2CAAH,2DAmBT,CAACD,IAEAqB,EAAavQ,mBAAQ,WACvB,OAAI2M,EAAiBvJ,OAAS,EACrBiL,GAAiB1B,GAEnB0B,GAAiB5C,KACvB,CAACA,EAASkB,IAMb,OACE,oCACe,IAAZD,GACC,yBACE3L,MAAO,CACLyB,QAAS,OACTgO,eAAgB,WAChBC,WAAY,SACZ7L,aAAc,KDnCG,SAACsK,EAAQC,GACpC,OACE,6BACE,kBAAC,IAAD,CACEnO,KAAiB,aAAXkO,GAAyB,UAC/BjO,QAAS,kBACiBkO,EAAb,aAAXD,EAAkC,GAAgB,aAEpD7O,KAAM,kBAAC,KAAD,QAER,kBAAC,IAAD,CACEW,KAAiB,YAAXkO,GAAwB,UAC9BnO,MAAO,CAAEa,OAAQ,UACjBvB,KAAM,kBAAC,KAAD,MACNY,QAAS,kBACgBkO,EAAZ,YAAXD,EAAiC,GAAgB,eCuBhDwB,CAAcxB,EAAQC,GACvB,kBAAC,IAAD,CAAQlO,QAhBO,WACrBwC,EAAS4J,QAeH,oFAGJ,kBAAC,KAAD,CAAOtM,MAAO,CAAE4P,SAAU,SACxB,kBAAC,KAAD,CACEnR,MAAM,OACN0B,OAAO,oBACPH,MAAO,CAAE6P,UAAW,QAASD,SAAU,QACvCE,aAAchC,GACd5R,QAAS,CAAC,2BAEG,IAAZyP,GAAiBgD,EACjBa,MEzFHO,GAASC,KAATD,KAEKE,GAAc,SAAC,GAQrB,IAPLC,EAOI,EAPJA,MACAxN,EAMI,EANJA,SACAiJ,EAKI,EALJA,QACAQ,EAII,EAJJA,WACAD,EAGI,EAHJA,aACAvH,EAEI,EAFJA,KACAqC,EACI,EADJA,SAEAlI,qBAAU,WACR6F,EAAK0E,gBACJ,CAAC1E,IAEJ,IASMwL,EAAQ,uCAAG,4BAAA9U,EAAA,+EAEMsJ,EAAKiB,iBAFX,SAEPxK,EAFO,QAIJ,aAAeA,EAAK,iBAC3BA,EAAK,YAAcA,EAAK,YAAL,GACnBA,EAAK,cAAgBA,EAAK,cAAL,IAGvBsH,EAASwJ,EAAa9Q,IAjBxBsH,EAASyJ,EAAWR,EAAU,IAQf,gDAab/P,QAAQC,IAAR,MAba,yDAAH,qDAiBd,OACE,yBAAKmE,MAAO,CAAEvB,MAAO,SACnB,kBAAC,KAAD,CAAOkN,QAASA,EAASlE,KAAK,SAC3ByI,EAAM3T,KAAI,SAACwJ,GAAD,OACT,kBAACgK,GAAD,CAAM3Q,IAAK2G,EAAKtG,MAAOA,MAAOsG,EAAKtG,YAGvC,yBAAKC,UAAU,iBACb,kBAAC,IAAD,CAAMiF,KAAMA,EAAMvH,KAAK,iBACrB,yBAAK4C,MAAO,CAAEvB,MAAO,OAAQgD,QAAS,SACpC,yBAAKzB,MAAO,CAAEvB,MAAO,QAAUyR,EAAMvE,GAASyE,SAC9C,yBAAKpQ,MAAO,CAAEvB,MAAO,MAAO4R,YAAa,KACvC,kBAAC,GAAD,UAKR,yBAAK3Q,UAAU,gBACZiM,EAAU,GACT,kBAAC,IAAD,CAAQ3L,MAAO,CAAEa,OAAQ,SAAWX,QAzC/B,WACXwC,EAASyJ,GAAW,SAACvO,GAAD,OAAWA,EAAQ,MACvC8E,EAASyJ,EAAWR,EAAU,MAuCxB,kCAIDA,EAAUuE,EAAM7N,OAAS,GACxB,kBAAC,IAAD,CAAQpC,KAAK,UAAUC,QAASiQ,GAAhC,kCAIW,IAAZxE,GACC,kBAAC,IAAD,CACEvM,IAAI,SACJa,KAAK,UAELC,QAAS,kBAAM8G,MAJjB,6D,UCvEGsJ,GAAa,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACnBC,EAAYC,KAAZD,QAgBR,OAAO,yBAAK9Q,UAAU,kBAbb6Q,EACL,kBAAC,KAAD,CAAMtQ,KAAK,OAAOP,UAAU,QACzB6Q,EAAKhU,KAAI,SAACC,EAAG2C,GAAJ,OACR,kBAACqR,EAAD,CAASE,IAAKlU,EAAEiD,MAAOL,IAAKD,GACzB3C,EAAEmU,WAKT,2B,4DCDEC,GAAaC,IAAbD,SACAvN,GAAWC,IAAXD,OA0DKyN,GAAiB,SAAC1T,EAAM6F,EAAa8N,GAChD,OACE,kBAAC,IAAKlR,KAAN,KACE,kBAAC,IAAKA,KAAN,CACEzC,KAAMA,EACN4T,cAAe,QACfC,OAAiB,SAAT7T,IAAoB2T,EAC5BG,kBAAmB,SAAC/B,GAAD,OAAOA,EAAEgC,OAAOnU,QAEnC,kBAAC4T,GAAD,CAAU5Q,MAAO,CAAEG,OAAQ,IAAM8C,YAAaA,EAAaO,YAAU,OAMhE4N,GAAmB,SAACC,EAAQ1J,EAAcvK,EAAMkU,GAC3D,IAAMC,EAAUF,EACd,kBAAC,KAAD,CACEpO,YAAY,gEACZO,YAAY,EACZ6N,OAAQ,OACRG,OAAQ,SAGV,kBAAC,KAAD,CAAYvO,YAAY,sEAAeO,YAAY,IAGrD,OACE,kBAAC,IAAK3D,KAAN,CAAW6D,MAAO4N,GAChB,kBAAC,IAAMG,MAAP,CAAaC,SAAO,GAClB,kBAAC,IAAK7R,KAAN,CACEzC,KAAMA,EACNiH,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oFACnC2M,kBAAmB,SAAC/B,EAAGwC,GACrB,OAAOC,KAAOD,EAAQ,gBAGvBJ,GAEH,kBAAC,IAAK1R,KAAN,CACEzC,KAAI,aAAQA,GACZ4C,MAAO,CAAE6R,WAAY,IACrBb,cAAe,UACfE,kBAAmB,SAAC/B,GAAD,OAAOA,EAAEgC,OAAOW,UAEnC,kBAAC,KAAD,CAAUlL,SAAUe,GAApB,0BAmBGoK,GAAe,CAC1B3U,KAAM,OACNa,OAAQ,mDACRkK,SAAU,UACV6J,QAAS,CACPC,cAAe,sBAEjBrL,SAP0B,SAOjBgB,GACkB,cAArBA,EAAKN,KAAKhK,QACZ1B,QAAQC,IAAI+L,EAAKN,KAAMM,EAAKsK,UAEL,SAArBtK,EAAKN,KAAKhK,OACZiH,KAAQ4N,QAAR,UAAmBvK,EAAKN,KAAKlK,KAA7B,iGAC8B,UAArBwK,EAAKN,KAAKhK,QACnBiH,KAAQhH,MAAR,+HAAuCqK,EAAKN,KAAKlK,SC9I1CgV,GAAkB,SAAClQ,GAAW,IACjCqJ,EAA6CrJ,EAA7CqJ,cAAeC,EAA8BtJ,EAA9BsJ,QAASC,EAAqBvJ,EAArBuJ,WAAY9G,EAASzC,EAATyC,KADJ,EAEVjG,oBAAS,GAFC,mBAEjC2T,EAFiC,KAEvBC,EAFuB,OAGN5T,oBAAS,GAHH,mBAGjC6T,EAHiC,KAGrBC,EAHqB,OAOF9T,oBAAS,GAPP,mBAOjC+T,EAPiC,KAOpBC,EAPoB,OAQNhU,oBAAS,GARH,mBAQjCiU,EARiC,KAQtBC,EARsB,KAUxC9T,qBAAU,WAUR,OATA6F,EAAKkO,cAAc,qBACjBP,EAAU3N,EAAKkO,cAAc,qBAC/BlO,EAAKkO,cAAc,gBACjBL,EAAY7N,EAAKkO,cAAc,gBACjClO,EAAKkO,cAAc,kBACjBH,IAAe/N,EAAKkO,cAAc,kBACpClO,EAAKkO,cAAc,gBACjBD,EAAajO,EAAKkO,eAA8B,IAE3C,WACLP,GAAU,GACVE,GAAY,MAEb,CAAC7N,IASJ,OACE,oCD1ByB,SAACmO,GAAU,IAC9BtH,EAAuCsH,EAAvCtH,QAASD,EAA8BuH,EAA9BvH,cAAeE,EAAeqH,EAAfrH,WAC1B7O,EAAM,CACV,CACEQ,KAAM,WACN6F,YAAa,kFACba,QACwB,YAAtB2H,EAAWnO,OACPmO,EAAWrQ,KAAKmB,KAAI,SAACwW,GAAD,OAAOA,EAAE3V,QAC7B,IAER,CACEA,KAAM,eACN6F,YAAa,0GACba,QAC2B,YAAzByH,EAAcjO,OACViO,EAAcnQ,KAAKmB,KAAI,SAACyW,GAAD,OAAOA,EAAE5V,QAChC,IAER,CACEA,KAAM,SACN6F,YAAa,iCACba,QACqB,YAAnB0H,EAAQlO,OAAuBkO,EAAQpQ,KAAKmB,KAAI,SAACwW,GAAD,OAAOA,EAAE3V,QAAQ,KAIvE,OACE,6BAQGR,EAAIL,KAAI,SAACC,EAAG2C,GAAJ,OACP,kBAAC,IAAKU,KAAN,CACEzC,KAAMZ,EAAEY,KACRiH,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oFACnCnF,IAAG,UAAK5C,EAAEY,MAAP,OAAc+B,GACjB8T,aAAW,GAEX,kBAAC,IAAD,CAAQhQ,YAAazG,EAAEyG,YAAajD,MAAO,CAAEvB,MAAO,KAAO+E,YAAU,GAClEhH,EAAEsH,QAAQvH,KAAI,SAAC2W,GAAD,OACb,kBAAC,GAAD,CAAQlW,MAAOkW,EAAI9T,IAAK8T,GACrBA,YCjBVC,CAAc,CAAE3H,UAASD,gBAAeE,eACzC,kBAAC,IAAK5L,KAAN,CAAWzC,KAAK,WACd,kBAAC,IAAD,CAAO6F,YAAY,mEAEpB6N,GAAe,OAAQ,+FAAoB,GAC5C,kBAAC,IAAKjR,KAAN,CACEzC,KAAM,cACNgW,SAAO,EACPpC,cAAe,UACfE,kBAAmB,SAAC/B,GAAD,OAAOA,EAAEgC,OAAOW,UAEnC,kBAAC,KAAD,CAAUlL,SAAU,kBAAM4L,GAAY,SAAC5U,GAAD,OAAYA,OAAlD,wFACkB,MAGnBkT,GAAe,sBAAuB,gHAAuByB,GAC9D,kBAAC,IAAK1S,KAAN,CAAWzC,KAAM,mBAAoBgW,SAAO,EAACpC,cAAe,WAC1D,kBAAC,KAAD,CAAUpK,SAAU,kBAAM0L,GAAU,SAAC1U,GAAD,OAAYA,OAAhD,qJAC6B,MAG9BkT,GAAe,qBAAsB,oGAAqBuB,GAC1DjB,GACCqB,GAjCwB,SAACtD,GAAD,OAC5BuD,IAAevD,EAAEgC,OAAOW,WAkCpB,aACA,iEAEDV,GACCuB,GApCsB,SAACxD,GAAD,OAC1ByD,IAAazD,EAAEgC,OAAOW,WAqClB,WACA,mFDgDN,kBAAC,IAAKjS,KAAN,CACEzC,KAAK,aACL4T,cAAc,YAGd,kBAAC,KAAWe,GACV,kBAAC,IAAD,CAAQzS,KAAM,kBAAC+T,GAAA,EAAD,OAAd,wK,yBE9HOC,I,OAAiB,WAAO,IAAD,EACR5U,qBADQ,mBAC3B6U,EAD2B,KACpBC,EADoB,KAElC,OACE,oCACE,kBAAC,IAAK3T,KAAN,CAAWzC,KAAK,YACd,kBAAC,IAAD,CAAO6F,YAAY,2JAErB,kBAAC,IAAKpD,KAAN,CAAWzC,KAAK,gBACd,kBAAC,IAAD,CAAO6F,YAAY,+HAErB,kBAAC,IAAKpD,KAAN,CAAWzC,KAAK,mBACd,kBAAC,IAAD,CAAO6F,YAAY,iGAErB,kBAAC,IAAKpD,KAAN,CAAWzC,KAAK,YACd,kBAAC,KAAD,CACEqW,QAAS,KACTzW,MAAOuW,EACP3M,SAAU,SAAC2M,GAAD,OAAWC,EAAS,CAAED,cAIpC,kBAAC,IAAK1T,KAAN,CAAWzC,KAAK,mBACd,kBAAC,IAAD,CAAO6F,YAAY,gHC1BnB2N,GAAaC,IAAbD,SAEK8C,GAAa,WAAO,IAAD,EACEhV,oBAAS,GADX,mBACbiV,GADa,WAK9B,OACE,oCACE,kBAAC,IAAK9T,KAAN,CACEzC,KAAK,aACLiH,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oFACnCb,MAAO,yGAEP,kBAAC,KAAD,CACE1D,MAAO,CAAEvB,MAAO,SAChBsF,IAAK,EACLC,IAAK,IACLC,UAAW,SAACjH,GAAD,gBAAcA,EAAd,MACXkH,OAAQ,SAAClH,GAAD,OAAWA,EAAMmH,QAAQ,IAAK,QAG1C,kBAAC,IAAKtE,KAAN,CAAWzC,KAAK,cACd,kBAAC,GAAD,CAAU4C,MAAO,CAAEG,OAAQ,IAAM8C,YAAY,wEAE/C,kBAAC,IAAKpD,KAAN,CACEzC,KAAK,YACL4T,cAAc,UACdE,kBAAmB,SAAC/B,GAAD,OAAOA,EAAEgC,OAAOW,UAEnC,kBAAC,KAAD,0HAEF,kBAAC,IAAKjS,KAAN,CACEzC,KAAK,cACL4T,cAAc,UACdE,kBAAmB,SAAC/B,GAAD,OAAOA,EAAEgC,OAAOW,SACnCsB,SAAO,GAEP,kBAAC,KAAD,CAAUxM,SAlCK,SAACuI,GAAD,OACnBA,EAAEgC,OAAOW,QAAU6B,GAAY,GAASA,GAAY,KAiChD,gMC1CKC,GAA2B,SAACxW,GACvC,OAAQA,GACN,IAAK,OACH,MAAO,6CACT,IAAK,UACH,MAAO,gEACT,IAAK,aACH,MAAO,yDACT,IAAK,WACH,MAAO,kFACT,IAAK,WACH,MAAO,kFACT,IAAK,cACH,MAAO,mIACT,IAAK,aACH,MAAO,gEACT,IAAK,gBACH,MAAO,iHACT,IAAK,sBACH,MAAO,gHACT,IAAK,cACH,MAAO,iKACT,IAAK,eACH,MAAO,0GACT,IAAK,aACH,MAAO,2BACT,IAAK,WACH,MAAO,qBACT,IAAK,aACH,MAAO,wGACT,IAAK,SACH,MAAO,iCACT,IAAK,kBACH,MAAO,8FACT,IAAK,WACH,MAAO,mDACT,IAAK,kBACH,MAAO,0GACT,IAAK,qBACH,MAAO,oGACT,IAAK,mBACH,MAAO,qJACT,IAAK,eACH,MAAO,4HACT,IAAK,mBACH,MAAO,+IACT,IAAK,qBACH,MAAO,kHACT,IAAK,YACH,MAAO,sEACT,IAAK,cACH,MAAO,sHACT,IAAK,aACH,MAAO,0GACT,QACE,OAAOA,IAIAyW,GAA8B,SAAClX,GAC1C,IAAMC,EAAM,GAmBZ,OAjBAuF,OAAOC,KAAKzF,GAAIJ,KAAI,SAAC6C,GAEE,qBAAZzC,EAAGyC,IACS,kBAAZzC,EAAGyC,IACF,kBAARA,GACQ,gBAARA,GACQ,QAARA,GACQ,OAARA,EAEAxC,EAAIkX,KAAK,CAAE1W,KAAMgC,EAAKpC,MAAOL,EAAGyC,UACX2U,IAAZpX,EAAGyC,IAA4C,OAAtBA,EAAI4U,MAAM,KAAK,GACjDpX,EAAIkX,KAAK,CAAE1W,KAAMgC,EAAKpC,OAAO,SACR+W,IAAZpX,EAAGyC,IACZxC,EAAIkX,KAAK,CAAE1W,KAAMgC,EAAKpC,MAAO,UAI1BJ,GAOIqX,GAAuB,SAClC7Y,EACAqQ,EACAF,EACAC,GAEA,IAII0I,EAJAvX,EAAK,GACLwX,GAAY,EACZC,GAAc,EACdC,EAAa,KAyDjB,OAtDAjZ,EAAKyB,SAAQ,SAACkJ,GACZ,GACgB,cAAdA,EAAK3I,MACS,gBAAd2I,EAAK3I,MACS,eAAd2I,EAAK3I,MACS,eAAd2I,EAAK3I,MACS,gBAAd2I,EAAK3I,MACS,kBAAd2I,EAAK3I,KAgBL,GAbkB,eAAd2I,EAAK3I,OACP8W,EAAanO,EAAK/I,OAEF,gBAAd+I,EAAK3I,OACPgX,EAAcrO,EAAK/I,OAEH,cAAd+I,EAAK3I,OACP+W,EAAYpO,EAAK/I,OAED,eAAd+I,EAAK3I,OACPiX,EAAatO,EAAK/I,OAGF,aAAd+I,EAAK3I,MAAqC,eAAd2I,EAAK3I,KAE9BT,EADLoJ,EAAK/I,MAAMqF,OAAS,EACb,eAAQ1F,EAAR,eAAaoJ,EAAK3I,KAAO2I,EAAK/I,QAC9B,eAAQL,EAAR,eAAaoJ,EAAK3I,KAAlB,UAA4B2I,EAAK/I,MAAjC,iBAGJ,GAAkB,aAAd+I,EAAK3I,KAAqB,CACjC,IAAMf,EAAKoP,EAAWrQ,KAAK4R,MAAK,SAACgG,GAAD,OAAOA,EAAE5V,OAAS2I,EAAK/I,SAAOX,GAC9DM,EAAE,eAAQA,EAAR,eAAaoJ,EAAK3I,KAAOf,SACtB,GAAkB,iBAAd0J,EAAK3I,KAAyB,CACvC,IAAMf,EAAKkP,EAAcnQ,KAAK4R,MAAK,SAACgG,GAAD,OAAOA,EAAE5V,OAAS2I,EAAK/I,SAAOX,GACjEM,EAAE,eAAQA,EAAR,eAAaoJ,EAAK3I,KAAOf,SACtB,GAAkB,WAAd0J,EAAK3I,KAAmB,CACjC,IAAMf,EAAKmP,EAAQpQ,KAAK4R,MAAK,SAACgG,GAAD,OAAOA,EAAE5V,OAAS2I,EAAK/I,SAAOX,GAC3DM,EAAE,eAAQA,EAAR,eAAaoJ,EAAK3I,KAAOf,SAE3BM,EAAE,eAAQA,EAAR,eAAaoJ,EAAK3I,KAAO2I,EAAK/I,WAKtCL,EAAE,eACGA,EADH,CAEAW,OAAQ,CACN4W,WAAYA,EACZ,YAAaC,EACb,cAAeC,EACfC,WAAYA,MAOLC,GAAiB,SAAClZ,GAC7B,OAAOA,EAAKmB,KAAI,SAACC,GASf,MAPe,aAAXA,EAAEyD,KACEzD,EAAEiO,YAAYlO,KAAI,SAACgY,GAAD,MAAS,CAAEC,EAAGD,EAAG,GAAIE,EAAGF,EAAG,OAC/B,YAAX/X,EAAEyD,KACLzD,EAAEiO,YAAY,GAAGlO,KAAI,SAACmY,GAAD,MAAQ,CAAEF,EAAGE,EAAE,GAAID,EAAGC,EAAE,OAE7C,CAAC,CAAEF,EAAGhY,EAAEiO,YAAY,GAAIgK,EAAGjY,EAAEiO,YAAY,SC3JxCkK,GAAc,SAAC,GAAY,IAAVhY,EAAS,EAATA,GAStBiY,EARM3V,mBAAQ,WAClB,IAAI4V,EAAUhB,GAA4BlX,GAI1C,OAHAkY,EAAUA,EAAQzH,QAChB,SAAC5Q,GAAD,MAA0B,kBAAZA,EAAEQ,OAAyC,mBAAZR,EAAEQ,WAGhD,CAACL,IAEmBJ,KAAI,SAACC,GAAD,OACzB,kBAAC,IAAKqD,KAAN,CACET,IAAK5C,EAAEY,KACPsG,MACE,0BAAM1D,MAAO,CAAE6J,MAAO,YACnB+J,GAAyBpX,EAAEY,QAI/BZ,EAAEQ,UAGP,OAAO,oCAAG4X,ICbCE,GAAe,SAAC,GAAwB,IAAtBnQ,EAAqB,EAArBA,KAAMqC,EAAe,EAAfA,SAAe,EACgBjF,aAChE,SAACnE,GAAD,OAAWA,EAAMsQ,WADXvC,EAD0C,EAC1CA,QAASJ,EADiC,EACjCA,cAAeC,EADkB,EAClBA,QAASC,EADS,EACTA,WAAYC,EADH,EACGA,SAI/ChJ,EAAWC,cAEXuN,EAAQ6E,GACZxJ,EACAC,EACAC,EACAC,EACA/G,EACAjC,GAEF,OACE,kBAAC,GAAD,CACEwN,MAAOA,EACPvE,QAASA,EACTQ,WAAYA,GACZD,aAAcA,GACdxJ,SAAUA,EACViC,KAAMA,EACNqC,SAAUA,KAKV+N,GAAW,SACfxJ,EACAC,EACAC,EACAC,EACA/G,EACAjC,GANe,MAOZ,CACH,CACEjD,MAAO,kFACP2Q,QACE,kBAAC,GAAD,CACE7E,cAAeA,EACfC,QAASA,EACTC,WAAYA,EACZ9G,KAAMA,EACNjC,SAAUA,KAIhB,CACEjD,MAAO,oGACP2Q,QAAS,kBAAC,GAAD,OAEX,CACE3Q,MAAO,sEACP2Q,QAAS,kBAAC,GAAD,OAEX,CACE3Q,MAAO,wFACP2Q,QAAS,kBAAC,GAAD,CAAazT,GAAI+O,OCzDjBsJ,GAAgB,WAAO,IAAD,EACHtW,qBADG,mBAC1BuW,EAD0B,KACjBC,EADiB,KAE3BxS,EAAWC,cAFgB,EAU7BZ,aAAY,SAACnE,GAAD,OAAWA,EAAMsQ,WAN/B3C,EAJ+B,EAI/BA,cACAC,EAL+B,EAK/BA,QACAC,EAN+B,EAM/BA,WACAC,EAP+B,EAO/BA,SACApO,EAR+B,EAQ/BA,OACAoN,EAT+B,EAS/BA,QAT+B,EAWlBjG,IAAKC,UAAbC,EAX0B,oBAa3BwQ,EAAeC,sBAAW,sBAAC,gCAAA/Z,EAAA,sDAC/B,IACMuB,EAAMiX,GAA4BnI,GAClC/O,EAAKsX,GAAqBrX,EAAK6O,EAAYF,EAAeC,GAExDf,EAAc6J,GAAe5J,GAKnChI,EAAS6H,GAHT5N,EAAK,CAAEvB,KAAMuB,EAAI6N,WAAYC,EAAaC,aAI1ChI,EAASyJ,GAAW,IACpBzJ,EAAS4J,MAEE,YAAXhP,GAAwB4X,GAAW,GACnC,MAAOvZ,GACPC,QAAQC,IAAIF,EAAI4I,SAhBa,2CAkB9B,CAACkH,EAAYC,EAAUhJ,EAAUgI,EAASa,EAAejO,EAAQkO,IAEpE,OACE,oCACE,kBAAC,IAAD,CACEvL,KAAK,UACLC,QAAS,WACPwC,EAASyJ,GAAW,IACpB+I,GAAW,IAEblV,MAAO,CAAE6D,aAAc,KANzB,oDAUY,YAAXvG,GACC,kBAAC,KAAD,CACEmC,MAAM,oNACNwV,QAASA,EACTI,KAAM,WACJ3S,EAASyJ,GAAW,IACpB+I,GAAW,IAEbI,SAAU,WACR5S,EAASyJ,GAAW,IACpB+I,GAAW,GACXxS,EAAS4J,MACT3H,EAAK0E,eAEP5K,MAAO,MACP8W,OAAQ,MAER,yBACEvV,MAAO,CACLyB,QAAS,OACTgO,eAAgB,kBAGlB,kBAAC,GAAD,CAAO9K,KAAMA,EAAMqC,SAAUmO,QCjE5BK,GAAmB,SAACtT,GAAW,IAClC+S,EAAgC/S,EAAhC+S,QAASC,EAAuBhT,EAAvBgT,WAAY/R,EAAWjB,EAAXiB,OADY,EAE1BsB,IAAKC,UAAbC,EAFkC,sBAWrC5C,aAAY,SAACnE,GAAD,OAAWA,EAAMsQ,WAN/B3C,EALuC,EAKvCA,cACAC,EANuC,EAMvCA,QACAC,EAPuC,EAOvCA,WACAnO,EARuC,EAQvCA,OACAoN,EATuC,EASvCA,QACAgB,EAVuC,EAUvCA,SAGIhJ,EAAWC,cAEjBgC,EAAKgB,eAAL,eACK+F,EADL,CAEE,aAAckG,KAAOlG,EAAS,cAnBnB,cAoBX,WAAYkG,KAAOlG,EAAS,YApBjB,iBAuBb5M,qBAAU,WACR,OAAO,WACL4D,EAAS4J,MACT5J,EAAS+J,GAAc,KACvB9H,EAAKgB,eAAe,OAErB,CAAChB,EAAMxB,IAEV,IAAMsS,EAAcL,sBAAW,sBAAC,gCAAA/Z,EAAA,sDAC9B,IACMuB,EAAMiX,GAA4BnI,GAClC/O,EAAKsX,GAAqBrX,EAAK6O,EAAYF,EAAeC,GACxDf,EAAc6J,GAAe5J,GAEnC9O,QAAQC,IAAI4O,GACZ9N,EAAK,CAAEvB,KAAMuB,EAAI6N,WAAYC,GAE7B/H,EAASyJ,GAAW,IACpBzJ,EAASsI,GAAW,CAAEC,QAAQ,EAAM7P,KAAMuB,EAAIN,GAAI8G,EAAO9G,GAAIqO,aAC7D/F,EAAK0E,cAEM,YAAX/L,GAAwB4X,GAAW,GACnC,MAAOvZ,GACPC,QAAQC,IAAIF,EAAI4I,SAfY,2CAiB7B,CACDkH,EACAF,EACAC,EACAd,EACAgB,EACA/G,EACAxB,EACA+R,EACA5X,IAGF,OACE,kBAAC,KAAD,CACEmC,MAAM,sEACNwV,QAASA,EACTxW,MAAO,MACP6W,SAAU,kBAAMJ,GAAW,IAC3BG,KAAM,kBAAMH,GAAW,IACvBK,OAAQ,IAER,yBACEvV,MAAO,CACLyB,QAAS,OACTgO,eAAgB,kBAGlB,kBAAC,GAAD,CAAO9K,KAAMA,EAAMqC,SAAUyO,OC3FxBC,GAAyB,SAACC,GACrC,IAAIhZ,EAAK,GACLwK,EAAS,GACb,GAAwB,YAApBwO,EAASrY,OAAsB,CAEjC,IADA,IAAMlC,EAAOua,EAASva,KACboB,EAAI,EAAGA,EAAIpB,EAAKiH,OAAQ7F,IAC/BG,EAAE,eAAQA,EAAR,eAAavB,EAAKoB,GAAGY,KAAOhC,EAAKoB,GAAGY,OAExC+J,EAAShF,OAAOC,KAAKzF,GAAIJ,KAAI,SAAC6C,GAAD,MAAU,CAAEkS,KAAMlS,EAAKpC,MAAOoC,MAE7D,OAAO+H,GAkNHyO,GAAe,CAAC,OAAQ,OAAQ,OAAQ,OAAQ,QACnDrZ,KAAI,SAACS,GAAD,MAAY,CACfA,QACAsU,KAAMtU,MAEP6Y,UC7MUC,GAAgB,WAAO,IAAD,EAQ7B/T,aAAY,SAACnE,GAAD,OAAWA,EAAMsQ,WAN/B3C,EAF+B,EAE/BA,cACAE,EAH+B,EAG/BA,WACAnO,EAJ+B,EAI/BA,OACAlC,EAL+B,EAK/BA,KACAyQ,EAN+B,EAM/BA,SACAC,EAP+B,EAO/BA,UAEIpJ,EAAWC,cATgB,EAUHjE,oBAAS,GAVN,mBAU1BuW,EAV0B,KAUjBC,EAViB,OAWLxW,mBAAS,IAXJ,mBAW1ByE,EAX0B,KAWlB4S,EAXkB,OAYGrX,mBAAS,IAZZ,mBAY1B+H,EAZ0B,KAYduP,EAZc,OAaDtX,qBAbC,mBAa1BuX,EAb0B,KAahBC,EAbgB,OAelBzR,IAAKC,UAAbC,EAf0B,oBAiB3BG,EAAU7F,mBAAQ,WACtB,ODgCyC,SAC3CsM,EACAE,EACAyJ,EACAa,GAJ2C,MAKxC,CACH,CACEtW,MAAO,SACPuD,UAAW,KACX5D,IAAK,KACLX,MAAO,KACPsG,MAAO,SACP9C,OAAQ,SAACqP,EAAMnO,GAAP,OACN,uBACEjD,QAAS,WACP6V,EAAU5S,GACV+R,GAAW,KAGZ5D,KAIP,CACE7R,MAAO,iCACPuD,UAAW,UACX5D,IAAK,UACL6C,OAAQ,SAACqP,EAAMnO,GAAP,OAAkB,oCAAGmO,KAE/B,CACE7R,MAAO,6CACPuD,UAAW,OACX5D,IAAK,QAEP,CACEK,MAAO,wFACPuD,UAAW,WACX5D,IAAK,WACL+W,QAAST,GAAuBjK,GAChC2K,SAAU,SAACpZ,EAAOmG,GAAR,OAAsD,IAAnCA,EAAO4J,SAASsJ,QAAQrZ,KAEvD,CACEyC,MAAO,oDACPuD,UAAW,eACX5D,IAAK,eACL+W,QAAST,GAAuBnK,GAChC6K,SAAU,SAACpZ,EAAOmG,GAAR,OAA0D,IAAvCA,EAAO+J,aAAamJ,QAAQrZ,KAE3D,CACEyC,MAAO,gEACPuD,UAAW,aACX5D,IAAK,aACLX,MAAO,MACPsG,MAAO,SACPoR,QAASP,GACTQ,SAAU,SAACpZ,EAAOmG,GAAR,OAA2D,IAAxCA,EAAO,cAAckT,QAAQrZ,KAE5D,CACEyC,MAAO,kFACPuD,UAAW,WACX5D,IAAK,WACLX,MAAO,MACPsG,MAAO,SACPoR,QAASP,GACTQ,SAAU,SAACpZ,EAAOmG,GAAR,OAAyD,IAAtCA,EAAO,YAAYkT,QAAQrZ,KAE1D,CACEyC,MAAO,2CACPuD,UAAW,aACX5D,IAAK,aACLgH,UAAU,EACV3H,MAAO,KACP6X,MAAM,EACNrW,KAAM,SACN8E,MAAO,SACPwR,OAAQ,SAAClb,EAAGmb,GAAJ,OAAUA,EAAEtC,WAAa7Y,EAAE6Y,YACnCuC,eAAgB,CAAC,YC5GVC,CACLnL,EACAE,EACAyJ,EACAa,KAED,CAACxK,EAAeE,EAAYyJ,EAAYa,IAE3CjX,qBAAU,WACR,GAAImX,EAAU,CACZ,GAAIpK,EAAU,CACZ,IAAI9F,EAAOU,EAAWuG,MAAK,SAACxQ,GAAD,OAAOA,EAAEH,KAAOwP,KAE3CqK,GAAY,SAACtY,GAAD,OAAWA,EAAMrB,KAAI,SAACC,GAAD,OAAQA,EAAEH,KAAOwP,EAAW9F,EAAOvJ,QACpEkG,EAASiK,GAAY,CAAEC,SAAS,KAE9Bd,IACFoK,GAAY,SAACtY,GAAD,OAAWA,EAAMwP,QAAO,SAAC5Q,GAAD,OAAOA,EAAEH,KAAOyP,QACpDpJ,EAASmK,GAAa,CAAED,SAAS,SAGpC,CAACnG,EAAYqF,EAAWD,EAAUoK,IAErChX,mBAAQ,WACN,GAAIkD,OAAOC,KAAKe,GAAQd,OAAS,GAAK4S,EAAS,CAC7C,IAAItY,EAAE,eACDwG,EADC,CAEJ,aAAcyO,KAAOzO,EAAO,cAAe,cAC3C,WAAYyO,KAAOzO,EAAO,YAAa,gBAGzCT,EAASwJ,GAAavP,IACtB,IAAI8N,EAActH,EAAOqH,WAAWC,YACpCA,EAAYpI,OAAS,GACnBK,EAAS0J,GAAW,CAAC,CAAE3B,cAAaxK,KAAM,iBAE7C,CAACkD,EAAQ8R,EAASvS,IAErBzD,mBAAQ,WAEN+W,EAA0C5a,EDhErBmB,KAAI,SAACC,GAC1B,IAAI4F,EAAO,CAAEhD,IAAK5C,EAAEH,IAcpB,OAbA8F,OAAOC,KAAK5F,GAAGK,SAAQ,SAACuC,GAEpBgD,EADU,WAARhD,EACE,eACCgD,EADD,CAEF8R,WAAY1X,EAAE4C,GAAK8U,WACnB,YAAa1X,EAAE4C,GAAK,aACpB,cAAe5C,EAAE4C,GAAK,eACtBiV,WAAY7X,EAAE4C,GAAF,aAGV,eAAQgD,EAAR,eAAehD,EAAM5C,EAAE4C,QAGxBgD,QCkDN,CAAChH,IA8BJ,OACE,kBAAC,IAAD,CAAMuJ,KAAMA,GACV,kBAAC,IAAK9E,KAAN,CAAWzC,KAAM,UACf,kBAAC,IAAD,CACEoG,YAAU,EACVP,YAAa,6EACb2D,SAlBS,SAACuI,GAChB+G,EACEzP,EAAW2G,QAAO,SAAC5Q,GACjB,OAAIA,EAAEma,QACGna,EAAEma,QAAQC,cAAc7Z,SAASoS,EAAEgC,OAAOnU,MAAM4Z,eAGlDpa,EAAEH,GAAGwa,WAAW9Z,SAASoS,EAAEgC,OAAOnU,MAAM4Z,oBAY7C5W,MAAO,CAAEvB,MAAO,QAGpB,kBAAC,IAAKoB,KAAN,CAAWzC,KAAK,SACd,kBAAC,GAAD,CACE0H,QAASA,EACT1J,KAAM6a,GAAsBxP,EAC5BsC,QAASiN,EACThQ,WA3CO,SAAC7C,GACdT,EACEsI,GAAW,CACTC,QAAQ,EACR7P,KAAM,CACJ8Y,WAAY/Q,EAAO+Q,YAErB7X,GAAI8G,EAAO9G,OAqCT4J,aAhCS,SAAC9C,GAChBT,EAAS0I,GAAcjI,EAAO9G,MAgCxBwK,QAAoB,YAAXvJ,KAGZ2X,GACC,kBAAC,IAAKpV,KAAN,CAAWzC,KAAK,SACd,kBAAC,GAAD,CACE6X,QAASA,EACTC,WAAYA,EACZ/R,OAAQA,OC3HP2T,GAAW,WACtB,IAAMpU,EAAWC,cASjB,OAPA7D,qBAAU,WACR4D,EAASwH,MACTxH,EAASyH,MACTzH,EAAS0H,MACT1H,EAAS2H,QACR,IAGD,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,QCrBEhH,GAAWC,IAAXD,OAEK0T,GAAgB,WAAO,IAAD,EACJhV,aAAY,SAACnE,GAAD,OAAWA,EAAMsQ,WAAlDzC,EADyB,EACzBA,WAAYrQ,EADa,EACbA,KADa,EAEPsD,mBAAS,CAAC,EAAG,IAFN,mBAE1BsY,EAF0B,KAEnBC,EAFmB,OAGHvY,qBAHG,mBAG1BoF,EAH0B,KAGjBoT,EAHiB,KAI3BxU,EAAWC,cAiEjB,OACE,yBAAK3C,MAAO,CAAE6D,aAAc,KAC1B,yBACE7D,MAAO,CACLyB,QAAS,OACT0V,SAAU,SAGXH,EAAMza,KAAI,SAACC,GAAD,OAvEU,SAAC4C,GAC1B,IAAIxC,EACoB,YAAtB6O,EAAWnO,OAAuBmO,EAAWrQ,KAAKmB,KAAI,SAACwW,GAAD,OAAOA,EAAE3V,QAAQ,GAkBzE,OACE,kBAAC,IAAKyC,KAAN,CAAWG,MAAO,CAAEY,YAAa,KAC/B,kBAAC,IAAKf,KAAN,CACEzC,KAAI,mBAAcgC,GAClBiF,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,qFAEnC,kBAAC,IAAD,CACEtB,YAAa,wFACbjD,MAAO,CAAEvB,MAAO,KAChB+E,YAAU,EACVoD,SAhBiB,SAAC5J,GAAD,OACvBka,GAAW,SAACtZ,GAAD,sBACNA,EADM,eAERwB,EAAMhE,EAAKgS,QAAO,SAAC5Q,GAAD,OAAOA,EAAEuQ,WAAa/P,KAAOT,KAAI,SAACC,GAAD,OAAOA,EAAEH,aAexDO,EAAIL,KAAI,SAACC,EAAG2C,GAAJ,OACP,kBAAC,GAAD,CAAQnC,MAAOR,EAAG4C,IAAK5C,GACpBA,QAKRsH,GAAWA,EAAQ1E,IAClB,kBAAC,IAAKS,KAAN,CACEzC,KAAI,mBAAcgC,GAClBiF,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oFACnCnF,IAAG,mBAAcA,IAEjB,kBAAC,IAAD,CACE6D,YAAW,+CAAY7D,GACvBY,MAAO,CAAEvB,MAAO,KAChB+E,YAAU,EACVoD,SA7Ca,SAACvK,GAAD,OACrBqG,EACE2J,GAAoB,CAClB,CACEpM,KAAM,UACNwK,YAAarP,EAAK4R,MAAK,SAACxQ,GAAD,OAAOA,EAAEH,KAAOA,KAAImO,WAAWC,kBA0CnD3G,EAAQ1E,GAAK7C,KAAI,SAACC,EAAG2C,GAAJ,OAChB,kBAAC,GAAD,CAAQnC,MAAOR,EAAG4C,IAAK5C,GACpBA,SAkBO4a,CAAmB5a,OAEvC,yBAAKwD,MAAO,CAAEyB,QAAS,OAAQiO,WAAY,SAAU2H,UAAW,KAC9D,yBAAKrX,MAAO,CAAEY,YAAa,KACzB,kBAAC,IAAD,CACE6G,KAAK,QACLxH,KAAK,UACLqX,MAAM,SACNpX,QAAS,kBAAM+W,EAAS,GAAD,mBAAKD,GAAL,CAAYA,EAAM3U,OAAS,OAJpD,KAOU,IACV,+HAEF,oCACE,kBAAC,IAAD,CACEtD,SAA2B,IAAjBiY,EAAM3U,OAChBoF,KAAK,QACLxH,KAAK,UACLqX,MAAM,SACNpX,QAAS,WACP+W,EAAS,YAAID,EAAM5J,QAAO,SAAC5Q,GAAD,OAAOA,IAAMwa,EAAM3U,cANjD,KAUU,IACV,0BAAMrC,MAAO,CAAE6R,WAAY,IAA3B,0CAGJ,kBAAC,IAAKhS,KAAN,CAAWzC,KAAK,QACd,kBAAC,IAAD,CACE6F,YAAa,gHACbjD,MAAO,CAAEvB,MAAO,MAAO4Y,UAAW,SCxG/BE,GAAiB,WAAO,IAAD,EACJ7Y,qBADI,mBAC3BuW,EAD2B,KAClBC,EADkB,OAEnBzQ,IAAKC,UAAbC,EAF2B,oBAG5BjC,EAAWC,cAQXuC,EAAM,uCAAG,gCAAA7J,EAAA,sEACIsJ,EAAKiB,iBADT,OACTxK,EADS,OAEPuB,EAAKwF,OAAOqV,OAAOpc,GACnBsB,EAAMC,EAAGyQ,QAAO,SAAC5Q,GAAD,MAAoB,kBAANA,KACpCpB,EAAO,CAAE,eAAgBsB,EAAK,oBAAqBtB,EAAKqc,MACxD/U,EAASoI,GAAkB1P,IAC3BsH,EAAS6J,MACT5H,EAAK0E,cACL6L,GAAW,GARE,4CAAH,qDAgBNrK,EAAS,CACb,kBAAC,IAAD,CAAQzL,IAAI,OAAOc,QAAS,kBAAMgV,GAAW,KAA7C,oDAGA,kBAAC,IAAD,CAAQ9V,IAAI,SAASa,KAAK,UAAUC,QAASgF,GAA7C,2DAKF,OACE,oCACE,kBAAC,IAAD,CACEjF,KAAK,UACLC,QAlBoB,WACxBwC,EAASyJ,GAAW,IACpB+I,GAAW,IAiBPlV,MAAO,CAAE6D,aAAc,KAHzB,uHAOA,kBAAC,KAAD,CACEpE,MAAM,oNACNwV,QAASA,EACTK,SA3CW,WACf5S,EAAS6J,MACT5H,EAAK0E,cACL6L,GAAW,IAyCPzW,MAAO,MACP8W,OAAQ1K,GAER,kBAAC,IAAD,CAAMlG,KAAMA,GACV,kBAAC,GAAD,MACA,yBAAK3E,MAAO,CAAEvB,MAAO,OAAQ4R,YAAa,KACxC,kBAAC,GAAD,WCtDCqH,GAAoB,SAACxV,GAAW,IACnC+S,EAAsC/S,EAAtC+S,QAASC,EAA6BhT,EAA7BgT,WAAY/R,EAAiBjB,EAAjBiB,OAAQ/H,EAAS8G,EAAT9G,KADK,EAEhBsD,mBAAS,IAFO,mBAEnCiZ,EAFmC,KAE5BC,EAF4B,KAIpClV,EAAWC,cAyCjB,OAvCA7D,qBAAU,WAER,IAAMpC,EAAMyF,OAAOC,KAAKe,GACrBiK,QAAO,SAAChO,GAAD,MAAiC,yCAAxBA,EAAIyY,UAAU,EAAG,IAAmB1U,EAAO/D,MAC3D7C,KAAI,SAACC,GAAD,OAAO2G,EAAO3G,MAGjBI,EAAM,GACVF,EAAIG,SAAQ,SAACR,GACXjB,EAAKyB,SAAQ,SAACL,GACRA,EAAEH,KAAOA,IACXO,EAAG,sBAAOA,GAAP,CAAYJ,WAMrB,IAAIsb,EAAOlb,EAAIL,KAAI,SAACC,GAAD,MAAQ,CACzByD,KAAM,UACNwK,YAAajO,EAAEgO,WAAWC,gBAc5B,OAZAqN,EAAI,sBACCA,GADD,CAEF,CACE7X,KAAM,YACNwK,YAAatH,EAAOsH,eAIxBmN,EAAShb,GACT8F,EAASyJ,GAAW,IACpBzJ,EAAS2J,GAAoByL,IAEtB,WACLpV,EAASyJ,GAAW,IACpBzJ,EAAS6J,SAEV,IAGD,kBAAC,KAAD,CACE9M,MAAM,sEACNwV,QAASA,EACTxW,MAAO,MACP6W,SAAU,kBAAMJ,GAAW,IAC3BG,KAAM,kBAAMH,GAAW,IACvBK,OAAQ,CACN,kBAAC,IAAD,CAAQnW,IAAI,QAAQc,QAAS,kBAAMgV,GAAW,KAA9C,gDAKF,yBACElV,MAAO,CACLyB,QAAS,OAET0V,SAAU,OACV1Y,MAAO,MACPoC,OAAQ,SAGT8W,EAAMpb,KAAI,SAACC,EAAG2C,GAAJ,OACT,yBACEa,MAAO,CACLvB,MAAM,GAAD,OAAKkZ,EAAMtV,OAAS,EAAI,MAAQ,SAGvC,oEAAYlD,EAAQ,GACpB,kBAAC,GAAD,CAAaxC,GAAIH,SAIvB,yBAAKwD,MAAO,CAAEvB,MAAO,OAAQ4R,YAAa,KACxC,kBAAC,GAAD,SC3EK0H,GAAiB,WAAO,IAAD,EACoBhW,aACpD,SAACnE,GAAD,OAAWA,EAAMsQ,WADXzC,EAD0B,EAC1BA,WAAYQ,EADc,EACdA,cAAe7Q,EADD,EACCA,KAAMyQ,EADP,EACOA,SAGnCnJ,EAAWC,cAJiB,EAMJjE,oBAAS,GANL,mBAM3BuW,EAN2B,KAMlBC,EANkB,OAONxW,mBAAS,IAPH,mBAO3ByE,EAP2B,KAOnB4S,EAPmB,OAQErX,mBAAS,IARX,mBAQ3B+H,EAR2B,KAQfuP,EARe,OASFtX,qBATE,mBAS3BuX,EAT2B,KASjBC,EATiB,OAWnBzR,IAAKC,UAAbC,EAX2B,oBAalC7F,qBAAU,WACR,GAAI+M,GAAYoK,EAAU,CACxB,IAAIlQ,EAAOU,EAAWuG,MAAK,SAACxQ,GAAD,OAAOA,EAAEH,KAAOwP,KAC3CjQ,QAAQC,IAAI,yBACZqa,GAAY,SAACtY,GAAD,OAAWA,EAAMrB,KAAI,SAACC,GAAD,OAAQA,EAAEH,KAAOwP,EAAW9F,EAAOvJ,QACpEkG,EAASiK,GAAY,CAAEC,SAAS,QAEjC,CAACnG,EAAYoF,EAAUoK,IAE1B,IAAMnR,EAAU7F,mBAAQ,WACtB,ONgH0C,SAC5CiW,EACAa,EACA9J,EACAR,GAEA,IAAI7O,EAAM,GAEV,GAA6B,YAAzBqP,EAAc3O,OAAsB,CACtC,IAAI0Z,EAAQ,EACZ/K,EAAc7Q,KAAKyB,SAAQ,SAACL,GACtBA,EAAE,gBAAgB6F,OAAS2U,IAC7BA,EAAQxa,EAAE,gBAAgB6F,WAI9B,IAAK,IAAI7F,EAAI,EAAGA,EAAIwa,EAAOxa,IACzBI,EAAG,sBACEA,GADF,CAED,CACE6C,MAAM,wCAAD,OAAYjD,EAAI,GACrBwG,UAAU,wCAAD,OAAYxG,EAAI,GACzB4C,IAAI,wCAAD,OAAY5C,EAAI,GACnBiC,MAAO,MACPsG,MAAO,YAMf,IAAMiT,EAAO,CACX,CACEvY,MAAO,SACPuD,UAAW,SACX5D,IAAK,SACLX,MAAO,KACPsG,MAAO,SACP9C,OAAQ,SAACqP,EAAMnO,GACb,OACE,uBACEjD,QAAS,WACP6V,EAAU5S,GACV+R,GAAW,KAGZ5D,KAKT,CACE7R,MAAO,iCACPuD,UAAW,UACX5D,IAAK,UACLX,MAAO,OAET,CACEgB,MAAO,wFACPuD,UAAW,WACXvE,MAAO,MACPW,IAAK,WACL+W,QAAST,GAAuBjK,GAChC2K,SAAU,SAACpZ,EAAOmG,GAAR,OAAsD,IAAnCA,EAAO4J,SAASsJ,QAAQrZ,MAIzD,MAAM,GAAN,OAAWgb,EAAX,YAAoBpb,IMlLXqb,CACL/C,EACAa,EACA9J,EACAR,KAED,CAACyJ,EAAYa,EAAW9J,EAAeR,IAE1CxM,mBAAQ,WACN+W,ENZwC,SAAC5a,EAAM6Q,GACjD,IAAIxF,EAAa,GA+BjB,MA9B6B,YAAzBwF,EAAc3O,SAChBmJ,EAAawF,EAAc7Q,KAAKmB,KAAI,SAACC,EAAG2C,GACtC,IAAIxC,EAAK,CACP,SAAKwC,EAAQ,EACbC,IAAKD,EAAQ,EACbwX,QAAS,cACTlM,YAAajO,EAAE0b,aAAazN,aAY9B,OATAjO,EAAE,gBAAgBK,SAAQ,SAACR,EAAI+C,GAC7B,IAAI2G,EAAO3K,EAAK4R,MAAK,SAACxQ,GAAD,OAAOA,EAAEH,KAAOA,KACrCM,EAAE,eACGA,EADH,aAEAoQ,SAAUhH,EAAOA,EAAKgH,SAAW,IAFjC,+CAGW3N,EAAM,GAAM/C,OAIpBM,MAYJ8J,EMpBS0R,CAA6B/c,EAAM6Q,MAChD,CAAC7Q,EAAM6Q,IAqBV,OACE,kBAAC,IAAD,CAAMtH,KAAMA,GACV,kBAAC,IAAK9E,KAAN,CAAWzC,KAAM,UACf,kBAAC,IAAD,CACEoG,YAAU,EACVP,YAAa,6EACb2D,SAhBS,SAACuI,GAChB+G,EACEzP,EAAW2G,QACT,SAAC5Q,GAAD,OACEA,EAAEma,SACFna,EAAEma,QAAQC,cAAc7Z,SAASoS,EAAEgC,OAAOnU,MAAM4Z,oBAYhD5W,MAAO,CAAEvB,MAAO,QAGpB,kBAAC,IAAKoB,KAAN,CAAWzC,KAAK,SACd,kBAAC,GAAD,CACE0H,QAASA,EACT1J,KAAM6a,GAAsBxP,EAC5BsC,QAASiN,EACThQ,WAlCO,SAAC7C,GACdvH,QAAQC,IAAIsH,EAAQ,cAkCd8C,aA/BS,SAAC9C,GAEhBT,EAAS0I,GAAcjI,EAAO9G,MA8BxBwK,QAAkC,YAAzBoF,EAAc3O,UAG1B2X,GACC,kBAAC,IAAKpV,KAAN,CAAWzC,KAAK,SACd,kBAAC,GAAD,CACE6X,QAASA,EACTC,WAAYA,EACZ/R,OAAQA,EACR/H,KAAMA,OCzFLgd,GAAY,WACvB,IAAM1V,EAAWC,cAMjB,OAJA7D,qBAAU,WACR4D,EAAS4H,QACR,IAGD,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,QCXO+N,GAAU,WACrB,OAAO,kBAAC,GAAD,CAAM9H,KAAMA,MAGfA,GAAO,CACX,CACE9Q,MAAO,sEACPkR,MAAO,kBAAC,GAAD,OAET,CACElR,MAAO,0GACPkR,MAAO,kBAAC,GAAD,QCPL2H,I,cAAQC,YAAe,CAC3BC,QAAS,CACPtK,QAASuK,OAUEjQ,gBANC,kBACd,kBAAC,IAAD,CAAU8P,MAAOA,IACf,kBAAC,GAAD,UCjBEI,GAAaC,0BAEbC,GAAqB,SAAC,GAAkB,IAAhBlY,EAAe,EAAfA,SAAe,EACHhC,qBADG,mBACtCma,EADsC,KACvBC,EADuB,OAEepa,qBAFf,mBAEtCqa,EAFsC,KAEdC,EAFc,OAGGta,qBAHH,mBAGtCua,EAHsC,KAGpBC,EAHoB,OAILxa,mBAAS,MAJJ,mBAItCya,EAJsC,KAIxBC,EAJwB,OAKT1a,mBAAS,IALA,mBAKtC2a,EALsC,KAK1BC,EAL0B,OAMT5a,qBANS,mBAMtC6a,EANsC,KAM1BC,EAN0B,OAOa9a,mBAAS,CAC/DmI,SAAS,IARgC,mBAOtC4S,EAPsC,KAOfC,EAPe,OAUmBhb,mBAAS,CACrEmI,SAAS,IAXgC,mBAUtC8S,EAVsC,KAUZC,EAVY,OAaWlb,mBAAS,CAC7DmI,SAAS,IAdgC,mBAatCgT,EAbsC,KAahBC,EAbgB,OAmBvCpb,mBAAS,CACXmI,SAAS,IApBgC,mBAiBzCkT,EAjByC,KAkBzCC,EAlByC,OAsBDtb,qBAtBC,mBAsBtCub,EAtBsC,KAsBtBC,EAtBsB,KAwB3C,OACE,kBAACxB,GAAWyB,SAAZ,CACEnd,MAAO,CACL6b,gBACAC,mBACAK,eACAC,kBACAC,aACAC,gBACAc,oBACAb,aACAC,gBACAC,wBACAC,2BACAG,uBACAC,0BACAC,+BACAC,kCACAL,2BACAC,8BACAb,yBACAC,4BACAC,mBACAC,sBACAe,iBACAC,sBAGDxZ,IAOD0Z,GAAmB,CACvB,iCACA,oJACA,8IACA,oGACA,gHACA,gHACA,+DCpEWC,GAAM,uCAAG,WAAOje,GAAP,SAAAf,EAAA,sEAAqBC,IAAMc,GAA3B,mFAAH,sDAENke,GAAO,uCAAG,WAAOle,EAAKhB,GAAZ,SAAAC,EAAA,sEAA2BC,IAAM2B,KAAKb,EAAKhB,GAA3C,mFAAH,wDAEPmf,GAAM,uCAAG,WAAOne,EAAKhB,GAAZ,SAAAC,EAAA,sEAA2BC,IAAM4P,IAAI9O,EAAKhB,GAA1C,mFAAH,wDAENof,GAAS,uCAAG,WAAOpe,GAAP,SAAAf,EAAA,sEAAqBC,IAAM6P,OAAO/O,GAAlC,mFAAH,sDCLTqe,GAAc,SAAC,GASrB,IARLxR,EAQI,EARJA,UACAyR,EAOI,EAPJA,MACAC,EAMI,EANJA,MACAC,EAKI,EALJA,MAKI,IAJJ5a,aAII,MAJI,CACNa,OAAQ,OAGN,MADJyQ,YACI,YACEuJ,EAAc,kBAAM5R,KA2C1B,OA1CkB,SAAC0R,EAAOD,EAAOE,GAC/B,OAAID,EAEA,kBAAC,IAAD,CACE1a,KAAK,UACLC,QAAS2a,EACT7a,MAAOA,EACPN,UAAU,oBACVD,MAAOkb,GAENrJ,GAKHoJ,EAEA,kBAAC,IAAD,CACEza,KAAK,UACLC,QAAS2a,EACT7a,MAAOA,EACPN,UAAU,oBACVD,MAAOib,GAENpJ,GAIHsJ,EAEA,kBAAC,IAAD,CACE3a,KAAK,UACLC,QAAS2a,EACT7a,MAAOA,EACPN,UAAU,oBACVD,MAAOmb,GAENtJ,QATP,EAcKwJ,CAAUH,EAAOD,EAAOE,I,UCrDpBG,GAAY,SAAC7Y,GAAW,IAC3BzC,EAAUyC,EAAVzC,MAER,OACE,kBAAC,KAAD,CACEA,MAAOA,EACP+G,UAAU,EACVxG,MAAO,CAAEvB,MAAO,QAChBiB,UAAU,mBAGTwC,EAAMxB,WCHAsa,I,OAAiB,SAAC,GAA4B,IAUrDlW,EAV2BmW,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,WAAiB,EAChCxc,oBAAS,GADuB,mBACjDyc,EADiD,KAC3CC,EAD2C,OASpDC,qBAAW3C,IALb0B,EAJsD,EAItDA,iBACAF,EALsD,EAKtDA,kBACAT,EANsD,EAMtDA,sBACAI,EAPsD,EAOtDA,qBACAC,EARsD,EAQtDA,wBAGIrT,EAAa,GAEnB3H,qBAAU,WACRub,GAAO,0CAA0C7e,MAAK,SAACC,GACrDqe,EAAwB,CACtBjT,SAAS,EACTzL,KAAMK,EAAIL,YAGb,IAEH,IAAIkgB,EAAK,sBAAOlB,GAAP,CAAyB,gDAClCkB,EAAQA,EAAMlO,QAAO,SAAChQ,GAAD,OACnB8d,EAAsB,mCAAT9d,EAA4B,gEAATA,MAE5Bme,OAGN,IAAInO,EAAS,GACToO,EAAc,GAClB,IAAK/B,EAAsB5S,QAAS,CAAC,IAAD,EAClC4S,EAAsBre,KAAKmB,KAAI,SAACwJ,GAM9B,GALAqH,EAAM,eACDA,EADC,eAEHrH,EAAK3I,KAAO2I,EAAKjC,QAAQvH,KAAI,SAACkf,GAAD,OAAYA,EAAOre,UAIhD8d,EAAmD,gEAAdnV,EAAK3I,KAAf,mCAAd2I,EAAK3I,KACnB,CAAC,IAAD,EACMR,EAAMmJ,EAAKjC,QAAQvH,KAAI,SAACC,GAAD,OAAOA,EAAEsH,QAAQvH,KAAI,SAACgY,GAAD,OAAQA,EAAGnX,WAC7DgQ,EAAM,eAAQA,EAAR,CAAgBsO,8CAAS,MAAGC,OAAH,oBAAa/e,MAG9C4e,EAAW,eACNA,EADM,eAERzV,EAAK3I,KAAO2I,EAAKjC,QAAQvH,KAAI,SAACkf,GAC7B,MAAO,CACLhc,MAAOgc,EAAOre,KACdJ,MAAOye,EAAOre,KACdf,GAAIof,EAAOpf,GACXqE,SAAU,YAMlB,IAAMkb,EAAMnC,EAAsBre,KAAK4R,MAAK,SAACjH,GAAD,OAC1CmV,EAA2B,gEAAdnV,EAAK3I,KAA0C,mCAAd2I,EAAK3I,QAGrDoe,EAAW,eACNA,EADM,CAETE,8CAAS,MAAGC,OAAH,oBACJC,EAAI9X,QAAQvH,KAAI,SAAC2W,GAAD,OACjBA,EAAGpP,QAAQvH,KAAI,SAACyW,GAAD,MAAQ,CACrBvT,MAAOuT,EAAE5V,KACTJ,MAAOgW,EAAE5V,KACTf,GAAI2W,EAAE3W,GACNqE,SAAU,eAQpBoE,EAAO,CACL,CACErF,MAAO,yDACPuD,UAAW,yDACXvE,MAAO,IACP2H,UAAU,EACVnE,OAAQ,SAACqP,EAAMnO,GAAP,OACN8X,EACE,uBACE/a,QAAS,WACPkb,GAAQ,GACRlB,EAAkB,CAChB9c,KAAM+F,EAAO/D,IACb/C,GAAI8G,EAAO9G,OAIdiV,GAGHA,GAEJiF,OAAQ,SAAClb,EAAGmb,GAAJ,OCzGQ,SAACnb,EAAGmb,GACxB,OAAInb,IAAMmb,EACD,EAGLnb,EAAImb,EACC,GAGD,EDgGcqF,CAAOxgB,EAAEygB,uDAAWtF,EAAEsF,yDACxCrF,eAAgB,CAAC,YAvBd,mBAyBF6E,EAAM/e,KAAI,SAACa,GACZ,ICjHgCuU,EDiH1BsE,EACJ7I,EAAOhQ,IACPgQ,EAAOhQ,GAAMb,KAAI,SAACwf,GAAD,MAAkB,CACjCzK,KAAMyK,EACN/e,MAAO+e,MAGX,MAAO,CACLtc,OCzH8BkS,ED0HnB,gEAATvU,EAA4B,iCAAUA,ECzHvCuU,EAAOqK,OAAO,GAAGlS,cAAgB6H,EAAOsK,MAAM,ID2H/CjZ,UAAW5F,EACXgJ,UAAU,EACV3H,MAAO,IACPrD,KAAMogB,EAAYpe,GAClB+Y,QAASF,EACThW,KAAM,SACNmW,SAAU,SAACpZ,EAAOmG,GAAR,OAAmBA,EAAO/F,KAAUJ,SAK/C6c,EAAqBhT,WACZqU,EACRrB,EAAqBze,KAAKgS,QACxB,SAACrH,GAAD,OACEA,EAAKmW,aAAaC,oBAAiC,2DAA1BpW,EAAKmW,aAAaC,sBAE/CtC,EAAqBze,KAAKgS,QACxB,SAACrH,GAAD,OACEA,EAAKmW,aAAaC,oBAAiC,2DAA1BpW,EAAKmW,aAAaC,uBAG/C5f,KAAI,SAAC6f,GACP,IAAIzf,EAAK,CACPN,GAAI+f,EAAU/f,GACd+C,IAAKgd,EAAUhf,KACf0e,yDAAWM,EAAUhf,OCxJA,SAACwe,GAAD,OAASzZ,OAAOC,KAAKwZ,GAAKrf,KAAI,SAAC6C,GAAD,OAASA,MD0J9Did,CAAcD,EAAUF,cAAc3f,KAAI,SAAC+f,GACzC3f,EAAE,eACGA,EADH,eAEC2f,EAAkBF,EAAUF,aAAaI,QAG9C7V,EAAWqN,KAAKnX,MAIpB,IAAM4f,EAAI,uCAAG,WAAOpZ,EAAQwB,EAAME,GAArB,qBAAAxJ,EAAA,sEAEHmhB,EAAY,CAChBpf,KAAM+F,EAAO,0DACb+Y,aAAc,CAAChB,EAAa,IAAM,MAEhCxe,EAAM,GAND,SAOSiI,EAAKiB,iBAPd,OAOH9I,EAPG,OASHF,EAAMuF,OAAOC,KAAKtF,GAAKP,KAAI,SAAC6C,GAAD,MAAU,CACzChC,KAAMgC,EACNpC,MAAOF,EAAIsC,OAEQxC,EAAIwQ,QACvB,SAACrH,GAAD,YAAyBgO,IAAfhO,EAAK/I,OAAqC,2DAAd+I,EAAK3I,QAGhCb,KAAI,SAACwJ,GAChB,GAAkB,+CAAdA,EAAK3I,KAAoB,CAC3B,IAAMA,EAAO8d,EAAa,8DAAmB,iCAKvClI,EAJKyG,EAAsBre,KAAK4R,MAAK,SAACxQ,GAAD,OAAOA,EAAEY,OAASA,KAC9C0G,QAAQkJ,MAAK,SAACxQ,GAAD,OAC1BA,EAAEsH,QAAQkJ,MAAK,SAACuH,GAAD,OAAQA,EAAGnX,OAAS2I,EAAK/I,YAE5B8G,QAAQkJ,MAAK,SAACxQ,GAAD,OAAOA,EAAEY,OAAS2I,EAAK/I,SAClDN,EAAG,sBAAOA,GAAP,CAAYsW,EAAE3W,SACZ,CACL,IAGMogB,EAHKhD,EAAsBre,KAAK4R,MACpC,SAACxQ,GAAD,OAAOA,EAAEY,OAAS2I,EAAK3I,QAEV0G,QAAQkJ,MAAK,SAACxQ,GAAD,OAAOA,EAAEY,OAAS2I,EAAK/I,SACnDN,EAAG,sBAAOA,GAAP,CAAY+f,EAAIpgB,SAIvBmgB,EAAUN,aAAV,sBAA6BM,EAAUN,cAAvC,YAAwDxf,IACxD6d,GAAO,0CAAD,OAA2CpX,EAAO9G,IAAMmgB,GAC3DhhB,MAAK,SAACC,GAAD,OACJ4e,GAAO,0CAA0C7e,MAAK,SAACC,GACrDqe,EAAwB,CACtBjT,SAAS,EACTzL,KAAMK,EAAIL,aAIfM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAE9BgJ,EAAK0E,cACLxE,EAAc,IAhDL,kDAkDTjJ,QAAQC,IAAI,mBAAZ,MAlDS,0DAAH,0DAsDV,OACE,oCACE,kBAAC,GAAD,CAAOsf,KAAMA,EAAMC,QAASA,EAAS1b,UAAU,yBAC/C,kBAAC,GAAD,CACEsY,KAAMlT,EACN1J,KAAMqL,EACNI,QAASgT,EAAqBhT,QAC9BzK,IAAK,yCACLsgB,eAAgB5C,EAChByC,KAAMA,EACNtB,OAAQA,OEjOH0B,GAAa,SAAC,GAMpB,IAAD,IALJ1Z,mBAKI,MALU,4EAKV,MAJJ2Z,oBAII,MAJW,GAIX,MAHJtY,gBAGI,SADJuY,EACI,EADJA,QAEA,OACE,kBAAC,IAAD,CACE5Z,YAAaA,EACb2Z,aAAcA,EACdtY,SAAUA,EACVd,YAAU,EACVgL,IAAKqO,EACLnd,UAAU,sBCdHod,GAAY,SAAC5a,GACxB,OACE,kBAAC,KAAD,CACE6a,iBAAiB,IACjBC,YAAa9a,EAAM+a,UAAY,OAC/Bvd,UAAWwC,EAAMgb,WAAa,wBAE7Bhb,EAAMxB,W,UCDAyc,GAAc,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACb1e,mBAAS,CAAE2e,KAAM,KAAMrgB,MAAO,OADjB,mBAChCY,EADgC,KACzBiB,EADyB,OAGXH,mBAAS,CAAE4e,OAAO,IAHP,mBAGhChgB,EAHgC,KAGxBigB,EAHwB,OAMiBlC,qBAAW3C,IAA3DuB,EAN+B,EAM/BA,eAAgBL,EANe,EAMfA,4BANe,EAQxBnV,IAAKC,UAAbC,EARgC,oBAwFvC,OACE,kBAAC,IAAD,CAAMA,KAAMA,EAAMjF,UAAU,2BAC1B,kBAAC,IAAKG,KAAN,CAAWH,UAAU,0BACnB,kBAAC,IAAD,KACE,kBAAC,IAAKG,KAAN,CAAWzC,KAAK,mBAAmBsC,UAAU,0BAC3C,kBAAC,IAAD,KACE,kBAAC,KAAD,CACEkH,SAAU,SAACyW,EAAMG,GAAP,OACR3e,GAAS,SAACjB,GAAD,sBACJA,EADI,CAEPyf,KAAM,CAAEI,KAAMD,SAGlBnM,OAAO,OACP7N,YAAY,EACZP,YAAa,qBACbya,OAAQA,KAEV,kBAAC,GAAD,CACEza,YAAa,iCACb7H,KAAMuiB,GACN3d,MAAO,CAAEvB,MAAO,IAAKmf,WAAY,OAAQ/T,MAAO,QAChDgU,SAAU,SAACxhB,GAAD,OACRwC,GAAS,SAACjB,GAAD,sBACJA,EADI,CAEPyf,KAAK,eAAMzf,EAAMyf,KAAb,CAAmBM,MAAOthB,cAMxC,kBAAC,IAAKwD,KAAN,CAAWzC,KAAK,gBACd,kBAAC,KAAD,CACEwJ,SAAU,SAAC5J,GAAD,OAAW6B,GAAS,SAACjB,GAAD,sBAAiBA,EAAjB,CAAwBZ,cACtDiG,YAAama,KAGjB,kBAAC,IAAD,CAAQnd,KAAK,UAAUC,QAnHV,WACnB,GAAItC,EAAMyf,MAAQzf,EAAMZ,MAAO,CAC7B,IAAML,EAAK,CACT0gB,KAAMzf,EAAMyf,KAAKM,MAAX,UACC/f,EAAMyf,KAAKI,KADZ,YACoB7f,EAAMyf,KAAKM,MAD/B,iBAEC/f,EAAMyf,KAAKI,KAFZ,UAGN,eAAgB,GAChBK,KAAe,6BAATV,EAAkBxf,EAAMZ,MAAQ,KACtC+gB,QAAkB,6BAATX,EAAkBxf,EAAMZ,MAAQ,MAG3C6B,EAAS,CAAEwe,KAAM,KAAMrgB,MAAO,OAE9Bsd,GAAQ,0CAAD,OACqCL,EAAe5d,GADpD,YAELM,GAECnB,MAAK,SAACC,GACL8hB,EAAU,CACRD,OAAO,EACP/Y,QAAS,6CACTyZ,YAAa,iMACb/d,KAAM,YAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,MAGFjD,GAAO,0CAAD,OACsCJ,EAAe5d,GADrD,aAEJb,MAAK,SAAUC,GACfme,EAA4B,CAC1Bxe,KAAMK,EAAIL,KACVyL,SAAS,UAIdnL,OAAM,SAACC,GACN4hB,EAAU,CACRD,OAAO,EACP/Y,QAAS,uCACTyZ,YAAa,gLACb/d,KAAM,UAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,SAIN3Y,EAAK0E,mBAELkU,EAAU,CACRD,OAAO,EACP/Y,QAAS,uCACTyZ,YAAa,8RACb/d,KAAM,UAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,QA0CE,OAKHhgB,EAAOggB,OACN,kBAAC,KAAD,CACE/Y,QAASjH,EAAOiH,QAChByZ,YAAa1gB,EAAO0gB,YACpB/d,KAAM3C,EAAO2C,KACb0D,UAAQ,EACRC,QAnIa,kBAAM2Z,EAAU,CAAED,OAAO,KAoItCtd,MAAO,CAAEa,OAAQ,QAOrB6c,GAAS,CACbQ,KAAM,CACJR,OAAQ,KACRza,YAAa,sEACbkb,MAAO,6CACPC,IAAK,uCACLC,GAAI,eACJC,MAAO,mDACPX,MAAO,iCACPF,KAAM,qBACNc,WAAY,OACZC,WAAY,WACZC,UAAW,IACXC,eAAgB,oBAChBC,YAAa,OACbC,iBAAiB,GAEnBC,iBAAkB,CAChB5b,YAAa,6EAEfub,WAAY,aACZE,eAAgB,sBAChBI,WAAY,UACZH,YAAa,WAGThB,GAAQ,CACZ,CAAEthB,GAAI,KAAMoD,MAAO,uCAAUzC,MAAO,uCAAU0D,SAAU,IACxD,CAAErE,GAAI,KAAMoD,MAAO,6CAAWzC,MAAO,6CAAW0D,SAAU,IAC1D,CAAErE,GAAI,KAAMoD,MAAO,2BAAQzC,MAAO,2BAAQ0D,SAAU,IACpD,CAAErE,GAAI,KAAMoD,MAAO,uCAAUzC,MAAO,uCAAU0D,SAAU,IACxD,CAAErE,GAAI,KAAMoD,MAAO,qBAAOzC,MAAO,qBAAO0D,SAAU,IAClD,CAAErE,GAAI,KAAMoD,MAAO,2BAAQzC,MAAO,2BAAQ0D,SAAU,IACpD,CAAErE,GAAI,KAAMoD,MAAO,2BAAQzC,MAAO,2BAAQ0D,SAAU,IACpD,CAAErE,GAAI,KAAMoD,MAAO,uCAAUzC,MAAO,uCAAU0D,SAAU,IACxD,CACErE,GAAI,KACJoD,MAAO,mDACPzC,MAAO,mDACP0D,SAAU,IAEZ,CACErE,GAAI,KACJoD,MAAO,6CACPzC,MAAO,6CACP0D,SAAU,IAEZ,CAAErE,GAAI,KAAMoD,MAAO,uCAAUzC,MAAO,uCAAU0D,SAAU,IACxD,CACErE,GAAI,KACJoD,MAAO,6CACPzC,MAAO,6CACP0D,SAAU,KCxMDqe,GAAqB,SAAC,GAA0B,IAAxB3B,EAAuB,EAAvBA,KAAuB,KAAjBlC,WAKrCG,qBAAW3C,KAHbiB,EAFwD,EAExDA,yBACAC,EAHwD,EAGxDA,4BACAK,EAJwD,EAIxDA,eAGInV,EAAU,CACd,CACErF,MAAO,2BACPuD,UAAW,OACX5D,IAAK,OACL6C,OAAQ,SAACqP,GAAD,OAAU,2BAAIA,KAExB,CACE7R,MAAO2d,EACPpa,UAAWoa,EACXhe,IAAKge,EACLnd,KAAM,SACNmG,UAAU,GAEZ,CACE3G,MAAO,kFACPuD,UAAW,OACX5D,IAAK,QAEP,CACEK,MAAO,+DACPL,IAAK,UACLgH,UAAU,EACVpD,UAAW,YAIXyD,GACDkT,EAAyB9S,SAC1B8S,EAAyBve,KAAKmB,KAAI,SAACwJ,EAAM5G,GACvC,IAAMke,EAAOtX,EAAK,aAAaiZ,OAAO,EAAGjZ,EAAK,aAAasQ,QAAQ,MAC7DoH,EAAO1X,EAAKsX,KAAK2B,OAAO,EAAG,GAEjC,MAAgB,6BAAT5B,EACHrX,EAAKgY,SAAW,CACd3e,IAAKD,EACL9C,GAAI0J,EAAK1J,GACTohB,OACAwB,2BAAMlZ,EAAKgY,QACXV,OACA6B,QAASnZ,EAAK,iBAEhBA,EAAK+X,MAAQ,CACX1e,IAAKD,EACL9C,GAAI0J,EAAK1J,GACTohB,OACA0B,2BAAMpZ,EAAK+X,KACXT,OACA6B,QAASnZ,EAAK,oBAIxBU,EACEA,GAAcA,EAAW2G,QAAO,SAACzQ,GAAD,YAAeoX,IAAPpX,GAA2B,OAAPA,KAE9D,IAOM4f,EAAI,uCAAG,WAAOpZ,EAAQwB,EAAME,GAArB,mBAAAxJ,EAAA,+EAESsJ,EAAKiB,iBAFd,OAEH9I,EAFG,OAGHH,EAAKgd,EAAyBve,KAAK4R,MACvC,SAACjH,GAAD,OAAUA,EAAK1J,KAAO8G,EAAO9G,MAGzBmgB,EAAY,CAChBa,KAAK,GAAD,OAAKla,EAAOsa,KAAZ,OACJ,eAAgB3gB,EAAIoiB,QACpBpB,KAAMhhB,EAAIqiB,yBAAOriB,EAAIqiB,yBAAOxiB,EAAGmhB,KAC/BC,QAASjhB,EAAImiB,yBAAOniB,EAAImiB,yBAAOtiB,EAAGohB,SAGpCxD,GAAO,uCAAD,OAAwCpX,EAAO9G,IAAMmgB,GACxDhhB,MAAK,SAACC,GAAD,OACJ4e,GAAO,0CAAD,OACsCJ,EAAe5d,GADrD,aAEJb,MAAK,SAAUC,GACfme,EAA4B,CAC1Bxe,KAAMK,EAAIL,KACVyL,SAAS,UAIdnL,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAE9BkJ,EAAc,IA3BL,kDA6BTjJ,QAAQC,IAAI,mBAAZ,MA7BS,0DAAH,0DAiCV,OACE,kBAAC,GAAD,CACEmc,KAAMlT,EACN1J,KAAMqL,EACNI,QAAS8S,EAAyB9S,QAClCzK,IAAK,sCACLsgB,eAAgB9C,EAChBwF,KAAI,iDAA4CnF,EAAe5d,GAA3D,YACJkgB,KAAMA,EACNhX,KAjDS,SAACpC,EAAQwB,EAAME,GAC1BF,EAAKgB,eAAL,eACKxC,IAEL0B,EAAc1B,EAAO/D,SClEZigB,GAAgB,SAAC,GAA0B,IAAxBjC,EAAuB,EAAvBA,KAAMlC,EAAiB,EAAjBA,WACpC,OACE,yBAAKxb,UAAU,qBACb,kBAAC,GAAD,CAAa0d,KAAMA,IACnB,kBAAC,GAAD,CAAOA,KAAMA,EAAMlC,WAAYA,MCDxBoE,GAAa,SAAC,GAAuB,IAArBnE,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAAc,EACSC,qBAAW3C,IAA3DuB,EADuC,EACvCA,eAAgBL,EADuB,EACvBA,4BAExB9a,qBAAU,WAaR,OAZImb,GACFI,GAAO,0CAAD,OACsCJ,EAAe5d,GADrD,aAEJb,MAAK,SAACC,GAAD,OACLme,GAA4B,SAAChc,GAAD,sBACvBA,EADuB,CAE1BxC,KAAMK,EAAIL,KACVyL,SAAS,UAKR,kBAAM+S,EAA4B,CAAE/S,SAAS,OACnD,CAACoT,EAAgBL,IAjB2B,IAmBvCpJ,EAAYC,KAAZD,QAEF+O,EAAmB,WACvBnE,GAAQ,IAGV,OACE,kBAAC,KAAD,CACE3b,MAAOwa,GAAkBA,EAAe7c,KACxC6X,QAASkG,EACT1c,MAAO,OACP4W,KAAMkK,EACNjK,SAAUiK,EACV7f,UAAU,oBAEV,kBAAC,GAAD,CAAWud,SAAU,OACnB,kBAACzM,EAAD,CAASE,IAAK,2BAAQtR,IAAI,KACxB,kBAAC,GAAD,CAAege,KAAM,8BAEvB,kBAAC5M,EAAD,CAASE,IAAK,2BAAQtR,IAAI,KACxB,kBAAC,GAAD,CAAege,KAAM,iCC3ClBoC,GAAc,SAAC,GAAmB,EAAjBxf,MAAiB,EAAVwO,IAAW,IACxCqO,EAAUpO,mBACR+K,EAAkB6B,qBAAW3C,IAA7Bc,cAIR,OACE,kBAAC,IAAD,CACEvW,YAAY,oGACZ2Z,aAAa,GACbpO,IAAKqO,EACLrZ,YAAU,EACVoD,SARiB,kBAAM4S,EAAcqD,EAAQlR,QAAQ8T,MAAMziB,QAU3D0C,UAAU,uB,UCdHggB,GAAc,SAAC,GAOrB,IANLtkB,EAMI,EANJA,KAMI,IALJ6H,mBAKI,MALU,0GAKV,MAJJjD,aAII,MAJI,CAAEa,OAAQ,EAAGgR,WAAY,EAAGjR,YAAa,GAI7C,EAHJid,EAGI,EAHJA,SACAjB,EAEI,EAFJA,aAEI,EAKAvB,qBAAW3C,IAHbM,EAFE,EAEFA,0BACAE,EAHE,EAGFA,oBACAkB,EAJE,EAIFA,iBAGIuF,EAA6B,SAAC3iB,GAAD,OAAWgc,EAA0Bhc,IAClE4iB,EAAyB,SAAC5iB,GAC9B,IAAM6iB,EAAiBzkB,EAAK4R,MAAK,SAACjH,GAAD,OAAUA,EAAK/I,QAAUA,KAC1Dkc,EAAoBlc,GACpB6gB,GAAYgC,GAAkBhC,EAASgC,EAAexjB,KAGlDyjB,EAAc,SAAC1kB,GAAD,OAClBA,EAAKmB,KAAI,SAACa,GAAD,MAAW,CAClBqC,MAAOrC,EACPJ,MAAOI,EACPsD,SAAU,QAwBd,OAAO,oCApBLtF,EACE,kBAAC,KAAD,CACE4E,MAAOA,EACPwD,YAAU,EACVP,YAAaA,EACb8c,SAAU3kB,EACVwL,SAAUgZ,EACVlgB,UAAU,oBACVkd,aAAcA,IAGhB,kBAAC,KAAD,CACE3Z,YAAaA,EACb2D,SAAU+Y,EACV3f,MAAOA,EACP+f,SAAUD,EAAY1F,GACtB1a,UAAU,wBC7CLoD,GAAe,SAAC,GAStB,IARL1H,EAQI,EARJA,KACA2H,EAOI,EAPJA,QACAC,EAMI,EANJA,UAEAE,GAII,EALJzD,MAKI,EAJJyD,WAEAxC,GAEI,EAHJyC,OAGI,EAFJzC,UACG0C,EACC,sFAwBEG,EAvBa,SAACtD,GAClB,OAAQA,GACN,IAAK,SACH,OACE,kBAAC,IAAD,CAAQgD,YAAY,8FAAmBO,YAAU,GAC9CpI,GACCA,EAAKmB,KAAI,SAACwJ,GAAD,OACP,kBAAC,IAAO1C,OAAR,CACEjE,IAAG,UAAK2G,EAAKtG,MAAV,YAAmBsG,EAAK1J,IAC3BW,MAAO+I,EAAKtG,OAEXsG,EAAKtG,WAKlB,IAAK,SACH,OAAO,kBAAC,KAAD,CAAaC,UAAU,qBAChC,QACE,OAAO,kBAAC,IAAD,CAAOA,UAAU,sBAIZ0E,CAAWlB,GAE7B,OACE,wCAAQE,EAAR,CAAmB1D,UAAU,wBAC1BqD,EACC,kBAAC,IAAKlD,KAAN,CACEzC,KAAM4F,EACNhD,MAAO,CACLa,OAAQ,GAEVwD,MACgB,WAAdnB,GACc,SAAdA,GACc,WAAdA,GAA0B,CACxB,CACEoB,UAAU,EACVC,QAAQ,sKAKbhB,GAGH7C,IChDKsf,GAAa,SAAC,GASpB,IARLhI,EAQI,EARJA,KACA5c,EAOI,EAPJA,KACAyL,EAMI,EANJA,QACAzK,EAKI,EALJA,IACAgjB,EAII,EAJJA,KACA1C,EAGI,EAHJA,eACAH,EAEI,EAFJA,KACAtB,EACI,EADJA,OAEQ1B,EAAe8B,qBAAW3C,IAA1Ba,WADJ,EAE4B7a,qBAF5B,mBAEGuX,EAFH,KAEaC,EAFb,OAGgCxX,mBAAS,IAHzC,mBAGGkG,EAHH,KAGeC,EAHf,OAKWJ,IAAKC,UAAbC,EALH,oBAOJ7F,qBAAU,WACJ1D,GAAQme,GACVrD,EACE9a,EAAKgS,QAAO,SAACrH,GACX,IAAI0W,EACF1W,EAAKrF,UACLqF,EAAKrF,SAASuf,MAAK,SAACtjB,GAIlB,OAHuBA,EAAGyC,IACvBwX,cACA7Z,SAASwc,EAAW3C,kBAIrBsJ,EAAWna,EAAK3G,IACnBwX,cACA7Z,SAASwc,EAAW3C,eACvB,OAAO6F,GAAYyD,QAIxB,CAAC9kB,EAAMme,IAEV,IAAMtU,EAAY,SAAC9B,GAAD,OAAYA,EAAO/D,MAAQwF,GASvCS,EAAS,WACbR,EAAc,KAGVjI,EAAMqe,EACRjD,EADc,sBAGTA,GAHS,CAIZ,CACEvY,MAAO,mDACPuD,UAAW,GACX5D,IAAK,IACL6C,OAAQ,SAAC+C,EAAG7B,GAEV,OADiB8B,EAAU9B,GAEzB,8BACE,uBACEjD,QAAS,kBAAMqc,EAAKpZ,EAAQwB,EAAME,IAClC7E,MAAO,CACLY,YAAa,IAGf,kBAACuE,GAAA,EAAD,CACEzF,UAAU,sBACVD,MAAM,4DAGV,kBAAC,IAAD,CACEA,MAAM,qNACN2F,UAAWC,GAEX,kBAACC,GAAA,EAAD,CACE5F,UAAU,sBACVD,MAAM,uDAKZ,kBAAC,IAAD,KACE,uBACEV,SAAyB,KAAf6F,EACV1E,QAAS,kBAhDZ,SAACiD,EAAQwB,EAAME,GAC1BF,EAAKgB,eAAL,eACKxC,IAEL0B,EAAc1B,EAAO/D,KA4CQmG,CAAKpC,EAAQwB,EAAME,KAElC,kBAACW,GAAA,EAAD,CACE9F,UAAU,sBACVD,MAAM,oFAGV,kBAAC,IAAD,CACEA,MAAM,mMACN2F,UAAW,kBAAMa,EAAa9C,EAAO9G,MAErC,kBAACqJ,GAAA,EAAD,CACEhG,UAAU,sBACVD,MAAM,qDASxBuY,EAAyB,0FAAlBA,EAAK,GAAGvY,MAA8BuY,EAAOpb,EAEpD,IAAMqJ,EAAe,SAAC5J,GACpBme,GAAU,GAAD,OAAIpe,EAAJ,YAAWC,IAAMb,MAAK,SAACC,GAAD,OAC7B4e,GAAO+E,GAAchjB,GAClBZ,MAAK,SAACC,GAAD,OACJihB,EAAe,CACb7V,SAAS,EACTzL,KAAMK,EAAIL,UAGbM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,UAI5BuK,EAAgB8R,EAAKzb,KAAI,SAAC4J,EAAKhH,GACnC,OAAKgH,EAAIC,SAIF,eACFD,EADL,CAEEE,OAAQ,SAAClD,GACP,MAAO,CACLA,SACAgd,aAAcha,EAAIga,aAClBjd,UAAWiD,EAAIlG,KACf+C,UAAWmD,EAAInD,UACfvD,MAAO0G,EAAI1G,MACXrE,KAAM+K,EAAI/K,KACV2H,QAASkC,EAAU9B,GACnB0a,SAAU1X,EAAI0X,aAdX1X,KAoBX,OACE,kBAAC,IAAD,CAAMxB,KAAMA,EAAM9C,WAAW,GAC3B,kBAAC,IAAD,CACEyE,WAAY,CACVhF,KAAM,CACJiF,KAAMzD,KAGV4a,OAAQ,CACN0C,YAAa,sEACbC,cAAe,eACfC,YAAa,mDACbC,gBAAiB,sEACjBC,UAAW,yIACXC,aAAc,sBACdC,aAAc,gEACdC,UAAW,qEACXC,OAAQ,aACRC,SAAU,eACVC,YAAa,mIACbC,WAAY,qJACZC,WAAY,iHAEdlc,QAASoB,EACTO,WAAY8S,EAAatD,EAAW7a,EACpCyL,QAASA,EACTF,WAAY,CACVsa,gBAAiB,CAAC,KAAM,KAAM,KAAM,MACpCC,iBAAiB,EACjBxD,OAAQ,CAAEyD,eAAgB,IAC1Bva,SAAUvB,GAEZ3F,UAAU,uBC3LL0hB,GAAkB,WAAO,IAMhCtc,EAN+B,EAK/BuW,qBAAW3C,IAHbK,EAFiC,EAEjCA,uBACAU,EAHiC,EAGjCA,sBACAC,EAJiC,EAIjCA,yBAGEte,EAAO,GAoBX,GAlBA0J,EAAUiU,EACN,CACE,CACEtZ,MAAO,2EACPuD,UAAW+V,EACX3S,UAAU,EACV3H,MAAO,QAGX,CACE,CACEgB,MAAO,2EACPuD,UAAW,MACXvE,MAAO,MACPiD,QAAS,UAIZ+X,EAAsB5S,QAAS,CAAC,IAAD,EAC5BjK,EAAM6c,EAAsBre,KAAKgS,QAAO,SAACrH,GAAD,MAAwB,uBAAdA,EAAK3I,QAEvDqf,EAAM7f,EAAIoQ,MAAK,SAACjH,GAAD,OAAUA,EAAK3I,OAAS2b,KAE7C3d,EAAO2d,EACH0D,EAAI3Y,QAAQvH,KAAI,SAACwJ,GAAD,aACdA,EAAKjC,QAAQzB,OAAS,GAAtB,GAEMjD,IAAK2G,EAAK3I,KACVf,GAAI0J,EAAK1J,GACTglB,IAAKtb,EAAKsb,IACV,YAAa5E,EAAIpgB,IALvB,cAMO0J,EAAKsb,IAAMtb,EAAK3I,MANvB,yBAOgB2I,EAAKjC,QAAQvH,KAAI,SAACI,GAAD,gBACzByC,IAAKzC,EAAGS,MADiB,cAExB2I,EAAKsb,IAAM1kB,EAAGS,MAFU,cAGzB,YAAa2I,EAAK1J,IAHO,oBAIpB0J,EAAKsb,KAJe,mBAKrB1kB,EAAGN,IALkB,MAPjC,gBAgBM+C,IAAK2G,EAAK3I,KACVf,GAAI0J,EAAK1J,GACTglB,IAAKtb,EAAKsb,IACV,YAAa5E,EAAIpgB,IAChB0c,EAAyBhT,EAAK3I,UAGvC,MAAGue,OAAH,oBACK/e,EAAIL,KAAI,SAACwJ,GAAD,MACK,mCAAdA,EAAK3I,MAA+C,gEAA3B2b,EACrBhT,EAAKjC,QAAQvH,KAAI,SAAC2W,GAAD,MAAS,CACxB9T,IAAK8T,EAAG9V,KACRkkB,IAAKpO,EAAG9V,KACRsD,SAAUwS,EAAGpP,QAAQvH,KAAI,SAACI,GAAD,MAAS,CAChCyC,IAAKzC,EAAGS,KACRkkB,IAAK3kB,EAAGS,aAGZ,CACEgC,IAAK2G,EAAK3I,KACVkkB,IAAKvb,EAAK3I,KACVsD,SAAUqF,EAAKjC,QAAQvH,KAAI,SAACI,GAAD,MAAS,CAClCyC,IAAKzC,EAAGS,KACRkkB,IAAK3kB,EAAGS,eAO1B,IAAMmf,EAAI,uCAAG,WAAOpZ,EAAQwB,EAAME,GAArB,iBAAAxJ,EAAA,+EAESsJ,EAAKiB,iBAFd,OAEH9I,EAFG,OAIH0f,EAAY,CAChBpf,KAAMN,EAAIqG,EAAOke,KACjBA,IAAKle,EAAOke,KAGd9G,GAAO,4CAAD,OAA6CpX,EAAO9G,IAAMmgB,GAC7DhhB,MAAK,SAACC,GAAD,OACJ4e,GAAO,4CAA4C7e,MAAK,SAACC,GAAD,OACtDie,EAAyB,CAAE7S,SAAS,EAAOzL,KAAMK,EAAIL,aAGxDM,OAAM,SAACC,GAAD,OAASC,QAAQC,IAAIF,MAE9BkJ,EAAc,IAjBL,gDAmBTjJ,QAAQC,IAAI,mBAAZ,MAnBS,yDAAH,0DAuBV,OACE,kBAAC,GAAD,CACEmc,KAAMlT,EACN1J,KAAMA,EACNyL,QAAS4S,EAAsB5S,QAC/BzK,IAAK,2CACLsgB,eAAgBhD,EAChB6C,KAAMA,KC3GCY,GAAc,SAAC,GAA8B,IAcpDV,EAdwB8E,EAA2B,EAA3BA,SACtB1E,GADiD,EAAjB2E,WACtB/S,oBACVgT,EAAWhT,mBAFsC,EAI3B/P,mBAAS,CAAE4e,OAAO,IAJS,mBAIhDhgB,EAJgD,KAIxCigB,EAJwC,OAYnDlC,qBAAW3C,IAJbO,EARqD,EAQrDA,iBACAF,EATqD,EASrDA,uBACAU,EAVqD,EAUrDA,sBACAC,EAXqD,EAWrDA,yBAIGD,EAAsB5S,UACzB4V,EAAMhD,EAAsBre,KAAK4R,MAC/B,SAACjH,GAAD,OAAUA,EAAK3I,OAAS2b,MAI5B,IA6IIuC,EAAQ,GAUZ,OATImB,IACFnB,EAAQmB,EAAI3Y,QAAQvH,KAAI,SAACwJ,GAAD,MAAW,CACjC1J,GAAI0J,EAAK1J,GACToD,MAAOsG,EAAK3I,KACZJ,MAAO+I,EAAK3I,KACZsD,SAAU,QAKZ,oCACGqY,GACC,kBAAC,IAAKlZ,KAAN,CAAWzC,KAAK,4CACd,yBAAKsC,UAAU,2CACb,kBAAC,GAAD,CACEmd,QAASA,EACTvY,UAAU,EACVrB,YAC6B,mCAA3B8V,GAC2B,gEAA3BA,EACI,iHACA,+HAGR,kBAAC,GAAD,CAAQ9P,UAtKU,WAC1B,GAAI4T,EAAQlR,QAAQ8T,MAAMziB,MAAO,CAC/B,IAAMI,EAAOyf,EAAQlR,QAAQ8T,MAAMziB,MAC7B5B,EAAO,CACX,YAAaqhB,EAAIpgB,GACjBglB,IAAKtI,EACL3b,OACA0G,QAAS,IAGXwW,GAAQ,2CAA4Clf,GAAMI,MAAK,SAACC,GAC9D8hB,EAAU,CACRD,OAAO,EACP/Y,QAAS,6CACTyZ,YAAa,iMACb/d,KAAM,YAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,KAGFjD,GAAO,4CACJ7e,MAAK,SAACC,GAAD,OACJie,EAAyB,CACvB7S,SAAS,EACTzL,KAAMK,EAAIL,UAGbM,OAAM,SAACC,GACN4hB,EAAU,CACRD,OAAO,EACP/Y,QAAS,uCACTyZ,YAAa,gLACb/d,KAAM,UAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,WAKRiE,EAASlY,mBAETkU,EAAU,CACRD,OAAO,EACP/Y,QAAS,uCACTyZ,YAAa,uRACb/d,KAAM,UAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,MAqG4C3C,MAAO,sFAIzB,mCAA3B5B,GAC0B,gEAA3BA,EACE,kBAAC,IAAKlZ,KAAN,CAAWH,UAAU,wBACnB,kBAAC,GAAD,CAAQtE,KAAMkgB,EAAOrY,YAAY,oFACjC,yBAAKvD,UAAU,mBACb,kBAAC,IAAKG,KAAN,CAAWzC,KAAK,gCACd,kBAAC,GAAD,CACEyf,QAAS4E,EACTxe,YAAa,6HACbqB,UAAU,KAGd,kBAAC,GAAD,CACE2E,UAjHqB,WAC/B,GAAIgQ,GAAoBwI,EAAS9V,QAAQ8T,MAAMziB,MAAO,CACpD,IAAMI,EAAOqkB,EAAS9V,QAAQ8T,MAAMziB,MAG9B5B,EAAO,CACX,YAFSqhB,EAAI3Y,QAAQkJ,MAAK,SAACjH,GAAD,OAAUA,EAAK3I,OAAS6b,KAElC5c,GAChBglB,IAAK,6CACLjkB,OACA0G,QAAS,IAGXwW,GAAQ,2CAA4Clf,GAAMI,MAAK,SAACC,GAC9D8hB,EAAU,CACRD,OAAO,EACP/Y,QAAS,6CACTyZ,YAAa,iMACb/d,KAAM,YAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,KAGFjD,GAAO,4CACJ7e,MAAK,SAACC,GAAD,OACJie,EAAyB,CACvB7S,SAAS,EACTzL,KAAMK,EAAIL,UAGbM,OAAM,SAACC,GACN4hB,EAAU,CACRD,OAAO,EACP/Y,QAAS,uCACTyZ,YAAa,gLACb/d,KAAM,UAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,WAIRiE,EAASlY,mBAETkU,EAAU,CACRD,OAAO,EACP/Y,QAAS,uCACTyZ,YAAa,8RACb/d,KAAM,UAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,MAgDM5C,MAAO,kGAIX,KACHpd,EAAOggB,OACN,kBAAC,KAAD,CACE/Y,QAASjH,EAAOiH,QAChByZ,YAAa1gB,EAAO0gB,YACpB/d,KAAM3C,EAAO2C,KACb0D,UAAQ,EACRC,QAnNa,kBAAM2Z,EAAU,CAAED,OAAO,KAoNtCtd,MAAO,CAAEa,OAAQ,QCvNd6gB,GAAa,WAAO,IAAD,EACfjd,IAAKC,UAAbC,EADuB,oBAGtB+U,EAA6B2B,qBAAW3C,IAAxCgB,yBAWR,OATA5a,qBAAU,WACRub,GAAO,4CAA4C7e,MAAK,SAACC,GACvDie,EAAyB,CACvB7S,SAAS,EACTzL,KAAMK,EAAIL,YAGb,IAGD,kBAAC,IAAD,CAAMuJ,KAAMA,GACV,kBAAC,IAAK9E,KAAN,CAAWG,MAAO,CAAEyB,QAAS,OAAQgO,eAAgB,kBACnD,yBAAK/P,UAAU,sBACb,kBAAC,GAAD,QAGJ,kBAAC,GAAD,CAAa6hB,SAAU5c,IACvB,kBAAC,IAAK9E,KAAN,KACE,kBAAC,GAAD,CAAQG,MAAO,CAAEvB,MAAO,MAAOoC,OAAQ,MAAOD,YAAa,KAC3D,kBAAC,GAAD,SC7BK+gB,GAAmB,WAC9B,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,SCDKxE,GAAc,SAAC,GAAoB,IAAlBjC,EAAiB,EAAjBA,WAAiB,EACXxc,mBAAS,IADE,mBACtC0d,EADsC,KAC3B+D,EAD2B,OAMzC9E,qBAAW3C,IAHbe,EAH2C,EAG3CA,sBACAK,EAJ2C,EAI3CA,wBACAE,EAL2C,EAK3CA,gCAGI4H,EAAWnT,mBAR4B,EAS9BhK,IAAKC,UAAbC,EATsC,sBAWjBjG,mBAAS,CAAE4e,OAAO,IAXD,mBAWtChgB,EAXsC,KAW9BigB,EAX8B,KAsFvCsE,EAAkB,SAACxlB,GACvB8jB,GAAa,SAACviB,GAAD,4BAAeA,GAAf,CAAsBvB,QA4ErC,OACE,yBAAKqD,UAAW,oBACZ+Z,EAAsB5S,SACtB,kBAAC,IAAD,CAAMlC,KAAMA,GACV,kBAAC,IAAK9E,KAAN,KACE,kBAAC,IAAKA,KAAN,CAAWzC,KAAK,SACd,kBAAC,GAAD,CACE6F,YAAa,2JACb4Z,QAAS+E,EACT5hB,MAAO,CACLa,OAAQ,GACRgR,WAAY,EACZwF,UAAW,EACXzH,SAAU,IACVnR,MAAO,QAvFF,WAAO,IAAD,EACrBqjB,EAAU,GACVC,EAAW,GACVtI,EAAsB5S,UACzBkb,EAAWtI,EAAsBre,KAC9B4R,MAAK,SAACjH,GAAD,OACJmV,EAA2B,gEAAdnV,EAAK3I,KAA0C,mCAAd2I,EAAK3I,QAEpD0G,QAAQvH,KAAI,SAACkf,GAAD,OACXA,EAAO3X,QAAQvH,KAAI,SAACI,GAAD,MAAS,CAAES,KAAMT,EAAGS,KAAMf,GAAIM,EAAGN,UAWxDylB,EARYrI,EAAsBre,KAAKgS,QACrC,SAACrH,GAAD,MAAwB,uBAAdA,EAAK3I,QAGFgQ,QAAO,SAACrH,GAAD,OACnBmV,EAA4D,mCAAdnV,EAAK3I,KAAxB,gEAAd2I,EAAK3I,QAGRb,KAAI,SAACwJ,EAAM5G,GACtB,IAAM/B,EAAO8d,EAAa,8DAAmB,iCACvC9f,EAAO2K,EAAKjC,QAAQvH,KAAI,SAACkf,GAAD,OAC5B1V,EAAK3I,OAASA,EACV,CACEf,GAAIof,EAAOpf,GACXoD,MAAOgc,EAAOre,KACdJ,MAAOye,EAAOre,KACdsD,SAAU,IAEZ,CACErE,GAAIof,EAAOpf,GACXoD,MAAOgc,EAAOre,KACdJ,MAAOye,EAAOre,KACdsD,SAAU+a,EAAO3X,QAAQvH,KAAI,SAACI,GAC5B,MAAO,CACLN,GAAIM,EAAGN,GACPoD,MAAO9C,EAAGS,KACVJ,MAAOL,EAAGS,KACVsD,SAAU,WAMtB,OACE,kBAAC,GAAD,CACEtB,IAAKD,EACL8D,YAA2B,gEAAd8C,EAAK3I,KAA4B,iCAAU2I,EAAK3I,KAC7DhC,KAAMA,EACNyiB,SAAU,SAACxhB,GAAD,OAAQwlB,EAAgBxlB,UAoB1C,OAdAylB,EAAQhO,KACN,kBAAC,GAAD,CACE1U,IAAK,GACL6D,YAAa,6CACb7H,MAAM,MAAGugB,OAAH,oBAAaoG,IAAUxlB,KAAI,SAACwJ,GAAD,MAAW,CAC1C1J,GAAI0J,EAAK1J,GACToD,MAAOsG,EAAK3I,KACZJ,MAAO+I,EAAK3I,KACZsD,SAAU,OAEZmd,SAAU,SAACxhB,GAAD,OAAQwlB,EAAgBxlB,OAI/BylB,EAAQvlB,KAAI,SAACylB,GAAD,OAAYA,KAqBtBC,GACD,kBAAC,GAAD,CACEhiB,KAAK,UACLgJ,UA1KS,WACnB,GAAI2Y,EAASjW,QAAQ8T,MAAMziB,MAAO,CAChC,IAAMklB,EAAShH,EAAa,IAAM,IAC5B9f,EAAO,CACXgC,KAAMwkB,EAASjW,QAAQ8T,MAAMziB,MAC7Bkf,aAAa,GAAD,mBAAME,GAAN,CAAiB8F,KAG/B5H,GAAQ,yCAA0Clf,GAAMI,MAAK,SAACC,GAC5D8hB,EAAU,CACRD,OAAO,EACP/Y,QAAS,6CACTyZ,YAAa,iMACb/d,KAAM,YAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,KAGFjD,GAAO,0CACJ7e,MAAK,SAACC,GACLqe,EAAwB,CACtBjT,SAAS,EACTzL,KAAMK,EAAIL,OAEZ4e,EAAgC,CAC9BnT,SAAS,EACTzL,KAAMK,EAAIL,UAGbM,OAAM,SAACC,GACN4hB,EAAU,CACRD,OAAO,EACP/Y,QAAS,uCACTyZ,YAAa,gLACb/d,KAAM,UAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,WAKR3Y,EAAK0E,mBAELkU,EAAU,CACRD,OAAO,EACP/Y,QAAS,uCACTyZ,YAAa,8RACb/d,KAAM,UAGRge,YACE,kBACEV,EAAU,CACRD,OAAO,MAEX,MAwGM1C,MAAO,6GAGVtd,EAAOggB,OACN,kBAAC,KAAD,CACE/Y,QAASjH,EAAOiH,QAChByZ,YAAa1gB,EAAO0gB,YACpB/d,KAAM3C,EAAO2C,KACb0D,UAAQ,EACRC,QAtLS,kBAAM2Z,EAAU,CAAED,OAAO,KAuLlCtd,MAAO,CAAEa,OAAQ,SClMlBshB,GAAa,WAAO,IACvB3R,EAAYC,KAAZD,QADsB,EAG8B6K,qBAC1D3C,IADMe,EAHsB,EAGtBA,sBAAuBC,EAHD,EAGCA,yBAe/B,OAXA5a,qBAAU,WACH2a,EAAsBre,MACzBif,GAAO,4CAA4C7e,MAAK,SAACC,GACvDie,EAAyB,CACvB7S,SAAS,EACTzL,KAAMK,EAAIL,YAIf,IAGD,kBAAC,GAAD,CAAW6hB,SAAU,OACnB,kBAACzM,EAAD,CAASE,IAAI,4HAAwBtR,IAAI,KACvC,kBAAC,GAAD,MACA,kBAAC,GAAD,OAEF,kBAACoR,EAAD,CAASE,IAAI,gHAAsBtR,IAAI,KACrC,kBAAC,GAAD,CAAa8b,YAAY,IACzB,kBAAC,GAAD,CAAWA,YAAY,OC9BlBkH,GAAkB,WAC7B,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,SCHKC,GAAsB,WAAO,IAChC7R,EAAYC,KAAZD,QAER,OACE,oCACE,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAWyM,SAAU,OACnB,kBAACzM,EAAD,CAASE,IAAI,4HAAwBtR,IAAI,KACvC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAW6b,QAAQ,MAGvB,kBAACzK,EAAD,CAASE,IAAI,gHAAsBtR,IAAI,KACrC,kBAAC,GAAD,KACE,kBAAC,GAAD,CAAW8b,YAAY,EAAMD,QAAQ,UCNtCqH,GAAS,WACpB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUzf,OAAK,EAACN,KAAK,IAAIxC,GAAG,8BAI5B,kBAAC,EAAD,CAAgB8C,OAAK,EAAC0f,KAAK,4BAAQ1gB,UAAW2gB,KAC9C,kBAAC,EAAD,CAAgB3f,OAAK,EAAC0f,KAAK,4EAAgB1gB,UAAW4gB,KACtD,kBAAC,EAAD,CAAgB5f,OAAK,EAAC0f,KAAK,wHAAyB1gB,UAAW6gB,KAC/D,kBAAC,IAAD,CACEH,KAAK,sEACL1gB,UAAW,kBACT,kBAAC,EAAD,KACE,kBAAC,GAAD,UAIN,kBAAC,IAAD,CACE0gB,KAAK,+IACL1gB,UAAW,kBACT,kBAAC,EAAD,KACE,kBAAC,GAAD,UAIN,kBAAC,IAAD,CACE0gB,KAAK,mIACL1gB,UAAW,kBACT,kBAAC,EAAD,KACE,kBAAC,GAAD,UAIN,kBAAC,IAAD,CAAOgB,OAAK,EAAC0f,KAAK,sEAAe1gB,UAAWY,IAC5C,kBAAC,IAAD,CAAOI,OAAK,EAAC0f,KAAK,IAAItgB,OAAQ,kBAAM,oD,OCtC3B0gB,OAJf,WACE,OAAO,kBAAC,GAAD,OCGHrK,GAAQC,YAAe,CAC3BC,QAAS,CACPxW,MAAO4gB,KAIXC,IAAS5gB,OACP,kBAAC,IAAD,CAAUqW,MAAOA,IAEf,kBAAC,IAAD,CAAQwK,SAAS,UACf,kBAAC,GAAD,QAIJ3hB,SAAS4hB,eAAe,W","file":"static/js/main.d6c6fcd3.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getCurrentUser = createAsyncThunk(\r\n  'admin/getCurrentUser',\r\n  async (data) => {\r\n    const url = '/sc-api-gateway/acl/users/current'\r\n    const res = await axios\r\n      .get(url)\r\n      .then((res) => res.data)\r\n      .catch((err) => console.log(err))\r\n\r\n    return res\r\n  }\r\n)\r\n\r\nexport const getRoles = createAsyncThunk('admin/getRoles', async (data) => {\r\n  const url = '/sc-api-gateway/acl/roles'\r\n  const res = await axios\r\n    .get(url)\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err))\r\n\r\n  return res\r\n})\r\n\r\nexport const getModules = createAsyncThunk('admin/getModules', async (data) => {\r\n  const url = '/sc-api-gateway/acl/modules'\r\n  const res = await axios\r\n    .get(url)\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err))\r\n\r\n  return res\r\n})\r\n\r\nexport const getRoleModules = createAsyncThunk(\r\n  'admin/getRoleModules',\r\n  async (roles) => {\r\n    let modules = []\r\n    for (const role of roles) {\r\n      const url = `/sc-api-gateway/acl/roles/${role.id}/authorities`\r\n      let data = await axios\r\n        .get(url)\r\n        .then((res) => {\r\n          return {\r\n            repr: role.repr,\r\n            'permitted-modules': res.data.map((i) => i['module-name']),\r\n          }\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n      modules = [...modules, data]\r\n    }\r\n\r\n    return modules\r\n  }\r\n)\r\n\r\nexport const postRoleModules = createAsyncThunk(\r\n  'admin/postRoleModules',\r\n  async (data) => {\r\n    let ids = []\r\n    let ob = {}\r\n    let modules = []\r\n\r\n    data.arr.forEach((i) => {\r\n      if (data.row['permitted-modules'].includes(i.value)) {\r\n        ids = [...ids, i.id]\r\n        modules = [...modules, i.value]\r\n      }\r\n    })\r\n\r\n    ob = { ...data.row, 'permitted-modules': ids }\r\n\r\n    await axios.post('/sc-api-gateway/acl/roles', ob).then((res) => res.data)\r\n\r\n    console.log(ob, { ...data.row, 'permitted-modules': modules })\r\n\r\n    return { ...data.row, 'permitted-modules': modules }\r\n  }\r\n)\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'admin',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n    auth: {\r\n      data: {},\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    roles: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    modules: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    role_modules: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n  },\r\n  reducers: {\r\n    resetRoles: (state) => {\r\n      state.roles.status = 'idle'\r\n      state.roles.data = []\r\n    },\r\n    resetModules: (state) => {\r\n      state.modules.status = 'idle'\r\n      state.modules.data = []\r\n    },\r\n    resetRoleModules: (state) => {\r\n      state.role_modules.status = 'idle'\r\n      state.role_modules.data = []\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //fetch roles\r\n    [getRoles.pending]: (state, action) => {\r\n      state.roles.status = 'loading'\r\n    },\r\n    [getRoles.fulfilled]: (state, action) => {\r\n      state.roles.status = 'success'\r\n      state.roles.data = action.payload\r\n    },\r\n    [getRoles.failed]: (state, action) => {\r\n      state.roles.status = 'failed'\r\n      state.roles.error = action.payload\r\n    },\r\n\r\n    //fetch current user info\r\n    [getCurrentUser.pending]: (state, action) => {\r\n      state.auth.status = 'loading'\r\n    },\r\n    [getCurrentUser.fulfilled]: (state, action) => {\r\n      state.auth.status = 'success'\r\n      state.auth.data = action.payload\r\n    },\r\n    [getCurrentUser.failed]: (state, action) => {\r\n      state.modules.status = 'failed'\r\n      state.modules.error = action.payload\r\n    },\r\n\r\n    //fetch all available modules\r\n    [getModules.pending]: (state, action) => {\r\n      state.modules.status = 'loading'\r\n    },\r\n    [getModules.fulfilled]: (state, action) => {\r\n      state.modules.status = 'success'\r\n      state.modules.data = action.payload\r\n    },\r\n    [getModules.failed]: (state, action) => {\r\n      state.modules.status = 'failed'\r\n      state.modules.error = action.payload\r\n    },\r\n\r\n    //get all roles' modules\r\n    [getRoleModules.pending]: (state, action) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [getRoleModules.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = action.payload\r\n    },\r\n    [getRoleModules.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //post new role\r\n    [postRoleModules.pending]: (state, action) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [postRoleModules.fulfilled]: (state, action) => {\r\n      console.log(action.payload)\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = [action.payload, ...state.role_modules.data]\r\n    },\r\n    [postRoleModules.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { resetRoles, resetModules, resetRoleModules } = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { Menu, Button } from 'antd'\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  // AppstoreOutlined,\r\n  // PieChartOutlined,\r\n  // DesktopOutlined,\r\n  ContainerOutlined,\r\n  MailOutlined,\r\n  FileOutlined,\r\n} from '@ant-design/icons'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nexport const SideNavMenu = ({ width }) => {\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n    btnheight: 50,\r\n  })\r\n\r\n  const toggleCollapsed = () => {\r\n    setState((state) => ({ ...state, collapsed: !state.collapsed }))\r\n  }\r\n\r\n  useEffect(() => {\r\n    width < 600 &&\r\n      setState((state) => ({\r\n        ...state,\r\n        disabled: true,\r\n        collapsed: false,\r\n      }))\r\n  }, [width])\r\n\r\n  const menu = useMemo(() => {\r\n    return sidenavmenu.map((ob, index) => (\r\n      <SubMenu\r\n        key={ob.submenu}\r\n        icon={index % 2 === 0 ? <MailOutlined /> : <ContainerOutlined />}\r\n        title={ob.submenu}\r\n        className='SideNavMenu_style_sub_menu'\r\n      >\r\n        {ob.menuitems.map((menuitem) => (\r\n          <Menu.Item\r\n            key={menuitem}\r\n            icon={<FileOutlined />}\r\n            className='SideNavMenu_style_menu_item'\r\n          >\r\n            <Link to={`${menuitem}`}>{menuitem}</Link>\r\n          </Menu.Item>\r\n        ))}\r\n      </SubMenu>\r\n    ))\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      style={{ width: width < 600 ? '100%' : state.collapsed ? 80 : 350 }}\r\n      className='SideNavMenu_style'\r\n    >\r\n      <Button\r\n        type='primary'\r\n        onClick={toggleCollapsed}\r\n        style={{\r\n          height: state.btnheight,\r\n          width: '100%',\r\n        }}\r\n        className='SideNavMenu_style_button'\r\n      >\r\n        {width > 600 && state.collapsed ? (\r\n          <MenuUnfoldOutlined />\r\n        ) : (\r\n          'Панель администратора'\r\n        )}\r\n      </Button>\r\n      <Menu\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={['sub1']}\r\n        mode='inline'\r\n        inlineCollapsed={width < 600 ? false : state.collapsed}\r\n        style={{ height: '100%' }}\r\n      >\r\n        {menu}\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst sidenavmenu = [\r\n  {\r\n    submenu: 'Управление мастер-данными',\r\n    menuitems: [\r\n      'Справочники',\r\n      'Аналитические индикаторы',\r\n      'Показатели индикаторов',\r\n      'Карта ремонтных работ',\r\n    ],\r\n  },\r\n  // {\r\n  //   submenu: 'Управление информационной панелью',\r\n  //   menuitems: ['Руководители', 'Инфопанели'],\r\n  // },\r\n  // {\r\n  //   submenu: 'Управление открытыми данными',\r\n  //   menuitems: [],\r\n  // },\r\n  // {\r\n  //   submenu: 'Аудирование данных',\r\n  //   menuitems: ['Контроль', 'Аудит и сверка'],\r\n  // },\r\n  // {\r\n  //   submenu: 'Управление информационными данными',\r\n  //   menuitems: [],\r\n  // },\r\n  {\r\n    submenu: 'Управление пользователями',\r\n    menuitems: ['Роли', 'Пользователи'],\r\n  },\r\n]\r\n","import React from 'react'\r\n\r\nimport { Button } from 'antd'\r\nimport { QuestionOutlined } from '@ant-design/icons'\r\n\r\nexport const MainContentWrapper = ({ children }) => {\r\n  return (\r\n    <div\r\n      style={{ width: '100%', height: '100%' }}\r\n      className='MainContent_style'\r\n    >\r\n      <div className='header header-user-wrapper MainContent_style_header'>\r\n        <div className='MainContent_style_href'>\r\n          {/* <a href='#'>ru</a> | <a href='#'>kaz</a> */}\r\n        </div>\r\n        <div className='MainContent_style_header'>\r\n          <QuestionOutlined style={{ marginRight: '1rem' }} />\r\n          <span\r\n            style={{ margin: '0 1rem' }}\r\n            className='MainContent_style_header_fio'\r\n          >\r\n            ФИО/Организация\r\n          </span>\r\n          <Button className='MainContent_style_header_btn'>Выйти</Button>\r\n        </div>\r\n      </div>\r\n      <div className='main-content-wrapper MainContent_style_body'>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { SideNavMenu } from './SideNavMenu'\r\nimport { MainContentWrapper } from './MainContentWrapper'\r\n\r\nexport const Home = ({ children }) => {\r\n  let [width, setWidth] = useState(window.innerWidth)\r\n\r\n  const getWidth = () =>\r\n    window.innerWidth ||\r\n    document.documentElement.clientWidth ||\r\n    document.body.clientWidth\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      // change width from the state object\r\n      setWidth(getWidth())\r\n    }\r\n    // set resize listener\r\n    window.addEventListener('resize', resizeListener)\r\n\r\n    // clean up function\r\n    return () => {\r\n      // remove resize listener\r\n      window.removeEventListener('resize', resizeListener)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className='App Admin_main_style'\r\n      style={{ display: width < 600 ? 'block' : 'flex' }}\r\n    >\r\n      <SideNavMenu width={width} />\r\n      <MainContentWrapper>\r\n        <div\r\n          style={{ width: '100%', margin: '20px auto', padding: 5 }}\r\n          className='Admin_main_style_content'\r\n        >\r\n          {children}\r\n        </div>\r\n      </MainContentWrapper>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { Home } from './Home'\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  const { auth } = useSelector((state) => state.admin)\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) => {\r\n        if (Object.keys(auth.data).length > 0) {\r\n          return (\r\n            <Home>\r\n              <Component />\r\n            </Home>\r\n          )\r\n        } else {\r\n          return (\r\n            <Redirect\r\n              to={{ pathname: '/авторизация', state: { from: props.location } }}\r\n            />\r\n          )\r\n        }\r\n      }}\r\n    />\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nimport { getCurrentUser } from '../features/admin/adminSlice'\r\n\r\nexport const SignIn = (props) => {\r\n  // console.log(props)\r\n  const dispatch = useDispatch()\r\n  const { auth } = useSelector((state) => state.admin)\r\n\r\n  useEffect(() => {\r\n    dispatch(getCurrentUser())\r\n  }, [dispatch])\r\n\r\n  if (auth.data && auth.data.username) {\r\n    return (\r\n      <Route\r\n        render={() => (\r\n          <Redirect\r\n            exact\r\n            // to={props.history.location.state.pathname}\r\n            to={'/Карта ремонтных работ'}\r\n            from='/авторизация'\r\n          />\r\n        )}\r\n      />\r\n    )\r\n  }\r\n\r\n  return ''\r\n}\r\n","import React from 'react'\r\nimport { Input, InputNumber, Form, Select, Tag } from 'antd'\r\n\r\nexport const EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  placeholder,\r\n  title,\r\n  data,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const { Option } = Select\r\n\r\n  const switchCase = (type) => {\r\n    switch (type) {\r\n      case 'select':\r\n        return (\r\n          <Select placeholder={placeholder} allowClear>\r\n            {data.map((role) => (\r\n              <Option key={`${role}- ${placeholder}`} value={role}>\r\n                {role}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        )\r\n\r\n      case 'multi-select':\r\n        function tagRender(props) {\r\n          const { label, closable, onClose } = props\r\n\r\n          return (\r\n            <Tag\r\n              closable={closable}\r\n              onClose={onClose}\r\n              style={{ marginRight: 3 }}\r\n            >\r\n              {label}\r\n            </Tag>\r\n          )\r\n        }\r\n        return (\r\n          <Select\r\n            placeholder='Модули'\r\n            mode='multiple'\r\n            tagRender={tagRender}\r\n            style={{ width: '100%', marginBottom: 15 }}\r\n            options={data}\r\n          />\r\n        )\r\n      case 'number':\r\n        return (\r\n          <InputNumber\r\n            min={0}\r\n            max={100}\r\n            formatter={(value) => `${value}%`}\r\n            parser={(value) => value.replace('%', '')}\r\n          />\r\n        )\r\n      default:\r\n        return (\r\n          <Input\r\n            className='Edit_input_style'\r\n            placeholder={placeholder}\r\n            allowClear\r\n          />\r\n        )\r\n    }\r\n  }\r\n\r\n  const inputNode = switchCase(inputType)\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, Popconfirm, Form, Space } from 'antd'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from '@ant-design/icons'\r\n\r\nimport { EditableCell } from './EditableCell'\r\n\r\nexport const CustomTable = (props) => {\r\n  const [form] = Form.useForm()\r\n  const [editingKey, setEditingKey] = useState('')\r\n\r\n  const arr = [\r\n    ...props.columns,\r\n    {\r\n      title: 'Действие',\r\n      dataIndex: '',\r\n      width: '5%',\r\n      align: 'center',\r\n      key: 'x',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record)\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              onClick={() => onSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              <SaveOutlined className='icon_edit_btn_style' title='Сохранить' />\r\n            </a>\r\n            <Popconfirm\r\n              title='Вы уверены что хотите оменить изменения?'\r\n              onConfirm={cancel}\r\n            >\r\n              <CloseOutlined className='icon_edit_btn_style' title='Отменить' />\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <Space>\r\n            <a\r\n              disabled={editingKey !== ''}\r\n              onClick={() => edit(record, form, setEditingKey)}\r\n            >\r\n              <EditOutlined\r\n                className='icon_edit_btn_style'\r\n                title='Редактировать'\r\n              />\r\n            </a>\r\n            <Popconfirm\r\n              title='Вы уверены что хотите удалить даныне?'\r\n              onConfirm={() => onDelete(record)}\r\n            >\r\n              <DeleteOutlined className='icon_edit_btn_style' title='Удалить' />\r\n            </Popconfirm>\r\n          </Space>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const isEditing = (record) => record.key === editingKey\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const onSave = async (key) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      const newData = [...props.data]\r\n      const index = newData.findIndex((item) => key === item.key)\r\n      const item = newData[index]\r\n      props.handleEdit({ ...item, ...row })\r\n      setEditingKey('')\r\n\r\n      // if (index > -1) {\r\n      //   const item = newData[index]\r\n      //   newData.splice(index, 1, { ...item, ...row })\r\n      //   // props.setData(newData)\r\n      //   props.handleEdit({ ...item, ...row })\r\n      //   setEditingKey('')\r\n      // } else {\r\n      //   newData.push(row)\r\n      //   props.setData(newData)\r\n      //   props.handleEdit(row)\r\n      //   setEditingKey('')\r\n      // }\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  const onDelete = async (record) => {\r\n    // try {\r\n    //   let newData = [...props.data]\r\n    //   props.setData(newData.filter((item) => item.key !== record.key))\r\n    //   props.handleDelete(record)\r\n    // } catch (errInfo) {\r\n    //   console.log('Validate Failed:', errInfo)\r\n    // }\r\n    props.handleDelete(record)\r\n  }\r\n\r\n  const mergedColumns = arr.map((col) => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.type,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        data: col.data,\r\n        placeholder: col.placeholder,\r\n        editing: isEditing(record),\r\n      }),\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={props.data}\r\n        columns={mergedColumns}\r\n        rowClassName='editable-row'\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n        loading={props.loading}\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Upload, message } from 'antd'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\n\r\nfunction getBase64(img, callback) {\r\n  const reader = new FileReader()\r\n  reader.addEventListener('load', () => callback(reader.result))\r\n  reader.readAsDataURL(img)\r\n}\r\n\r\nfunction beforeUpload(file) {\r\n  const isJpgOrPng = file.type === 'image/jpeg' || file.type === 'image/png'\r\n  if (!isJpgOrPng) {\r\n    message.error('Можно загрузить только JPG/PNG формата файл!')\r\n  }\r\n  const isLt2M = file.size / 1024 / 1024 < 2\r\n  if (!isLt2M) {\r\n    message.error('Картинка должна быть меньше 2MB!')\r\n  }\r\n  return isJpgOrPng && isLt2M\r\n}\r\n\r\nclass Avatar extends React.Component {\r\n  state = {\r\n    loading: false,\r\n  }\r\n\r\n  handleChange = (info) => {\r\n    if (info.file.status === 'uploading') {\r\n      this.setState({ loading: true })\r\n      return\r\n    }\r\n    if (info.file.status === 'done') {\r\n      // Get this url from response in real world.\r\n      getBase64(info.file.originFileObj, (imageUrl) =>\r\n        this.setState({\r\n          imageUrl,\r\n          loading: false,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const uploadButton = (\r\n      <div>{this.state.loading ? <LoadingOutlined /> : <PlusOutlined />}</div>\r\n    )\r\n    const { imageUrl } = this.state\r\n    return (\r\n      <Upload\r\n        name='avatar'\r\n        listType='picture-card'\r\n        className='avatar-uploader'\r\n        action={imageUrl}\r\n        showUploadList={false}\r\n        beforeUpload={beforeUpload}\r\n        onChange={this.handleChange}\r\n      >\r\n        {imageUrl ? (\r\n          <img src={imageUrl} alt='avatar' style={{ width: '100%' }} />\r\n        ) : (\r\n          uploadButton\r\n        )}\r\n      </Upload>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Avatar\r\n","import { withRouter } from 'react-router-dom'\r\nimport React, { useState } from 'react'\r\nimport { Form, Input, Button, Select } from 'antd'\r\nimport { CustomTable as Table } from '../common/Table'\r\nimport Avatar from '../common/Avatar'\r\n\r\nconst Users = () => {\r\n  const [data, setData] = useState([\r\n    {\r\n      key: '0',\r\n      '№': 1,\r\n      ФИО: 'John Cena',\r\n      Организация: 'WWE membership',\r\n      Роль: 'Суперадмин',\r\n      Логин: 'johncena',\r\n      Пароль: 'supremexxx',\r\n      Фото: 'фото1',\r\n    },\r\n    {\r\n      key: '1',\r\n      '№': 2,\r\n      ФИО: 'John Snow',\r\n      Организация: 'Bastards',\r\n      Роль: 'Администратор',\r\n      Логин: 'bastardsnow',\r\n      Пароль: 'myloveDaenerys',\r\n      Фото: 'фото2',\r\n    },\r\n  ])\r\n  return (\r\n    <>\r\n      <UserControllers setData={setData} data={data} />\r\n      <Table columns={columns} data={data} setData={setData} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Users)\r\n\r\nconst UserControllers = ({ data, setData }) => {\r\n  const { Option } = Select\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const handleAdd = async () => {\r\n    try {\r\n      //putApi\r\n      const row = await form.validateFields()\r\n      setData((data) => [\r\n        ...data,\r\n        {\r\n          key: `${row.role}-${data.length + 1}`,\r\n          '№': data.length + 1,\r\n          ФИО: row.name,\r\n          Организация: row.organization,\r\n          Роль: row.role,\r\n          Логин: row.username,\r\n          Пароль: row.pwd,\r\n          Фото: row.avatar,\r\n        },\r\n      ])\r\n      form.resetFields()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form\r\n        form={form}\r\n        className='admin-controller Roles_block_style'\r\n        onFinish={handleAdd}\r\n        onFinishFailed={onFinishFailed}\r\n      >\r\n        <Form.Item\r\n          className='Roles_block_style'\r\n          name='name'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите имя пользователя!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='ФИО' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='organization'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Выберите название организации!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Select placeholder='Организация' allowClear>\r\n            {organizations.map((organization) => (\r\n              <Option key={organization} value={organization}>\r\n                {organization}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='role'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Выберите роль пользователя!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Select placeholder='Роли' allowClear>\r\n            {roles.map((role) => (\r\n              <Option key={role} value={role}>\r\n                {role}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item name='username'>\r\n          <Input placeholder='Логин' type={'email'} />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='pwd'\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите пароль пользователя!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder='Пароль'\r\n            type={'password'}\r\n            className='password_style_user'\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='avatar'\r\n          // rules={[\r\n          //   {\r\n          //     required: true,\r\n          //     message: `Введите картинку пользователя!`,\r\n          //   },\r\n          // ]}\r\n        >\r\n          <Avatar />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            className='standard_btn_admin'\r\n          >\r\n            Добавить\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\n//hardcoded data\r\n\r\nconst roles = [\r\n  'Суперадмин',\r\n  'Администратор',\r\n  'Оператор индикаторов',\r\n  'Оператор карты ремонтных дорог',\r\n]\r\n\r\nconst organizations = ['организация 1', 'организация 2', 'организация 3']\r\n\r\nconst columns = [\r\n  {\r\n    title: '№',\r\n    dataIndex: '№',\r\n  },\r\n  {\r\n    title: 'ФИО',\r\n    dataIndex: 'ФИО',\r\n\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Организация',\r\n    dataIndex: 'Организация',\r\n\r\n    type: 'select',\r\n    placeholder: 'Организации',\r\n    data: organizations,\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Роль',\r\n    dataIndex: 'Роль',\r\n\r\n    type: 'select',\r\n    placeholder: 'Роли',\r\n    data: roles,\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Логин',\r\n    dataIndex: 'Логин',\r\n  },\r\n  {\r\n    title: 'Пароль',\r\n    dataIndex: 'Пароль',\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Фото',\r\n    dataIndex: 'Фото',\r\n    editable: true,\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { Tag } from 'antd'\r\n\r\nexport const setRoleColumns = (options) => {\r\n  return [\r\n    {\r\n      title: 'Роль',\r\n      dataIndex: 'repr',\r\n      width: '30%',\r\n      editable: true,\r\n      placeholder: 'Роли',\r\n    },\r\n    {\r\n      title: 'Модули',\r\n      dataIndex: 'permitted-modules',\r\n      type: 'multi-select',\r\n      editable: true,\r\n      data: options,\r\n      render: (modules) => (\r\n        <span>\r\n          {modules.map((module) => {\r\n            let color = module.length > 5 ? 'geekblue' : 'blue'\r\n            return (\r\n              <Tag color={color} key={module} style={{ margin: '5px 5px' }}>\r\n                {module.toUpperCase()}\r\n              </Tag>\r\n            )\r\n          })}\r\n        </span>\r\n      ),\r\n    },\r\n  ]\r\n}\r\n\r\nexport const setRoleDataSource = (data) => {\r\n  return data.map((i, index) => {\r\n    return {\r\n      key: index,\r\n      repr: i.repr,\r\n      'permitted-modules': i['permitted-modules'],\r\n    }\r\n  })\r\n}\r\n","import React, { useMemo, useState, useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Form, Button, Select, Tag, Input } from 'antd'\r\nimport {\r\n  getRoles,\r\n  getModules,\r\n  getRoleModules,\r\n  postRoleModules,\r\n  resetModules,\r\n  resetRoleModules,\r\n  resetRoles,\r\n} from '../features/admin/adminSlice'\r\n\r\nimport { setRoleColumns, setRoleDataSource } from '../utils/table'\r\nimport { CustomTable as Table } from '../common/Table'\r\n\r\nconst Roles = () => {\r\n  const dispatch = useDispatch()\r\n  const { modules, roles, role_modules } = useSelector((state) => state.admin)\r\n  const [data, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    dispatch(getRoles())\r\n    dispatch(getModules())\r\n\r\n    return () => {\r\n      dispatch(resetRoles())\r\n      dispatch(resetModules())\r\n    }\r\n  }, [dispatch])\r\n\r\n  useEffect(() => {\r\n    roles.status === 'success' && dispatch(getRoleModules(roles.data))\r\n\r\n    return () => dispatch(resetRoleModules())\r\n  }, [roles, dispatch])\r\n\r\n  useEffect(() => {\r\n    role_modules.status === 'success' &&\r\n      setData(setRoleDataSource(role_modules.data))\r\n  }, [role_modules])\r\n\r\n  let options = useMemo(() => {\r\n    return modules.data.map((i) => ({ value: i.name, id: i.id }))\r\n  }, [modules])\r\n\r\n  return (\r\n    <>\r\n      {<RoleControllers options={options} dispatch={dispatch} />}\r\n      {\r\n        <Table\r\n          columns={setRoleColumns(options)}\r\n          data={data}\r\n          setData={setData}\r\n          loading={role_modules.status === 'success' ? false : true}\r\n        />\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Roles)\r\n\r\nconst RoleControllers = ({ options, dispatch }) => {\r\n  const [form] = Form.useForm()\r\n\r\n  const handleAdd = async () => {\r\n    try {\r\n      //putApi\r\n      // const row = await form.validateFields()\r\n      // setDataSource((data) => [\r\n      //   ...data,\r\n      //   {\r\n      //     key: `${row.role}-${data.length + 1}`,\r\n      //     Роль: row.role,\r\n      //     Модуль: row.modules,\r\n      //   },\r\n      // ])\r\n\r\n      let row = await form.validateFields()\r\n      // row = {\r\n      //   ...row,\r\n      //   'permitted-modules': getModuleIds(row['permitted-modules'], options),\r\n      // }\r\n\r\n      dispatch(postRoleModules({ row, arr: options }))\r\n\r\n      form.resetFields()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  const onFinishFailed = (errorInfo) => {\r\n    console.log('Failed:', errorInfo)\r\n  }\r\n\r\n  return (\r\n    <Form\r\n      form={form}\r\n      className=' Roles_create'\r\n      onFinish={handleAdd}\r\n      onFinishFailed={onFinishFailed}\r\n    >\r\n      <Form.Item\r\n        name='repr'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `Введите роль пользователя!`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder='Роли' allowClear style={{ width: '60%' }} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='permitted-modules'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `Выберите модули доступа пользователя!`,\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder='Модули'\r\n          mode='multiple'\r\n          tagRender={tagRender}\r\n          style={{ width: '60%' }}\r\n          options={options}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button type='primary' htmlType='submit' className='standard_btn_admin'>\r\n          Добавить\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nfunction tagRender(props) {\r\n  const { label, closable, onClose } = props\r\n\r\n  return (\r\n    <Tag closable={closable} onClose={onClose} style={{ marginRight: 3 }}>\r\n      {label}\r\n    </Tag>\r\n  )\r\n}\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst BASE_ORGANIZATIONS_URL = '/sc-roadworks/api/organisations'\r\nconst BASE_REGIONS_URL = '/sc-roadworks/api/regions'\r\nconst BASE_CATEGORIES_URL = '/sc-roadworks/api/categories'\r\nconst BASE_ROADMAP_URL = '/sc-roadworks/api/roadworks'\r\nconst BASE_INTERSECTIONS_URL = '/sc-roadworks/api/intersections'\r\n\r\nexport const fecthOrganizations = createAsyncThunk(\r\n  'roadmap/fetchOrganizations',\r\n  async () => {\r\n    const res = await axios.get(BASE_ORGANIZATIONS_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const fecthRegions = createAsyncThunk(\r\n  'roadmap/fetchRegions',\r\n  async () => {\r\n    const res = await axios.get(BASE_REGIONS_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const fetchCategories = createAsyncThunk(\r\n  'roadmap/fetchCategories',\r\n  async () => {\r\n    const res = await axios.get(BASE_CATEGORIES_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const fetchRoadMap = createAsyncThunk(\r\n  'roadmap/fetchRoadMap',\r\n  async () => {\r\n    const res = await axios.get(BASE_ROADMAP_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const fetchIntersections = createAsyncThunk(\r\n  'roadmap/fetchIntersections',\r\n  async () => {\r\n    const res = await axios.get(BASE_INTERSECTIONS_URL)\r\n    return res.data\r\n  }\r\n)\r\n\r\nexport const postRoadMap = createAsyncThunk(\r\n  'roadmap/postRoadMap',\r\n  async (ob) => {\r\n    const res = await axios.post(BASE_ROADMAP_URL, ob.data)\r\n    // console.log(res)\r\n    await axios.post(`/sc-roadworks/api/roadworks/${res.data}/geometries`, {\r\n      geometries: ob.geometries,\r\n    })\r\n\r\n    const coordinates = ob.mapData.map((i) => {\r\n      if (i.type === 'polyline') {\r\n        return i.coordinates\r\n      } else {\r\n        return i.coordinates[0]\r\n      }\r\n    })\r\n\r\n    return {\r\n      data: JSON.parse(res.config.data),\r\n      id: res.data,\r\n      geometries: {\r\n        type: 'polygon',\r\n        coordinates,\r\n      },\r\n    }\r\n  }\r\n)\r\n\r\nexport const postIntersections = createAsyncThunk(\r\n  'roadmap/postIntersections',\r\n  async (initialPost) => {\r\n    const res = await axios.post(\r\n      '/sc-roadworks/api/custom-intersections',\r\n      initialPost\r\n    )\r\n    console.log(res)\r\n    return JSON.parse(res.config.data)\r\n  }\r\n)\r\n\r\nexport const putRoadMap = createAsyncThunk(\r\n  'roadmap/putRoadMap',\r\n  async (post) => {\r\n    if (post.reedit) {\r\n      await axios.put(`${BASE_ROADMAP_URL}/${post.id}`, {\r\n        ...post.data.data,\r\n        'status-form': post.data.data.status,\r\n      })\r\n\r\n      //delete geometries and post new coordinates\r\n      await axios.delete(`/sc-roadworks/api/roadworks/${post.id}/geometries`)\r\n      await axios.post(`/sc-roadworks/api/roadworks/${post.id}/geometries`, {\r\n        geometries: post.data.geometries,\r\n      })\r\n\r\n      const coordinates = post.mapData.map((i) => {\r\n        if (i.type === 'polyline') {\r\n          return i.coordinates\r\n        } else {\r\n          return i.coordinates[0]\r\n        }\r\n      })\r\n\r\n      return {\r\n        reedit: post.reedit,\r\n        data: post.data.data,\r\n        id: post.id,\r\n        geometries: {\r\n          type: 'polygon',\r\n          coordinates,\r\n        },\r\n      }\r\n    } else {\r\n      await axios.put(`${BASE_ROADMAP_URL}/${post.id}`, {\r\n        'status-form': post.data,\r\n      })\r\n\r\n      return post\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteRoadMap = createAsyncThunk(\r\n  'roadmap/deleteRoadMap',\r\n  async (dataId) => {\r\n    await axios.delete(`${BASE_ROADMAP_URL}/${dataId}`)\r\n    return { id: dataId }\r\n  }\r\n)\r\n\r\nexport const roadmapSlice = createSlice({\r\n  name: 'roadmap',\r\n  initialState: {\r\n    organisations: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    regions: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    categories: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n    formData: {},\r\n    current: 0,\r\n    mapData: [],\r\n    crossListMapData: [],\r\n    editedId: null,\r\n    deletedId: null,\r\n    editedIntersectionId: null,\r\n    deletedIntersectionId: null,\r\n    intersections: {\r\n      status: 'idle',\r\n      error: null,\r\n      data: [],\r\n    },\r\n  },\r\n  reducers: {\r\n    formValidate: (state, action) => {\r\n      state.formData = { ...state.formData, ...action.payload }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload\r\n    },\r\n    setMapData: (state, action) => {\r\n      state.mapData = [...state.mapData, ...action.payload]\r\n    },\r\n    setCrossListMapData: (state, action) => {\r\n      state.crossListMapData = [...state.crossListMapData, ...action.payload]\r\n    },\r\n    resetMapData: (state) => {\r\n      state.mapData = []\r\n    },\r\n    resetCrossListMapData: (state) => {\r\n      state.crossListMapData = []\r\n    },\r\n    resetData: (state) => {\r\n      state.data = []\r\n      state.status = 'idle'\r\n    },\r\n    resetFormData: (state) => {\r\n      state.formData = {}\r\n    },\r\n    resetIntersectionsData: (state) => {\r\n      state.intersections.data = []\r\n      state.intersections.status = 'idle'\r\n    },\r\n    setEditedId: (state, action) => {\r\n      if (action.payload.just_id) {\r\n        state.editedId = null\r\n      } else {\r\n        state.editedIntersectionId = null\r\n      }\r\n    },\r\n    setDeletedId: (state, action) => {\r\n      if (action.payload.just_id) {\r\n        state.deletedId = null\r\n      } else {\r\n        state.deletedIntersectionId = null\r\n      }\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [fecthOrganizations.fulfilled]: (state, action) => {\r\n      state.organisations.status = 'success'\r\n      state.organisations.data = action.payload\r\n    },\r\n    [fecthOrganizations.pending]: (state, action) => {\r\n      state.organisations.status = 'loading'\r\n    },\r\n    [fecthOrganizations.rejected]: (state, action) => {\r\n      state.organisations.status = 'failed'\r\n      state.organisations.error = action.payload\r\n    },\r\n    [fecthRegions.fulfilled]: (state, action) => {\r\n      state.regions.status = 'success'\r\n      state.regions.data = action.payload\r\n    },\r\n    [fecthRegions.pending]: (state, action) => {\r\n      state.regions.status = 'loading'\r\n    },\r\n    [fecthRegions.rejected]: (state, action) => {\r\n      state.regions.status = 'failed'\r\n      state.regions.error = action.payload\r\n    },\r\n    [fetchCategories.fulfilled]: (state, action) => {\r\n      state.categories.status = 'success'\r\n      state.categories.data = action.payload\r\n    },\r\n    [fetchCategories.pending]: (state, action) => {\r\n      state.categories.status = 'loading'\r\n    },\r\n    [fetchCategories.rejected]: (state, action) => {\r\n      state.categories.status = 'failed'\r\n      state.categories.error = action.payload\r\n    },\r\n    [fetchRoadMap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = action.payload\r\n    },\r\n    [fetchRoadMap.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [fetchRoadMap.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n    [fetchIntersections.fulfilled]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      state.intersections.data = action.payload\r\n    },\r\n    [fetchIntersections.pending]: (state, action) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [fetchIntersections.rejected]: (state, action) => {\r\n      state.intersections.status = 'failed'\r\n      state.intersections.error = action.payload\r\n    },\r\n    [postRoadMap.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [postRoadMap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      let ob = action.payload.data\r\n      const id = action.payload.id\r\n      const geometries = action.payload.geometries\r\n      const category = state.categories.data.find(\r\n        (i) => i.id === action.payload.data.category\r\n      ).name\r\n      const region = state.regions.data.find(\r\n        (i) => i.id === action.payload.data.region\r\n      ).name\r\n      const organisation = state.organisations.data.find(\r\n        (i) => i.id === action.payload.data.organisation\r\n      ).name\r\n      ob = { ...ob, category, region, organisation, id, geometries }\r\n      state.data = [ob, ...state.data]\r\n    },\r\n    [postIntersections.pending]: (state, action) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [postIntersections.succes]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      state.intersections.data = [action.payload, ...state.intersections.data]\r\n    },\r\n    [putRoadMap.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [putRoadMap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      // let data = state.data.find((i) => i.id === action.payload.id)\r\n      let index = state.data.findIndex((i) => i.id === action.payload.id)\r\n      state.editedId = action.payload.id\r\n\r\n      //ids to names\r\n      if (action.payload.reedit) {\r\n        console.log(action.payload, action.payload.data)\r\n        const category = state.categories.data.find(\r\n          (i) => i.id === action.payload.data.category\r\n        ).name\r\n        const region = state.regions.data.find(\r\n          (i) => i.id === action.payload.data.region\r\n        ).name\r\n        const organisation = state.organisations.data.find(\r\n          (i) => i.id === action.payload.data.organisation\r\n        ).name\r\n        state.data[index] = {\r\n          ...action.payload.data,\r\n          category,\r\n          region,\r\n          organisation,\r\n          id: action.payload.id,\r\n        }\r\n        state.data[index].geometries = action.payload.geometries\r\n      } else {\r\n        state.data[index].status = {\r\n          ...state.data[index].status,\r\n          ...action.payload.data,\r\n        }\r\n      }\r\n    },\r\n    [deleteRoadMap.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [deleteRoadMap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = state.data.filter((i) => i.id !== action.payload.id)\r\n      state.deletedId = action.payload.id\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  formValidate,\r\n  setCurrent,\r\n  setMapData,\r\n  setCrossListMapData,\r\n  setIntersection,\r\n  resetFormData,\r\n  setEditedId,\r\n  setDeletedId,\r\n  resetCrossListMapData,\r\n  resetMapData,\r\n  resetData,\r\n  resetIntersectionsData,\r\n} = roadmapSlice.actions\r\n\r\nexport const selectRoadMap = (state) => state.roadmap\r\n\r\nexport default roadmapSlice.reducer\r\n","import React from 'react'\r\nimport { Placemark, Polygon, Polyline } from 'react-yandex-maps'\r\nimport { Button } from 'antd'\r\nimport { FaDrawPolygon } from 'react-icons/fa'\r\nimport { FcLineChart } from 'react-icons/fc'\r\n\r\nexport const renderGeoObjects = (mapData) => {\r\n  return mapData.map((geo, index) => {\r\n    switch (geo.type) {\r\n      case 'placemark':\r\n        return <Placemark key={index} geometry={geo.coordinates} />\r\n      case 'polyline':\r\n        return (\r\n          <Polyline\r\n            key={index}\r\n            geometry={geo.coordinates}\r\n            options={{\r\n              fillColor: '#00FF00',\r\n              strokeColor: '#0000FF',\r\n              strokeWidth: 5,\r\n            }}\r\n          />\r\n        )\r\n      case 'polygon':\r\n        return (\r\n          <Polygon\r\n            key={index}\r\n            geometry={geo.coordinates}\r\n            options={{\r\n              editorDrawingCursor: 'crosshair',\r\n              editorMaxPoints: 5,\r\n              fillColor: '#00FF00',\r\n              strokeColor: '#0000FF',\r\n              strokeWidth: 5,\r\n            }}\r\n          />\r\n        )\r\n      default:\r\n        return null\r\n    }\r\n  })\r\n}\r\n\r\nexport const renderButtons = (active, setActive) => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        type={active === 'polyline' && 'primary'}\r\n        onClick={() =>\r\n          active === 'polyline' ? setActive('') : setActive('polyline')\r\n        }\r\n        icon={<FcLineChart />}\r\n      />\r\n      <Button\r\n        type={active === 'polygon' && 'primary'}\r\n        style={{ margin: '0 10px' }}\r\n        icon={<FaDrawPolygon />}\r\n        onClick={() =>\r\n          active === 'polygon' ? setActive('') : setActive('polygon')\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createGeoObject = (active, draw) => {\r\n  const options = {\r\n    editorDrawingCursor: 'crosshair',\r\n    // editorMaxPoints: 10,\r\n    fillColor: '#00FF00',\r\n    strokeColor: '#0000FF',\r\n    strokeWidth: 5,\r\n  }\r\n\r\n  if (active === 'polygon') {\r\n    return (\r\n      <Polygon\r\n        instanceRef={(ref) => ref && draw(ref, active)}\r\n        geometry={[]}\r\n        options={{ ...options }}\r\n      />\r\n    )\r\n  }\r\n\r\n  if (active === 'polyline') {\r\n    return (\r\n      <Polyline\r\n        instanceRef={(ref) => ref && draw(ref, active)}\r\n        geometry={[]}\r\n        options={options}\r\n      />\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport { YMaps, Map } from 'react-yandex-maps'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button } from 'antd'\r\n\r\nimport { resetMapData, setMapData } from '../features/roadmap/roadmapSlice'\r\nimport {\r\n  renderButtons,\r\n  renderGeoObjects,\r\n  createGeoObject,\r\n} from '../utils/yandex_helper'\r\nimport { usePrevious } from '../utils/usePrevious'\r\n\r\nconst mapState = {\r\n  center: [43.238949, 76.889709],\r\n  zoom: 10,\r\n}\r\n\r\nexport const CustomYandexMap = () => {\r\n  const { current, mapData, crossListMapData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  const [active, setActive] = useState('')\r\n  const [polygons, setPolygons] = useState([])\r\n  const previousState = usePrevious({ active, polygons })\r\n\r\n  useEffect(() => {\r\n    if (previousState && previousState.active !== active) {\r\n      if (polygons.length > 0 && previousState.polygons === polygons) {\r\n        dispatch(setMapData(polygons))\r\n        setPolygons([])\r\n      }\r\n    }\r\n  }, [active, polygons, previousState])\r\n\r\n  let geoObject = useMemo(() => {\r\n    const draw = async (ref, type) => {\r\n      ref.editor.startDrawing()\r\n\r\n      ref.geometry.events.add('change', (e) => {\r\n        setPolygons((state) => [\r\n          { type, coordinates: e.originalEvent.newCoordinates },\r\n        ])\r\n      })\r\n\r\n      ref.editor.events.add('onchange', (event) => {\r\n        ref.startDrawing()\r\n      })\r\n      ref.editor.events.add('drawingstop', (event) => {\r\n        ref.editor.stopDrawing()\r\n        setActive('')\r\n      })\r\n    }\r\n\r\n    return createGeoObject(active, draw)\r\n  }, [active])\r\n\r\n  let geoObjects = useMemo(() => {\r\n    if (crossListMapData.length > 0) {\r\n      return renderGeoObjects(crossListMapData)\r\n    }\r\n    return renderGeoObjects(mapData)\r\n  }, [mapData, crossListMapData])\r\n\r\n  const handleClearMap = () => {\r\n    dispatch(resetMapData())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {current === 0 && (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'center',\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          {renderButtons(active, setActive)}\r\n          <Button onClick={handleClearMap}>Очистить карту</Button>\r\n        </div>\r\n      )}\r\n      <YMaps style={{ minWidth: '100%' }}>\r\n        <Map\r\n          width='100%'\r\n          height='calc(100% - 50px)'\r\n          style={{ minHeight: '500px', minWidth: '100%' }}\r\n          defaultState={mapState}\r\n          modules={['geoObject.addon.editor']}\r\n        >\r\n          {current === 0 && geoObject}\r\n          {geoObjects}\r\n        </Map>\r\n      </YMaps>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = (value) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n\r\n  return ref.current\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { Steps, Button, Form } from 'antd'\r\nimport { CustomYandexMap as YandexMap } from './YandexMap'\r\n\r\nconst { Step } = Steps\r\n\r\nexport const CustomSteps = ({\r\n  steps,\r\n  dispatch,\r\n  current,\r\n  setCurrent,\r\n  formValidate,\r\n  form,\r\n  callback,\r\n}) => {\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [form])\r\n\r\n  const next = () => {\r\n    dispatch(setCurrent(current + 1))\r\n  }\r\n\r\n  const prev = () => {\r\n    dispatch(setCurrent((state) => state - 1))\r\n    dispatch(setCurrent(current - 1))\r\n  }\r\n\r\n  const validate = async () => {\r\n    try {\r\n      const data = await form.validateFields()\r\n\r\n      if (data['end-date'] || data['start-date']) {\r\n        data['end-date'] = data['end-date']['_i']\r\n        data['start-date'] = data['start-date']['_i']\r\n      }\r\n\r\n      dispatch(formValidate(data))\r\n\r\n      next()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Steps current={current} size='small'>\r\n        {steps.map((item) => (\r\n          <Step key={item.title} title={item.title} />\r\n        ))}\r\n      </Steps>\r\n      <div className='steps-content'>\r\n        <Form form={form} name='roadwork-form'>\r\n          <div style={{ width: '100%', display: 'flex' }}>\r\n            <div style={{ width: '50%' }}>{steps[current].content}</div>\r\n            <div style={{ width: '50%', paddingLeft: 10 }}>\r\n              <YandexMap />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <div className='steps-action'>\r\n        {current > 0 && (\r\n          <Button style={{ margin: '0 8px' }} onClick={prev}>\r\n            Назад\r\n          </Button>\r\n        )}\r\n        {current < steps.length - 1 && (\r\n          <Button type='primary' onClick={validate}>\r\n            Далее\r\n          </Button>\r\n        )}\r\n        {current === 3 && (\r\n          <Button\r\n            key='submit'\r\n            type='primary'\r\n            // confirmLoading={status}\r\n            onClick={() => callback()}\r\n          >\r\n            Отправить\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Tabs } from 'antd'\r\n\r\nexport const CustomTabs = ({ tabs }) => {\r\n  const { TabPane } = Tabs\r\n\r\n  const renderTabs = () => {\r\n    return tabs ? (\r\n      <Tabs type='card' className='tabs'>\r\n        {tabs.map((i, index) => (\r\n          <TabPane tab={i.title} key={index}>\r\n            {i.child}\r\n          </TabPane>\r\n        ))}\r\n      </Tabs>\r\n    ) : (\r\n      'no tabs data to render'\r\n    )\r\n  }\r\n\r\n  return <div className='card-container'>{renderTabs()}</div>\r\n}\r\n\r\n//props stucture\r\n// const tabs = [\r\n//     {\r\n//         title: 'name',\r\n//         child: component\r\n//     }\r\n// ]\r\n","import React from 'react'\r\nimport {\r\n  Upload,\r\n  message,\r\n  Button,\r\n  Input,\r\n  Checkbox,\r\n  DatePicker,\r\n  Form,\r\n  Select,\r\n} from 'antd'\r\n// import { Collapse } from 'react-collapse'\r\n\r\nimport { UploadOutlined } from '@ant-design/icons'\r\nimport moment from 'moment'\r\n\r\nconst { TextArea } = Input\r\nconst { Option } = Select\r\n\r\nexport const renderSelects = (prop) => {\r\n  const { regions, organisations, categories } = prop\r\n  const arr = [\r\n    {\r\n      name: 'category',\r\n      placeholder: 'Категоря работ',\r\n      options:\r\n        categories.status === 'success'\r\n          ? categories.data.map((r) => r.name)\r\n          : [],\r\n    },\r\n    {\r\n      name: 'organisation',\r\n      placeholder: 'Ответсвенный орган',\r\n      options:\r\n        organisations.status === 'success'\r\n          ? organisations.data.map((o) => o.name)\r\n          : [],\r\n    },\r\n    {\r\n      name: 'region',\r\n      placeholder: 'Район',\r\n      options:\r\n        regions.status === 'success' ? regions.data.map((r) => r.name) : [],\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div\r\n    // style={{\r\n    //   display: 'flex',\r\n    //   flexWrap: 'wrap',\r\n    //   justifyContent: 'space-between',\r\n    //   margin: '15px 0',\r\n    // }}\r\n    >\r\n      {arr.map((i, index) => (\r\n        <Form.Item\r\n          name={i.name}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          key={`${i.name}${index}`}\r\n          hasFeedback\r\n        >\r\n          <Select placeholder={i.placeholder} style={{ width: 300 }} allowClear>\r\n            {i.options.map((op) => (\r\n              <Option value={op} key={op}>\r\n                {op}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const renderTextArea = (name, placeholder, isOpen) => {\r\n  return (\r\n    <Form.Item>\r\n      <Form.Item\r\n        name={name}\r\n        valuePropName={'value'}\r\n        hidden={name !== 'area' && !isOpen}\r\n        getValueFromEvent={(e) => e.target.value}\r\n      >\r\n        <TextArea style={{ height: 70 }} placeholder={placeholder} allowClear />\r\n      </Form.Item>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport const renderDatePicker = (picker, handleChange, name, text) => {\r\n  const picker_ = picker ? (\r\n    <DatePicker\r\n      placeholder='Выбрать год'\r\n      allowClear={false}\r\n      picker={'year'}\r\n      format={'YYYY'}\r\n    />\r\n  ) : (\r\n    <DatePicker placeholder='Выбрать дату' allowClear={false} />\r\n  )\r\n\r\n  return (\r\n    <Form.Item label={text}>\r\n      <Input.Group compact>\r\n        <Form.Item\r\n          name={name}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          getValueFromEvent={(e, string) => {\r\n            return moment(string, 'YYYY-MM-DD')\r\n          }}\r\n        >\r\n          {picker_}\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={`is-${name}`}\r\n          style={{ marginLeft: 10 }}\r\n          valuePropName={'checked'}\r\n          getValueFromEvent={(e) => e.target.checked}\r\n        >\r\n          <Checkbox onChange={handleChange}>Год</Checkbox>\r\n        </Form.Item>\r\n      </Input.Group>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport const renderUpload = () => (\r\n  <Form.Item\r\n    name='file-paths'\r\n    valuePropName='fileList'\r\n    // getValueFromEvent={normFile}\r\n  >\r\n    <Upload {...upload_props}>\r\n      <Button icon={<UploadOutlined />}>Добавить рисунок / презентацию</Button>\r\n    </Upload>\r\n  </Form.Item>\r\n)\r\n\r\nexport const upload_props = {\r\n  name: 'file',\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  listType: 'picture',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList)\r\n    }\r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} успешно загружен`)\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`Ошибка загрузки файла ${info.file.name}`)\r\n    }\r\n  },\r\n}\r\n\r\nconst normFile = (e) => {\r\n  console.log('Upload event:', e)\r\n\r\n  if (Array.isArray(e)) {\r\n    return e\r\n  }\r\n\r\n  return e && e.fileList\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Input, Checkbox, Form, DatePicker } from 'antd'\r\n\r\nimport {\r\n  renderDatePicker,\r\n  renderSelects,\r\n  renderTextArea,\r\n  renderUpload,\r\n} from '../../../utils/worklist_form'\r\n\r\nexport const WorkDescription = (props) => {\r\n  const { organisations, regions, categories, form } = props\r\n  const [iscanvas, setCanvas] = useState(false)\r\n  const [isclosured, setClosured] = useState(false)\r\n\r\n  // const [type, setType] = useState('date')\r\n  //checkbox on datepicker\r\n  const [pickerStart, setPickerStart] = useState(false)\r\n  const [pickerEnd, setPickerEnd] = useState(false)\r\n\r\n  useEffect(() => {\r\n    form.getFieldValue('is-canvas-opened') &&\r\n      setCanvas(form.getFieldValue('is-canvas-opened'))\r\n    form.getFieldValue('is-closured') &&\r\n      setClosured(form.getFieldValue('is-closured'))\r\n    form.getFieldValue('is-start-date') &&\r\n      setPickerStart(form.getFieldValue('is-start-date') ? true : false)\r\n    form.getFieldValue('is-end-date') &&\r\n      setPickerEnd(form.getFieldValue('is-end-date' ? true : false))\r\n\r\n    return () => {\r\n      setCanvas(false)\r\n      setClosured(false)\r\n    }\r\n  }, [form])\r\n\r\n  //checkbox on datepicker\r\n  const handleChangeYearStart = (e) =>\r\n    setPickerStart(e.target.checked ? true : false)\r\n\r\n  const handleChangeYearEnd = (e) =>\r\n    setPickerEnd(e.target.checked ? true : false)\r\n\r\n  return (\r\n    <>\r\n      {/* <Checkbox onChange={(e) => setType(e.target.checked ? 'year' : 'date')} />\r\n      {<PickerWithType type={type} />} */}\r\n      {renderSelects({ regions, organisations, categories })}\r\n      <Form.Item name='address'>\r\n        <Input placeholder='Адрес/Улица' />\r\n      </Form.Item>\r\n      {renderTextArea('area', 'Описание участка', true)}\r\n      <Form.Item\r\n        name={'is-closured'}\r\n        noStyle\r\n        valuePropName={'checked'}\r\n        getValueFromEvent={(e) => e.target.checked}\r\n      >\r\n        <Checkbox onChange={() => setClosured((state) => !state)}>\r\n          Перекрытие улиц{' '}\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {renderTextArea('closure-description', 'Описание перекрытия', isclosured)}\r\n      <Form.Item name={'is-canvas-opened'} noStyle valuePropName={'checked'}>\r\n        <Checkbox onChange={() => setCanvas((state) => !state)}>\r\n          Вскрытие дорожного полотна{' '}\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {renderTextArea('canvas-description', 'Описание вскрытия', iscanvas)}\r\n      {renderDatePicker(\r\n        pickerStart,\r\n        handleChangeYearStart,\r\n        'start-date',\r\n        'Дата начала'\r\n      )}\r\n      {renderDatePicker(\r\n        pickerEnd,\r\n        handleChangeYearEnd,\r\n        'end-date',\r\n        'Дата окончания'\r\n      )}\r\n      {renderUpload()}\r\n    </>\r\n  )\r\n}\r\nfunction PickerWithType({ type }) {\r\n  if (type === 'date') return <DatePicker />\r\n  return <DatePicker picker={type} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\nimport { Input, Form } from 'antd'\r\n\r\n// const { TextArea } = Input\r\n\r\nexport const WorkContractor = () => {\r\n  const [phone, setPhone] = useState()\r\n  return (\r\n    <>\r\n      <Form.Item name='lot-name'>\r\n        <Input placeholder='Наименование проекта (№ лота)' />\r\n      </Form.Item>\r\n      <Form.Item name='company-name'>\r\n        <Input placeholder='Наименование компании' />\r\n      </Form.Item>\r\n      <Form.Item name='supervisor-name'>\r\n        <Input placeholder='ФИО руководителя' />\r\n      </Form.Item>\r\n      <Form.Item name='contacts'>\r\n        <PhoneInput\r\n          country={'kz'}\r\n          value={phone}\r\n          onChange={(phone) => setPhone({ phone })}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item name='warranty-period'>\r\n        <Input placeholder='Гарантийный период' />\r\n      </Form.Item>\r\n      {/* <Form.Item\r\n        name='contractor-comment-textarea'\r\n        rules={[{ required: true }]}\r\n      >\r\n        <TextArea style={{ height: 90 }} placeholder='Комментарий' />\r\n      </Form.Item> */}\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { Input, Checkbox, Form, InputNumber } from 'antd'\r\n\r\nconst { TextArea } = Input\r\n\r\nexport const WorkStatus = () => {\r\n  const [disabled, setDisabled] = useState(true)\r\n  const hanldeChange = (e) =>\r\n    e.target.checked ? setDisabled(false) : setDisabled(true)\r\n\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        name='percentage'\r\n        rules={[{ required: true, message: 'Заполните поле' }]}\r\n        label={'Статус исполнения (%)'}\r\n      >\r\n        <InputNumber\r\n          style={{ width: '120px' }}\r\n          min={0}\r\n          max={100}\r\n          formatter={(value) => `${value}%`}\r\n          parser={(value) => value.replace('%', '')}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='commentary'>\r\n        <TextArea style={{ height: 90 }} placeholder='Комментарий' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='is-hidden'\r\n        valuePropName='checked'\r\n        getValueFromEvent={(e) => e.target.checked}\r\n      >\r\n        <Checkbox> Скрыть работу с карты</Checkbox>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='is-canceled'\r\n        valuePropName='checked'\r\n        getValueFromEvent={(e) => e.target.checked}\r\n        noStyle\r\n      >\r\n        <Checkbox onChange={hanldeChange}>\r\n          Закуп работ отменен / приостановлен\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {/* <Form.Item name='canceled-comment'>\r\n        <TextArea\r\n          style={{ height: 90 }}\r\n          placeholder='Комментарий'\r\n          disabled={disabled}\r\n        />\r\n      </Form.Item> */}\r\n    </>\r\n  )\r\n}\r\n","export const nameEnToRuWorkListHelper = (name) => {\r\n  switch (name) {\r\n    case 'area':\r\n      return 'Участок'\r\n    case 'address':\r\n      return 'Адрес/улица'\r\n    case 'contractor':\r\n      return 'Подрядчик'\r\n    case 'category':\r\n      return 'Категоря работ'\r\n    case 'end-date':\r\n      return 'Дата окончания'\r\n    case 'is-end-date':\r\n      return 'Дата окончания отмечено'\r\n    case 'start-date':\r\n      return 'Дата начала'\r\n    case 'is-start-date':\r\n      return 'Дата начало отмечено'\r\n    case 'closure-description':\r\n      return 'Описание перекрытия'\r\n    case 'is-closured':\r\n      return 'Описание перекрытия отмечено'\r\n    case 'organisation':\r\n      return 'Ответсвенный орган'\r\n    case 'file-paths':\r\n      return 'Файл'\r\n    case 'lot-name':\r\n      return 'Лот'\r\n    case 'percentage':\r\n      return 'Статус исполнения (%)'\r\n    case 'region':\r\n      return 'Район'\r\n    case 'supervisor-name':\r\n      return 'ФИО руководителя'\r\n    case 'contacts':\r\n      return 'Контакты'\r\n    case 'warranty-period':\r\n      return 'Гарантийный период'\r\n    case 'canvas-description':\r\n      return 'Описание вскрытия'\r\n    case 'is-canvas-opened':\r\n      return 'Описание вскрытия отмечено'\r\n    case 'company-name':\r\n      return 'Наименование компании'\r\n    case 'canceled-comment':\r\n      return 'Комментарий закупа отмены'\r\n    case 'percentage-comment':\r\n      return 'Комментарий статуса %'\r\n    case 'is-hidden':\r\n      return 'Статус скрыт'\r\n    case 'is-canceled':\r\n      return 'Статус приостановлен'\r\n    case 'commentary':\r\n      return 'Статус комментария'\r\n    default:\r\n      return name\r\n  }\r\n}\r\n\r\nexport const prepareToShowDetailsObToArr = (ob) => {\r\n  const arr = []\r\n\r\n  Object.keys(ob).map((key) => {\r\n    if (\r\n      typeof ob[key] !== 'undefined' &&\r\n      typeof ob[key] !== 'object' &&\r\n      key !== 'is-start-date' &&\r\n      key !== 'is-end-date' &&\r\n      key !== 'key' &&\r\n      key !== 'id'\r\n    ) {\r\n      arr.push({ name: key, value: ob[key] })\r\n    } else if (ob[key] === undefined && key.split('-')[0] === 'is') {\r\n      arr.push({ name: key, value: false })\r\n    } else if (ob[key] === undefined) {\r\n      arr.push({ name: key, value: null })\r\n    }\r\n  })\r\n\r\n  return arr\r\n}\r\n\r\nexport const findLotName = (id, data) =>\r\n  //should return lot-name not id\r\n  data.find((i) => i.id === id).id\r\n\r\nexport const validateRoadWorkForm = (\r\n  data,\r\n  categories,\r\n  organisations,\r\n  regions\r\n) => {\r\n  let ob = {}\r\n  let is_hidden = false\r\n  let is_canceled = false\r\n  let commentary = null\r\n  let percentage\r\n\r\n  data.forEach((item) => {\r\n    if (\r\n      item.name !== 'is-hidden' ||\r\n      item.name !== 'is-canceled' ||\r\n      item.name !== 'commentary' ||\r\n      item.name !== 'percentage' ||\r\n      item.name !== 'is-end-date' ||\r\n      item.name !== 'is-start-date'\r\n    ) {\r\n      //save status values\r\n      if (item.name === 'percentage') {\r\n        percentage = item.value\r\n      }\r\n      if (item.name === 'is-canceled') {\r\n        is_canceled = item.value\r\n      }\r\n      if (item.name === 'is-hidden') {\r\n        is_hidden = item.value\r\n      }\r\n      if (item.name === 'commentary') {\r\n        commentary = item.value\r\n      }\r\n\r\n      if (item.name === 'end-date' || item.name === 'start-date') {\r\n        item.value.length > 4\r\n          ? (ob = { ...ob, [item.name]: item.value })\r\n          : (ob = { ...ob, [item.name]: `${item.value}-01-01` })\r\n      }\r\n      //find id for item.names\r\n      else if (item.name === 'category') {\r\n        const id = categories.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else if (item.name === 'organisation') {\r\n        const id = organisations.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else if (item.name === 'region') {\r\n        const id = regions.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else {\r\n        ob = { ...ob, [item.name]: item.value }\r\n      }\r\n    }\r\n  })\r\n\r\n  ob = {\r\n    ...ob,\r\n    status: {\r\n      percentage: percentage,\r\n      'is-hidden': is_hidden,\r\n      'is-canceled': is_canceled,\r\n      commentary: commentary,\r\n    },\r\n  }\r\n\r\n  return ob\r\n}\r\n\r\nexport const setCoordinates = (data) => {\r\n  return data.map((i) => {\r\n    let arr = []\r\n    if (i.type === 'polyline') {\r\n      arr = i.coordinates.map((ii) => ({ y: ii[1], x: ii[0] }))\r\n    } else if (i.type === 'polygon') {\r\n      arr = i.coordinates[0].map((k) => ({ y: k[1], x: k[0] }))\r\n    } else {\r\n      arr = [{ y: i.coordinates[1], x: i.coordinates[0] }]\r\n    }\r\n    return arr\r\n  })\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Form } from 'antd'\r\n\r\nimport {\r\n  nameEnToRuWorkListHelper,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../../utils/helper'\r\n\r\nexport const WorkConfirm = ({ ob }) => {\r\n  const arr = useMemo(() => {\r\n    let new_arr = prepareToShowDetailsObToArr(ob)\r\n    new_arr = new_arr.filter(\r\n      (i) => typeof i.value !== 'object' && typeof i.value !== 'boolean'\r\n    )\r\n    return new_arr\r\n  }, [ob])\r\n\r\n  const renderForm = arr.map((i) => (\r\n    <Form.Item\r\n      key={i.name}\r\n      label={\r\n        <span style={{ color: '#92B4A7' }}>\r\n          {nameEnToRuWorkListHelper(i.name)}\r\n        </span>\r\n      }\r\n    >\r\n      {i.value}\r\n    </Form.Item>\r\n  ))\r\n  return <>{renderForm}</>\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  setCurrent,\r\n  formValidate,\r\n} from '../../../features/roadmap/roadmapSlice'\r\n\r\nimport {\r\n  WorkDescription,\r\n  WorkContractor,\r\n  WorkStatus,\r\n  WorkConfirm,\r\n} from './index'\r\nimport { CustomSteps as Steps } from '../../../common'\r\n\r\nexport const StepsWrapper = ({ form, callback }) => {\r\n  const { current, organisations, regions, categories, formData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const steps = setSteps(\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    formData,\r\n    form,\r\n    dispatch\r\n  )\r\n  return (\r\n    <Steps\r\n      steps={steps}\r\n      current={current}\r\n      setCurrent={setCurrent}\r\n      formValidate={formValidate}\r\n      dispatch={dispatch}\r\n      form={form}\r\n      callback={callback}\r\n    />\r\n  )\r\n}\r\n\r\nconst setSteps = (\r\n  organisations,\r\n  regions,\r\n  categories,\r\n  formData,\r\n  form,\r\n  dispatch\r\n) => [\r\n  {\r\n    title: 'Описание работ',\r\n    content: (\r\n      <WorkDescription\r\n        organisations={organisations}\r\n        regions={regions}\r\n        categories={categories}\r\n        form={form}\r\n        dispatch={dispatch}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: 'Данные подрядчика',\r\n    content: <WorkContractor />,\r\n  },\r\n  {\r\n    title: 'Статус работ',\r\n    content: <WorkStatus />,\r\n  },\r\n  {\r\n    title: 'Отправка данных',\r\n    content: <WorkConfirm ob={formData} />,\r\n  },\r\n]\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Button, Modal, Form } from 'antd'\r\n\r\nimport { StepsWrapper as Steps } from './form/StepsWrapper'\r\n\r\nimport {\r\n  setCurrent,\r\n  postRoadMap,\r\n  resetMapData,\r\n} from '../../features/roadmap/roadmapSlice'\r\nimport {\r\n  validateRoadWorkForm,\r\n  setCoordinates,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../utils/helper'\r\n\r\nexport const WorkListModal = () => {\r\n  const [visible, setVisible] = useState()\r\n  const dispatch = useDispatch()\r\n  const {\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    formData,\r\n    status,\r\n    mapData,\r\n  } = useSelector((state) => state.roadmap)\r\n  const [form] = Form.useForm()\r\n\r\n  const postFormData = useCallback(async () => {\r\n    try {\r\n      let arr = prepareToShowDetailsObToArr(formData)\r\n      let ob = validateRoadWorkForm(arr, categories, organisations, regions)\r\n\r\n      const coordinates = setCoordinates(mapData)\r\n\r\n      ob = { data: ob, geometries: coordinates, mapData }\r\n      // console.log(ob)\r\n\r\n      dispatch(postRoadMap(ob))\r\n      dispatch(setCurrent(0))\r\n      dispatch(resetMapData())\r\n\r\n      status === 'success' && setVisible(false)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }, [categories, formData, dispatch, mapData, organisations, status, regions])\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type='primary'\r\n        onClick={() => {\r\n          dispatch(setCurrent(0))\r\n          setVisible(true)\r\n        }}\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        Добавить\r\n      </Button>\r\n      {status === 'success' && (\r\n        <Modal\r\n          title='Форма ввода данных по ремонтным работам'\r\n          visible={visible}\r\n          onOk={() => {\r\n            dispatch(setCurrent(0))\r\n            setVisible(false)\r\n          }}\r\n          onCancel={() => {\r\n            dispatch(setCurrent(0))\r\n            setVisible(false)\r\n            dispatch(resetMapData())\r\n            form.resetFields()\r\n          }}\r\n          width={'80%'}\r\n          footer={null}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Steps form={form} callback={postFormData} />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Form } from 'antd'\r\nimport moment from 'moment'\r\n\r\nimport { StepsWrapper as Steps } from './form/StepsWrapper'\r\nimport {\r\n  resetFormData,\r\n  resetMapData,\r\n  setCurrent,\r\n  putRoadMap,\r\n} from '../../features/roadmap/roadmapSlice'\r\nimport {\r\n  validateRoadWorkForm,\r\n  setCoordinates,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../utils/helper'\r\n\r\nconst format = 'YYYY/MM/DD'\r\n\r\nexport const WorkDetailsModal = (props) => {\r\n  const { visible, setVisible, record } = props\r\n  const [form] = Form.useForm()\r\n\r\n  const {\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    status,\r\n    mapData,\r\n    formData,\r\n  } = useSelector((state) => state.roadmap)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  form.setFieldsValue({\r\n    ...formData,\r\n    'start-date': moment(formData['start-date'], format),\r\n    'end-date': moment(formData['end-date'], format),\r\n  })\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetMapData())\r\n      dispatch(resetFormData({}))\r\n      form.setFieldsValue({})\r\n    }\r\n  }, [form, record])\r\n\r\n  const putFormData = useCallback(async () => {\r\n    try {\r\n      let arr = prepareToShowDetailsObToArr(formData)\r\n      let ob = validateRoadWorkForm(arr, categories, organisations, regions)\r\n      const coordinates = setCoordinates(mapData)\r\n\r\n      console.log(coordinates)\r\n      ob = { data: ob, geometries: coordinates }\r\n\r\n      dispatch(setCurrent(0))\r\n      dispatch(putRoadMap({ reedit: true, data: ob, id: record.id, mapData }))\r\n      form.resetFields()\r\n\r\n      status === 'success' && setVisible(false)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }, [\r\n    categories,\r\n    organisations,\r\n    regions,\r\n    mapData,\r\n    formData,\r\n    form,\r\n    record,\r\n    setVisible,\r\n    status,\r\n  ])\r\n\r\n  return (\r\n    <Modal\r\n      title='Детали улицы'\r\n      visible={visible}\r\n      width={'50%'}\r\n      onCancel={() => setVisible(false)}\r\n      onOk={() => setVisible(false)}\r\n      footer={[]}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Steps form={form} callback={putFormData} />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const setFilterSelectsHelper = (response) => {\r\n  let ob = {}\r\n  let result = []\r\n  if (response.status === 'success') {\r\n    const data = response.data\r\n    for (let i = 0; i < data.length; i++) {\r\n      ob = { ...ob, [data[i].name]: data[i].name }\r\n    }\r\n    result = Object.keys(ob).map((key) => ({ text: key, value: key }))\r\n  }\r\n  return result\r\n}\r\n\r\nexport const setWorkListDataSourceHelper = (arr) => {\r\n  const dataSource = arr.map((i) => {\r\n    let keys = { key: i.id }\r\n    Object.keys(i).forEach((key) => {\r\n      if (key === 'status') {\r\n        keys = {\r\n          ...keys,\r\n          percentage: i[key].percentage,\r\n          'is-hidden': i[key]['is-hidden'],\r\n          'is-canceled': i[key]['is-canceled'],\r\n          commentary: i[key]['commentary'],\r\n        }\r\n      } else {\r\n        keys = { ...keys, [key]: i[key] }\r\n      }\r\n    })\r\n    return keys\r\n  })\r\n\r\n  return dataSource\r\n}\r\n\r\nexport const setCrossListDataSourceHelper = (data, intersections) => {\r\n  let dataSource = []\r\n  if (intersections.status === 'success') {\r\n    dataSource = intersections.data.map((i, index) => {\r\n      let ob = {\r\n        '№': index + 1,\r\n        key: index + 1,\r\n        address: 'some street',\r\n        coordinates: i.intersection.coordinates,\r\n      }\r\n\r\n      i['roadwork-ids'].forEach((id, key) => {\r\n        let item = data.find((i) => i.id === id)\r\n        ob = {\r\n          ...ob,\r\n          category: item ? item.category : '',\r\n          [`Работа ${key + 1}`]: id,\r\n        }\r\n      })\r\n\r\n      return ob\r\n    })\r\n  }\r\n\r\n  // const dataSource = data.map((i, index) => {\r\n  //   let keys = { '№': index + 1, key: index + 1 }\r\n  //   Object.keys(i).forEach((key) => {\r\n  //     keys = { ...keys, [key]: i[key] }\r\n  //   })\r\n  //   return keys\r\n  // })\r\n\r\n  return dataSource\r\n}\r\n\r\nexport const setWorkListTableColumnsHelper = (\r\n  organisations,\r\n  categories,\r\n  setVisible,\r\n  setRecord\r\n) => [\r\n  {\r\n    title: '№',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n    width: '2%',\r\n    align: 'center',\r\n    render: (text, record) => (\r\n      <a\r\n        onClick={() => {\r\n          setRecord(record)\r\n          setVisible(true)\r\n        }}\r\n      >\r\n        {text}\r\n      </a>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Улица',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n    render: (text, record) => <>{text}</>,\r\n  },\r\n  {\r\n    title: 'Участок',\r\n    dataIndex: 'area',\r\n    key: 'area',\r\n  },\r\n  {\r\n    title: 'Категория работ',\r\n    dataIndex: 'category',\r\n    key: 'category',\r\n    filters: setFilterSelectsHelper(categories),\r\n    onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Отв орган',\r\n    dataIndex: 'organisation',\r\n    key: 'organisation',\r\n    filters: setFilterSelectsHelper(organisations),\r\n    onFilter: (value, record) => record.organisation.indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Дата начала',\r\n    dataIndex: 'start-date',\r\n    key: 'start-date',\r\n    width: '10%',\r\n    align: 'center',\r\n    filters: date_filters,\r\n    onFilter: (value, record) => record['start-date'].indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Дата окончания',\r\n    dataIndex: 'end-date',\r\n    key: 'end-date',\r\n    width: '10%',\r\n    align: 'center',\r\n    filters: date_filters,\r\n    onFilter: (value, record) => record['end-date'].indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Статус (%)',\r\n    dataIndex: 'percentage',\r\n    key: 'percentage',\r\n    editable: true,\r\n    width: '5%',\r\n    rule: true,\r\n    type: 'number',\r\n    align: 'center',\r\n    sorter: (a, b) => b.percentage - a.percentage,\r\n    sortDirections: ['ascend'],\r\n  },\r\n]\r\n\r\nexport const setCrossListTableColumnsHelper = (\r\n  setVisible,\r\n  setRecord,\r\n  intersections,\r\n  categories\r\n) => {\r\n  let arr = []\r\n\r\n  if (intersections.status === 'success') {\r\n    let count = 0\r\n    intersections.data.forEach((i) => {\r\n      if (i['roadwork-ids'].length > count) {\r\n        count = i['roadwork-ids'].length\r\n      }\r\n    })\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      arr = [\r\n        ...arr,\r\n        {\r\n          title: `Работа ${i + 1}`,\r\n          dataIndex: `Работа ${i + 1}`,\r\n          key: `Работа ${i + 1}`,\r\n          width: '10%',\r\n          align: 'center',\r\n        },\r\n      ]\r\n    }\r\n  }\r\n\r\n  const cols = [\r\n    {\r\n      title: '№',\r\n      dataIndex: '№',\r\n      key: '№',\r\n      width: '2%',\r\n      align: 'center',\r\n      render: (text, record) => {\r\n        return (\r\n          <a\r\n            onClick={() => {\r\n              setRecord(record)\r\n              setVisible(true)\r\n            }}\r\n          >\r\n            {text}\r\n          </a>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: 'Улица',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Категория работ',\r\n      dataIndex: 'category',\r\n      width: '30%',\r\n      key: 'category',\r\n      filters: setFilterSelectsHelper(categories),\r\n      onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n    },\r\n  ]\r\n\r\n  return [...cols, ...arr]\r\n}\r\n\r\n//hardcoded date filters on year\r\nconst date_filters = ['2018', '2019', '2020', '2021', '2022']\r\n  .map((value) => ({\r\n    value,\r\n    text: value,\r\n  }))\r\n  .reverse()\r\n\r\n// //hardcoded date filters on year v2.0\r\n// const year = [2018, 2019, 2020, 2021, 2022]\r\n// const month = [\r\n//   'Январь',\r\n//   'Февраль',\r\n//   'Март',\r\n//   'Апрель',\r\n//   'Май',\r\n//   'Июнь',\r\n//   'Июль',\r\n//   'Август',\r\n//   'Сентябрь',\r\n//   'Октябрь',\r\n//   'Ноябрь',\r\n//   'Декабрь',\r\n// ]\r\n\r\n// const date_filters = [\r\n//   {\r\n//     value: 'year',\r\n//     text: 'year',\r\n//     children: year.map((value) => ({ value, text: value })),\r\n//   },\r\n//   {\r\n//     value: 'month',\r\n//     text: 'month',\r\n//     children: month.map((value) => ({ value, text: value })),\r\n//   },\r\n// ]\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Input } from 'antd'\r\n\r\nimport moment from 'moment'\r\n\r\nimport { WorkDetailsModal } from './WorkDetailsModal'\r\nimport { CustomTable as Table } from '../../../../common/Table'\r\nimport {\r\n  setWorkListTableColumnsHelper,\r\n  setWorkListDataSourceHelper,\r\n} from '../../utils/table_helper'\r\nimport {\r\n  deleteRoadMap,\r\n  putRoadMap,\r\n  setEditedId,\r\n  setDeletedId,\r\n  formValidate,\r\n  setMapData,\r\n  resetMapData,\r\n} from '../../features/roadmap/roadmapSlice'\r\n\r\nexport const WorkListTable = () => {\r\n  const {\r\n    organisations,\r\n    categories,\r\n    status,\r\n    data,\r\n    editedId,\r\n    deletedId,\r\n  } = useSelector((state) => state.roadmap)\r\n  const dispatch = useDispatch()\r\n  const [visible, setVisible] = useState(false)\r\n  const [record, setRecord] = useState({})\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [filtered, setFiltered] = useState()\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const columns = useMemo(() => {\r\n    return setWorkListTableColumnsHelper(\r\n      organisations,\r\n      categories,\r\n      setVisible,\r\n      setRecord\r\n    )\r\n  }, [organisations, categories, setVisible, setRecord])\r\n\r\n  useEffect(() => {\r\n    if (filtered) {\r\n      if (editedId) {\r\n        let item = dataSource.find((i) => i.id === editedId)\r\n        // console.log('editing filtered data')\r\n        setFiltered((state) => state.map((i) => (i.id === editedId ? item : i)))\r\n        dispatch(setEditedId({ just_id: true }))\r\n      }\r\n      if (deletedId) {\r\n        setFiltered((state) => state.filter((i) => i.id !== deletedId))\r\n        dispatch(setDeletedId({ just_id: true }))\r\n      }\r\n    }\r\n  }, [dataSource, deletedId, editedId, filtered])\r\n\r\n  useMemo(() => {\r\n    if (Object.keys(record).length > 0 && visible) {\r\n      let ob = {\r\n        ...record,\r\n        'start-date': moment(record['start-date'], 'YYYY/MM/DD'),\r\n        'end-date': moment(record['end-date'], 'YYYY/MM/DD'),\r\n      }\r\n      // console.log(ob)\r\n      dispatch(formValidate(ob))\r\n      let coordinates = record.geometries.coordinates\r\n      coordinates.length > 0 &&\r\n        dispatch(setMapData([{ coordinates, type: 'polygon' }]))\r\n    }\r\n  }, [record, visible, dispatch])\r\n\r\n  useMemo(() => {\r\n    // console.log('editing dataSource')\r\n    setDataSource(setWorkListDataSourceHelper(data))\r\n  }, [data])\r\n\r\n  const onEdit = (record) => {\r\n    dispatch(\r\n      putRoadMap({\r\n        reedit: false,\r\n        data: {\r\n          percentage: record.percentage,\r\n        },\r\n        id: record.id,\r\n      })\r\n    )\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    dispatch(deleteRoadMap(record.id))\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    setFiltered(\r\n      dataSource.filter((i) => {\r\n        if (i.address) {\r\n          return i.address.toLowerCase().includes(e.target.value.toLowerCase())\r\n        }\r\n\r\n        return i.id.toString().includes(e.target.value.toLowerCase())\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item name={'search'}>\r\n        <Input\r\n          allowClear\r\n          placeholder={'Поиск по улице'}\r\n          onChange={onSearch}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='table'>\r\n        <Table\r\n          columns={columns}\r\n          data={filtered ? filtered : dataSource}\r\n          setData={setDataSource}\r\n          handleEdit={onEdit}\r\n          handleDelete={onDelete}\r\n          loading={status === 'loading' ? true : false}\r\n        />\r\n      </Form.Item>\r\n      {visible && (\r\n        <Form.Item name='modal'>\r\n          <WorkDetailsModal\r\n            visible={visible}\r\n            setVisible={setVisible}\r\n            record={record}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  fecthOrganizations,\r\n  fetchCategories,\r\n  fecthRegions,\r\n  fetchRoadMap,\r\n} from '../../features/roadmap/roadmapSlice'\r\n\r\nimport { WorkListModal as Modal } from './WorkListModal'\r\nimport { WorkListTable as Table } from './WorkListTable'\r\n\r\nexport const WorkList = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fecthOrganizations())\r\n    dispatch(fecthRegions())\r\n    dispatch(fetchCategories())\r\n    dispatch(fetchRoadMap())\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <Table />\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Select, Form, Button, Input } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setCrossListMapData } from '../../../features/roadmap/roadmapSlice'\r\n\r\nconst { Option } = Select\r\n\r\nexport const AddCrossWorks = () => {\r\n  const { categories, data } = useSelector((state) => state.roadmap)\r\n  const [count, setCount] = useState([1, 2])\r\n  const [options, setOptions] = useState()\r\n  const dispatch = useDispatch()\r\n\r\n  const renderSelectsGroup = (key) => {\r\n    let arr =\r\n      categories.status === 'success' ? categories.data.map((r) => r.name) : []\r\n\r\n    const onChangeWorkId = (id) =>\r\n      dispatch(\r\n        setCrossListMapData([\r\n          {\r\n            type: 'polygon',\r\n            coordinates: data.find((i) => i.id === id).geometries.coordinates,\r\n          },\r\n        ])\r\n      )\r\n\r\n    const onChangeCategory = (value) =>\r\n      setOptions((state) => ({\r\n        ...state,\r\n        [key]: data.filter((i) => i.category === value).map((i) => i.id),\r\n      }))\r\n\r\n    return (\r\n      <Form.Item style={{ marginRight: 20 }}>\r\n        <Form.Item\r\n          name={`category-${key}`}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n        >\r\n          <Select\r\n            placeholder={'Категория работ'}\r\n            style={{ width: 240 }}\r\n            allowClear\r\n            onChange={onChangeCategory}\r\n          >\r\n            {arr.map((i, index) => (\r\n              <Option value={i} key={i}>\r\n                {i}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        {options && options[key] && (\r\n          <Form.Item\r\n            name={`roadwork-${key}`}\r\n            rules={[{ required: true, message: 'Заполните поле' }]}\r\n            key={`roadwork-${key}`}\r\n          >\r\n            <Select\r\n              placeholder={`Работа ${key}`}\r\n              style={{ width: 240 }}\r\n              allowClear\r\n              onChange={onChangeWorkId}\r\n            >\r\n              {options[key].map((i, index) => (\r\n                <Option value={i} key={i}>\r\n                  {i}\r\n                </Option>\r\n              ))}\r\n            </Select>\r\n          </Form.Item>\r\n        )}\r\n      </Form.Item>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n        }}\r\n      >\r\n        {count.map((i) => renderSelectsGroup(i))}\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginTop: 15 }}>\r\n        <div style={{ marginRight: 25 }}>\r\n          <Button\r\n            size='small'\r\n            type='primary'\r\n            shape='circle'\r\n            onClick={() => setCount([...count, count.length + 1])}\r\n          >\r\n            +\r\n          </Button>{' '}\r\n          <span>Добавить еще одну</span>\r\n        </div>\r\n        <>\r\n          <Button\r\n            disabled={count.length === 2}\r\n            size='small'\r\n            type='primary'\r\n            shape='circle'\r\n            onClick={() => {\r\n              setCount([...count.filter((i) => i !== count.length)])\r\n            }}\r\n          >\r\n            -\r\n          </Button>{' '}\r\n          <span style={{ marginLeft: 5 }}>Убрать</span>\r\n        </>\r\n      </div>\r\n      <Form.Item name='area'>\r\n        <Input\r\n          placeholder={'Участок пересечения'}\r\n          style={{ width: '30%', marginTop: 15 }}\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal, Form } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  postIntersections,\r\n  setCurrent,\r\n  resetCrossListMapData,\r\n} from '../../features/roadmap/roadmapSlice'\r\nimport { AddCrossWorks } from './form/AddCrossWorks'\r\nimport { CustomYandexMap as YandexMap } from '../../common'\r\n\r\nexport const CrossListModal = () => {\r\n  const [visible, setVisible] = useState()\r\n  const [form] = Form.useForm()\r\n  const dispatch = useDispatch()\r\n\r\n  const onCancel = () => {\r\n    dispatch(resetCrossListMapData())\r\n    form.resetFields()\r\n    setVisible(false)\r\n  }\r\n\r\n  const onSave = async () => {\r\n    let data = await form.validateFields()\r\n    const ob = Object.values(data)\r\n    const ids = ob.filter((i) => typeof i !== 'string')\r\n    data = { 'roadwork-ids': ids, 'intersection-area': data.area }\r\n    dispatch(postIntersections(data))\r\n    dispatch(resetCrossListMapData())\r\n    form.resetFields()\r\n    setVisible(false)\r\n  }\r\n\r\n  const onAddIntersection = () => {\r\n    dispatch(setCurrent(1))\r\n    setVisible(true)\r\n  }\r\n\r\n  const config = [\r\n    <Button key='back' onClick={() => setVisible(false)}>\r\n      Отменить\r\n    </Button>,\r\n    <Button key='submit' type='primary' onClick={onSave}>\r\n      Сохранить\r\n    </Button>,\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type='primary'\r\n        onClick={onAddIntersection}\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        Добавить пересечение\r\n      </Button>\r\n      <Modal\r\n        title='Форма ввода данных по пересечению работ'\r\n        visible={visible}\r\n        onCancel={onCancel}\r\n        width={'80%'}\r\n        footer={config}\r\n      >\r\n        <Form form={form}>\r\n          <AddCrossWorks />\r\n          <div style={{ width: '100%', paddingLeft: 10 }}>\r\n            <YandexMap />\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, Button } from 'antd'\r\n\r\nimport {\r\n  setCrossListMapData,\r\n  resetCrossListMapData,\r\n  setCurrent,\r\n} from '../../features/roadmap/roadmapSlice'\r\n\r\nimport { CustomYandexMap as YandexMap } from '../../common'\r\nimport { WorkConfirm as FormDetails } from '../WorkList/form/WorkConfirm'\r\n\r\nexport const CrossDetailsModal = (props) => {\r\n  const { visible, setVisible, record, data } = props\r\n  const [array, setArray] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    //get ids from table record\r\n    const ids = Object.keys(record)\r\n      .filter((key) => key.substring(0, 6) === 'Работа' && record[key])\r\n      .map((i) => record[i])\r\n\r\n    //find crosslist work information by ids\r\n    let arr = []\r\n    ids.forEach((id) => {\r\n      data.forEach((i) => {\r\n        if (i.id === id) {\r\n          arr = [...arr, i]\r\n        }\r\n      })\r\n    })\r\n\r\n    //draw work coordinates\r\n    let list = arr.map((i) => ({\r\n      type: 'polygon',\r\n      coordinates: i.geometries.coordinates,\r\n    }))\r\n    list = [\r\n      ...list,\r\n      {\r\n        type: 'placemark',\r\n        coordinates: record.coordinates,\r\n      },\r\n    ]\r\n\r\n    setArray(arr)\r\n    dispatch(setCurrent(1))\r\n    dispatch(setCrossListMapData(list))\r\n\r\n    return () => {\r\n      dispatch(setCurrent(0))\r\n      dispatch(resetCrossListMapData())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      title='Детали улицы'\r\n      visible={visible}\r\n      width={'50%'}\r\n      onCancel={() => setVisible(false)}\r\n      onOk={() => setVisible(false)}\r\n      footer={[\r\n        <Button key='close' onClick={() => setVisible(false)}>\r\n          Закрыть\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          // justifyContent: 'space-between',\r\n          flexWrap: 'wrap',\r\n          width: '90%',\r\n          margin: 'auto',\r\n        }}\r\n      >\r\n        {array.map((i, index) => (\r\n          <div\r\n            style={{\r\n              width: `${array.length > 2 ? '33%' : '50%'}`,\r\n            }}\r\n          >\r\n            <h2>Работа {index + 1}</h2>\r\n            <FormDetails ob={i} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={{ width: '100%', paddingLeft: 10 }}>\r\n        <YandexMap />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Input } from 'antd'\r\n\r\nimport {\r\n  deleteRoadMap,\r\n  resetIntersectionsData,\r\n  setEditedId,\r\n} from '../../features/roadmap/roadmapSlice'\r\n\r\nimport { CrossDetailsModal } from './CrossDetailsModal'\r\nimport { CustomTable as Table } from '../../../../common/Table'\r\nimport {\r\n  setCrossListTableColumnsHelper,\r\n  setCrossListDataSourceHelper,\r\n} from '../../utils/table_helper'\r\n\r\nexport const CrossListTable = () => {\r\n  const { categories, intersections, data, editedId } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [record, setRecord] = useState({})\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [filtered, setFiltered] = useState()\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (editedId && filtered) {\r\n      let item = dataSource.find((i) => i.id === editedId)\r\n      console.log('editing filtered data')\r\n      setFiltered((state) => state.map((i) => (i.id === editedId ? item : i)))\r\n      dispatch(setEditedId({ just_id: false }))\r\n    }\r\n  }, [dataSource, editedId, filtered])\r\n\r\n  const columns = useMemo(() => {\r\n    return setCrossListTableColumnsHelper(\r\n      setVisible,\r\n      setRecord,\r\n      intersections,\r\n      categories\r\n    )\r\n  }, [setVisible, setRecord, intersections, categories])\r\n\r\n  useMemo(() => {\r\n    setDataSource(setCrossListDataSourceHelper(data, intersections))\r\n  }, [data, intersections])\r\n\r\n  const onEdit = (record) => {\r\n    console.log(record, 'run bitch')\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    // console.log(record)\r\n    dispatch(deleteRoadMap(record.id))\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    setFiltered(\r\n      dataSource.filter(\r\n        (i) =>\r\n          i.address &&\r\n          i.address.toLowerCase().includes(e.target.value.toLowerCase())\r\n      )\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item name={'search'}>\r\n        <Input\r\n          allowClear\r\n          placeholder={'Поиск по улице'}\r\n          onChange={onSearch}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='table'>\r\n        <Table\r\n          columns={columns}\r\n          data={filtered ? filtered : dataSource}\r\n          setData={setDataSource}\r\n          handleEdit={onEdit}\r\n          handleDelete={onDelete}\r\n          loading={intersections.status !== 'success' ? true : false}\r\n        />\r\n      </Form.Item>\r\n      {visible && (\r\n        <Form.Item name='modal'>\r\n          <CrossDetailsModal\r\n            visible={visible}\r\n            setVisible={setVisible}\r\n            record={record}\r\n            data={data}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { fetchIntersections } from '../../features/roadmap/roadmapSlice'\r\n\r\nimport { CrossListModal as Modal } from './CrossListModal'\r\nimport { CrossListTable as Table } from './CrossListTable'\r\n\r\nexport const CrossList = () => {\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchIntersections())\r\n  }, [])\r\n\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <Table />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { CustomTabs as Tabs } from '../common'\r\n\r\nimport { WorkList } from './WorkList/index'\r\nimport { CrossList } from './CrossList/index'\r\n\r\nexport const RoadMap = () => {\r\n  return <Tabs tabs={tabs} />\r\n}\r\n\r\nconst tabs = [\r\n  {\r\n    title: 'Список работ',\r\n    child: <WorkList />,\r\n  },\r\n  {\r\n    title: 'Список пересечений',\r\n    child: <CrossList />,\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { Provider } from 'react-redux'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\n\r\nimport roadmapReducer from './features/roadmap/roadmapSlice'\r\nimport { RoadMap } from './components/RoadMap'\r\n\r\nimport './index.css'\r\nimport 'antd/dist/antd.css'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    roadmap: roadmapReducer,\r\n  },\r\n})\r\n\r\nconst Roadmap = () => (\r\n  <Provider store={store}>\r\n    <RoadMap />\r\n  </Provider>\r\n)\r\n\r\nexport default withRouter(Roadmap)\r\n","import React, { createContext, useState } from 'react'\r\n\r\nconst AppContext = createContext()\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  let [selectedValue, setSelectedValue] = useState()\r\n  let [selectedDictionaryName, setSelectedDictionaryName] = useState()\r\n  let [selectedIndustry, setSelectedIndustry] = useState()\r\n  let [filteredData, setFilteredData] = useState(null)\r\n  let [indicators, setIndicators] = useState({})\r\n  let [searchText, setSearchText] = useState()\r\n  let [fetchedDictionaryData, setFetchedDictionaryData] = useState({\r\n    loading: true,\r\n  })\r\n  let [fetchedIndicatorInfoData, setFetchedIndicatorInfoData] = useState({\r\n    loading: true,\r\n  })\r\n  let [fetchedIndicatorData, setFetchedIndicatorData] = useState({\r\n    loading: true,\r\n  })\r\n  let [\r\n    fetchedIndicatorStrategyData,\r\n    setFetchedIndicatorStrategyData,\r\n  ] = useState({\r\n    loading: true,\r\n  })\r\n  let [modalIndicator, setModalIndicator] = useState()\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        selectedValue,\r\n        setSelectedValue,\r\n        filteredData,\r\n        setFilteredData,\r\n        indicators,\r\n        setIndicators,\r\n        dictionary_names,\r\n        searchText,\r\n        setSearchText,\r\n        fetchedDictionaryData,\r\n        setFetchedDictionaryData,\r\n        fetchedIndicatorData,\r\n        setFetchedIndicatorData,\r\n        fetchedIndicatorStrategyData,\r\n        setFetchedIndicatorStrategyData,\r\n        fetchedIndicatorInfoData,\r\n        setFetchedIndicatorInfoData,\r\n        selectedDictionaryName,\r\n        setSelectedDictionaryName,\r\n        selectedIndustry,\r\n        setSelectedIndustry,\r\n        modalIndicator,\r\n        setModalIndicator,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport { AppContext, AppContextProvider }\r\n\r\nconst dictionary_names = [\r\n  'Сфера',\r\n  'Государственная программа',\r\n  'Периодичность обновления',\r\n  'Единица измерения',\r\n  'Ответственный орган',\r\n  'Источник информации',\r\n  'Стратегия 2050',\r\n  // 'Стратегия 2050',\r\n]\r\n","import axios from 'axios'\r\n\r\nexport const getAPI = async (url) => await axios(url)\r\n\r\nexport const postAPI = async (url, data) => await axios.post(url, data)\r\n\r\nexport const putAPI = async (url, data) => await axios.put(url, data)\r\n\r\nexport const deleteAPI = async (url) => await axios.delete(url)\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport const AdminButton = ({\r\n  handleAdd,\r\n  text2,\r\n  text1,\r\n  text3,\r\n  style = {\r\n    margin: '5 0',\r\n  },\r\n  text = `+`,\r\n}) => {\r\n  const handleClick = () => handleAdd()\r\n  const renderBTN = (text1, text2, text3) => {\r\n    if (text1) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text1}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    if (text2) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text2}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n    if (text3) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text3}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n  }\r\n  return renderBTN(text1, text2, text3)\r\n  /* text2 ? <Button type='primary' onClick={handleClick} style={style} className='AdminButton_style' title={text2}>\r\n            {text}\r\n        </Button> : <Button type='primary' onClick={handleClick} style={style} className='AdminButton_style' title={text1}>\r\n            {text}\r\n        </Button>*/\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nexport const AdminCard = (props) => {\r\n  const { title } = props\r\n\r\n  return (\r\n    <Card\r\n      title={title}\r\n      bordered={false}\r\n      style={{ width: '100%' }}\r\n      className='AdminCard_style'\r\n    >\r\n      {/* <Space direction='vertical'>{props.children}</Space> */}\r\n      {props.children}\r\n    </Card>\r\n  )\r\n}\r\n","import React, { useEffect, useContext, useState } from 'react'\r\nimport { putAPI, getAPI } from '../../utils/api'\r\nimport {\r\n  getObjectKeys,\r\n  capitalizeFirstLetter,\r\n  strcmp,\r\n} from '../../utils/helper'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Table, Modal } from '../common'\r\n\r\nexport const AdminIndicator = ({ isLink, isStrategy }) => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const {\r\n    dictionary_names,\r\n    setModalIndicator,\r\n    fetchedDictionaryData,\r\n    fetchedIndicatorData,\r\n    setFetchedIndicatorData,\r\n  } = useContext(AppContext)\r\n  let columns = []\r\n  const dataSource = []\r\n\r\n  useEffect(() => {\r\n    getAPI('/sc-analytic-indicators/api/indicators').then((res) => {\r\n      setFetchedIndicatorData({\r\n        loading: false,\r\n        data: res.data,\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  let names = [...dictionary_names, 'Отрасль'] //table column names\r\n  names = names.filter((name) =>\r\n    isStrategy ? name !== 'Сфера' : name !== 'Стратегия 2050'\r\n  )\r\n  names.sort()\r\n\r\n  //get filter and select option drop data\r\n  let filter = {} //table column's filter options\r\n  let option_data = {} // on edit drop select options\r\n  if (!fetchedDictionaryData.loading) {\r\n    fetchedDictionaryData.data.map((item) => {\r\n      filter = {\r\n        ...filter,\r\n        [item.name]: item.options.map((option) => option.name),\r\n      }\r\n\r\n      if (\r\n        !isStrategy ? item.name === 'Сфера' : item.name === 'Стратегия 2050'\r\n      ) {\r\n        const arr = item.options.map((i) => i.options.map((ii) => ii.name))\r\n        filter = { ...filter, Отрасль: [].concat(...arr) }\r\n      }\r\n\r\n      option_data = {\r\n        ...option_data,\r\n        [item.name]: item.options.map((option) => {\r\n          return {\r\n            title: option.name,\r\n            value: option.name,\r\n            id: option.id,\r\n            children: [],\r\n          }\r\n        }),\r\n      }\r\n    })\r\n\r\n    const obj = fetchedDictionaryData.data.find((item) =>\r\n      isStrategy ? item.name === 'Стратегия 2050' : item.name === 'Сфера'\r\n    )\r\n\r\n    option_data = {\r\n      ...option_data,\r\n      Отрасль: [].concat(\r\n        ...obj.options.map((op) =>\r\n          op.options.map((o) => ({\r\n            title: o.name,\r\n            value: o.name,\r\n            id: o.id,\r\n            children: [],\r\n          }))\r\n        )\r\n      ),\r\n    }\r\n  }\r\n\r\n  //set columns and dataSource for table\r\n  columns = [\r\n    {\r\n      title: 'Индикатор',\r\n      dataIndex: 'Индикатор',\r\n      width: 250,\r\n      editable: true,\r\n      render: (text, record) =>\r\n        isLink ? (\r\n          <a\r\n            onClick={() => {\r\n              setOpen(true)\r\n              setModalIndicator({\r\n                name: record.key,\r\n                id: record.id,\r\n              })\r\n            }}\r\n          >\r\n            {text}\r\n          </a>\r\n        ) : (\r\n          text\r\n        ),\r\n      sorter: (a, b) => strcmp(a.Индикатор, b.Индикатор),\r\n      sortDirections: ['ascend'],\r\n    },\r\n    ...names.map((name) => {\r\n      const filtered =\r\n        filter[name] &&\r\n        filter[name].map((option_name) => ({\r\n          text: option_name,\r\n          value: option_name,\r\n        }))\r\n\r\n      return {\r\n        title: capitalizeFirstLetter(\r\n          name === 'Стратегия 2050' ? 'Сфера' : name\r\n        ),\r\n        dataIndex: name,\r\n        editable: true,\r\n        width: 250,\r\n        data: option_data[name],\r\n        filters: filtered,\r\n        type: 'select',\r\n        onFilter: (value, record) => record[name] === value,\r\n      }\r\n    }),\r\n  ]\r\n\r\n  if (!fetchedIndicatorData.loading) {\r\n    const arr = isStrategy\r\n      ? fetchedIndicatorData.data.filter(\r\n          (item) =>\r\n            item.dictionaries.Тип && item.dictionaries.Тип === 'Стратегия'\r\n        )\r\n      : fetchedIndicatorData.data.filter(\r\n          (item) =>\r\n            item.dictionaries.Тип && item.dictionaries.Тип === 'Индикатор'\r\n        )\r\n\r\n    arr.map((indicator) => {\r\n      let ob = {\r\n        id: indicator.id,\r\n        key: indicator.name,\r\n        Индикатор: indicator.name,\r\n      }\r\n      getObjectKeys(indicator.dictionaries).map((dictionary_name) => {\r\n        ob = {\r\n          ...ob,\r\n          [dictionary_name]: indicator.dictionaries[dictionary_name],\r\n        }\r\n      })\r\n      dataSource.push(ob)\r\n    })\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const data_post = {\r\n        name: record['Индикатор'],\r\n        dictionaries: [isStrategy ? 229 : 227],\r\n      }\r\n      let ids = []\r\n      const row = await form.validateFields()\r\n\r\n      const arr = Object.keys(row).map((key) => ({\r\n        name: key,\r\n        value: row[key],\r\n      }))\r\n      const filtered_arr = arr.filter(\r\n        (item) => item.value !== undefined && item.name !== 'Индикатор'\r\n      )\r\n\r\n      filtered_arr.map((item) => {\r\n        if (item.name === 'Отрасль') {\r\n          const name = isStrategy ? 'Стратегия 2050' : 'Сфера'\r\n          const ob = fetchedDictionaryData.data.find((i) => i.name === name)\r\n          const obb = ob.options.find((i) =>\r\n            i.options.find((ii) => ii.name === item.value)\r\n          )\r\n          const o = obb.options.find((i) => i.name === item.value)\r\n          ids = [...ids, o.id]\r\n        } else {\r\n          const ob = fetchedDictionaryData.data.find(\r\n            (i) => i.name === item.name\r\n          )\r\n          const obb = ob.options.find((i) => i.name === item.value)\r\n          ids = [...ids, obb.id]\r\n        }\r\n      })\r\n\r\n      data_post.dictionaries = [...data_post.dictionaries, ...ids]\r\n      putAPI(`/sc-analytic-indicators/api/indicators/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI('/sc-analytic-indicators/api/indicators').then((res) => {\r\n            setFetchedIndicatorData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      form.resetFields()\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal open={open} setOpen={setOpen} className='AdminIndicator_style' />\r\n      <Table\r\n        cols={columns}\r\n        data={dataSource}\r\n        loading={fetchedIndicatorData.loading}\r\n        url={'/sc-analytic-indicators/api/indicators'}\r\n        setFetchedData={setFetchedIndicatorData}\r\n        save={save}\r\n        isLink={isLink}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","export const getObjectKeys = (obj) => Object.keys(obj).map((key) => key)\r\n\r\nexport const capitalizeFirstLetter = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nexport const strcmp = (a, b) => {\r\n  if (a === b) {\r\n    return 0\r\n  }\r\n\r\n  if (a > b) {\r\n    return 1\r\n  }\r\n\r\n  return -1\r\n}\r\n","import React from 'react'\r\nimport { Input } from 'antd'\r\n\r\nexport const AdminInput = ({\r\n  placeholder = 'Новый элемент',\r\n  defaultValue = '',\r\n  required = true,\r\n\r\n  inptRef,\r\n}) => {\r\n  return (\r\n    <Input\r\n      placeholder={placeholder}\r\n      defaultValue={defaultValue}\r\n      required={required}\r\n      allowClear\r\n      ref={inptRef}\r\n      className='AdminInput_style'\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd'\r\n\r\nexport const AdminTabs = (props) => {\r\n  return (\r\n    <Tabs\r\n      defaultActiveKey='1'\r\n      tabPosition={props.position || 'left'}\r\n      className={props.classname || 'Indicators_tab_style'}\r\n    >\r\n      {props.children}\r\n    </Tabs>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Select } from '../common'\r\n\r\nimport { Alert, Form, InputNumber, Button, DatePicker, Space } from 'antd'\r\n\r\nexport const Controllers = ({ plan }) => {\r\n  const [state, setState] = useState({ date: null, value: null })\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n  const { modalIndicator, setFetchedIndicatorInfoData } = useContext(AppContext)\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const handleSubmit = () => {\r\n    if (state.date && state.value) {\r\n      const ob = {\r\n        date: state.date.month\r\n          ? `${state.date.year}-${state.date.month}-15`\r\n          : `${state.date.year}-12-31`,\r\n        'edit-comment': '',\r\n        fact: plan === 'Факт' ? state.value : null,\r\n        planned: plan !== 'Факт' ? state.value : null,\r\n      }\r\n\r\n      setState({ date: null, value: null })\r\n\r\n      postAPI(\r\n        `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`,\r\n        ob\r\n      )\r\n        .then((res) => {\r\n          setStatus({\r\n            alert: true,\r\n            message: 'Успешно',\r\n            description: 'Данные успешно отправлены на сервер',\r\n            type: 'success',\r\n          })\r\n\r\n          setTimeout(\r\n            () =>\r\n              setStatus({\r\n                alert: false,\r\n              }),\r\n            15000\r\n          )\r\n\r\n          getAPI(\r\n            `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n          ).then(function (res) {\r\n            setFetchedIndicatorInfoData({\r\n              data: res.data,\r\n              loading: false,\r\n            })\r\n          })\r\n        })\r\n        .catch((err) => {\r\n          setStatus({\r\n            alert: true,\r\n            message: 'Ошибка',\r\n            description: 'Ошибка с записью данных на сервер',\r\n            type: 'error',\r\n          })\r\n\r\n          setTimeout(\r\n            () =>\r\n              setStatus({\r\n                alert: false,\r\n              }),\r\n            15000\r\n          )\r\n        })\r\n\r\n      form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        15000\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form form={form} className='Controllers_style_inner'>\r\n      <Form.Item className='Controllers_style_item'>\r\n        <Space>\r\n          <Form.Item name='datepicker_field' className='datepicker_field_style'>\r\n            <Space>\r\n              <DatePicker\r\n                onChange={(date, dateString) =>\r\n                  setState((state) => ({\r\n                    ...state,\r\n                    date: { year: dateString },\r\n                  }))\r\n                }\r\n                picker='year'\r\n                allowClear={true}\r\n                placeholder={'Год'}\r\n                locale={locale}\r\n              />\r\n              <Select\r\n                placeholder={'Месяц'}\r\n                data={month}\r\n                style={{ width: 170, background: '#fff', color: '#333' }}\r\n                callBack={(id) =>\r\n                  setState((state) => ({\r\n                    ...state,\r\n                    date: { ...state.date, month: id },\r\n                  }))\r\n                }\r\n              />\r\n            </Space>\r\n          </Form.Item>\r\n          <Form.Item name='number_field'>\r\n            <InputNumber\r\n              onChange={(value) => setState((state) => ({ ...state, value }))}\r\n              placeholder={plan}\r\n            />\r\n          </Form.Item>\r\n          <Button type='primary' onClick={handleSubmit}>\r\n            +\r\n          </Button>\r\n        </Space>\r\n      </Form.Item>\r\n      {status.alert && (\r\n        <Alert\r\n          message={status.message}\r\n          description={status.description}\r\n          type={status.type}\r\n          closable\r\n          onClose={onCloseAlert}\r\n          style={{ margin: 15 }}\r\n        />\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst locale = {\r\n  lang: {\r\n    locale: 'ru',\r\n    placeholder: 'Выбрать дату',\r\n    today: 'Сегодня',\r\n    now: 'Сейчас',\r\n    ok: 'ок',\r\n    clear: 'очистить',\r\n    month: 'Месяц',\r\n    year: 'Год',\r\n    yearFormat: 'YYYY',\r\n    dateFormat: 'M/D/YYYY',\r\n    dayFormat: 'D',\r\n    dateTimeFormat: 'M/D/YYYY HH:mm:ss',\r\n    monthFormat: 'MMMM',\r\n    monthBeforeYear: false,\r\n  },\r\n  timePickerLocale: {\r\n    placeholder: 'Выбрать время',\r\n  },\r\n  dateFormat: 'YYYY-MM-DD',\r\n  dateTimeFormat: 'YYYY-MM-DD HH:mm:ss',\r\n  weekFormat: 'YYYY-wo',\r\n  monthFormat: 'YYYY-MM',\r\n}\r\n\r\nconst month = [\r\n  { id: '01', title: 'Январь', value: 'Январь', children: [] },\r\n  { id: '02', title: 'Февраль', value: 'Февраль', children: [] },\r\n  { id: '03', title: 'Март', value: 'Март', children: [] },\r\n  { id: '04', title: 'Апрель', value: 'Апрель', children: [] },\r\n  { id: '05', title: 'Май', value: 'Май', children: [] },\r\n  { id: '06', title: 'Июнь', value: 'Июнь', children: [] },\r\n  { id: '07', title: 'Июль', value: 'Июль', children: [] },\r\n  { id: '08', title: 'Август', value: 'Август', children: [] },\r\n  {\r\n    id: '09',\r\n    title: 'Сентябрь',\r\n    value: 'Сентябрь',\r\n    children: [],\r\n  },\r\n  {\r\n    id: '10',\r\n    title: 'Октябрь',\r\n    value: 'Октябрь',\r\n    children: [],\r\n  },\r\n  { id: '11', title: 'Ноябрь', value: 'Ноябрь', children: [] },\r\n  {\r\n    id: '12',\r\n    title: 'Декабрь',\r\n    value: 'Декабрь',\r\n    children: [],\r\n  },\r\n]\r\n","import React, { useContext } from 'react'\r\nimport { Table } from '../common'\r\nimport { AppContext } from '../../context/main'\r\nimport { putAPI, getAPI } from '../../utils/api'\r\n\r\nexport const IndicatorInfoTable = ({ plan, isStrategy }) => {\r\n  const {\r\n    fetchedIndicatorInfoData,\r\n    setFetchedIndicatorInfoData,\r\n    modalIndicator,\r\n  } = useContext(AppContext)\r\n\r\n  const columns = [\r\n    {\r\n      title: 'Дата',\r\n      dataIndex: 'year',\r\n      key: 'year',\r\n      render: (text) => <a>{text}</a>,\r\n    },\r\n    {\r\n      title: plan,\r\n      dataIndex: plan,\r\n      key: plan,\r\n      type: 'number',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Дата изменения',\r\n      dataIndex: 'date',\r\n      key: 'date',\r\n    },\r\n    {\r\n      title: 'Коментарий',\r\n      key: 'comment',\r\n      editable: true,\r\n      dataIndex: 'comment',\r\n    },\r\n  ]\r\n\r\n  let dataSource =\r\n    !fetchedIndicatorInfoData.loading &&\r\n    fetchedIndicatorInfoData.data.map((item, index) => {\r\n      const date = item['last-edit'].substr(0, item['last-edit'].indexOf('T'))\r\n      const year = item.date.substr(0, 7)\r\n\r\n      return plan === 'План'\r\n        ? item.planned && {\r\n            key: index,\r\n            id: item.id,\r\n            year,\r\n            План: item.planned,\r\n            date,\r\n            comment: item['edit-comment'],\r\n          }\r\n        : item.fact && {\r\n            key: index,\r\n            id: item.id,\r\n            year,\r\n            Факт: item.fact,\r\n            date,\r\n            comment: item['edit-comment'],\r\n          }\r\n    })\r\n\r\n  dataSource =\r\n    dataSource && dataSource.filter((ob) => ob !== undefined && ob !== null)\r\n\r\n  const edit = (record, form, setEditingKey) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      const ob = fetchedIndicatorInfoData.data.find(\r\n        (item) => item.id === record.id\r\n      )\r\n\r\n      const data_post = {\r\n        date: `${record.year}-01`,\r\n        'edit-comment': row.comment,\r\n        fact: row.Факт ? row.Факт : ob.fact,\r\n        planned: row.План ? row.План : ob.planned,\r\n      }\r\n\r\n      putAPI(`/sc-analytic-indicators/api/indexes/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI(\r\n            `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n          ).then(function (res) {\r\n            setFetchedIndicatorInfoData({\r\n              data: res.data,\r\n              loading: false,\r\n            })\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      cols={columns}\r\n      data={dataSource}\r\n      loading={fetchedIndicatorInfoData.loading}\r\n      url={'/sc-analytic-indicators/api/indexes'}\r\n      setFetchedData={setFetchedIndicatorInfoData}\r\n      url2={`/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`}\r\n      save={save}\r\n      edit={edit}\r\n      \r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Controllers } from './Controllers'\r\nimport { IndicatorInfoTable as Table } from './IndicatorInfoTable'\r\n\r\nexport const IndicatorInfo = ({ plan, isStrategy }) => {\r\n  return (\r\n    <div className='Controllers_style'>\r\n      <Controllers plan={plan} />\r\n      <Table plan={plan} isStrategy={isStrategy} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Modal, Tabs } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI } from '../../utils/api'\r\n\r\nimport { AdminTabs } from './AdminTabs'\r\nimport { IndicatorInfo } from '../IndicatorInfo'\r\n\r\nexport const AdminModal = ({ open, setOpen }) => {\r\n  const { modalIndicator, setFetchedIndicatorInfoData } = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    if (modalIndicator) {\r\n      getAPI(\r\n        `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n      ).then((res) =>\r\n        setFetchedIndicatorInfoData((state) => ({\r\n          ...state,\r\n          data: res.data,\r\n          loading: false,\r\n        }))\r\n      )\r\n    }\r\n\r\n    return () => setFetchedIndicatorInfoData({ loading: true })\r\n  }, [modalIndicator, setFetchedIndicatorInfoData])\r\n\r\n  const { TabPane } = Tabs\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={modalIndicator && modalIndicator.name}\r\n      visible={open}\r\n      width={'auto'}\r\n      onOk={handleCloseModal}\r\n      onCancel={handleCloseModal}\r\n      className='AdminModal_style'\r\n    >\r\n      <AdminTabs position={'top'}>\r\n        <TabPane tab={'План'} key='1'>\r\n          <IndicatorInfo plan={'План'} />\r\n        </TabPane>\r\n        <TabPane tab={'Факт'} key='2'>\r\n          <IndicatorInfo plan={'Факт'} />\r\n        </TabPane>\r\n      </AdminTabs>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useRef, useContext } from 'react'\r\nimport { Input } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const AdminSearch = ({ style, ref }) => {\r\n  const inptRef = useRef()\r\n  const { setSearchText } = useContext(AppContext)\r\n\r\n  const handleSearch = () => setSearchText(inptRef.current.input.value)\r\n\r\n  return (\r\n    <Input\r\n      placeholder='Поиск справочника'\r\n      defaultValue=''\r\n      ref={inptRef}\r\n      allowClear\r\n      onChange={handleSearch}\r\n      /* style={style}*/\r\n      className='AdminSearch_style'\r\n    />\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TreeSelect } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const AdminSelect = ({\r\n  data,\r\n  placeholder = 'Выбрать справочник',\r\n  style = { margin: 5, marginLeft: 0, marginRight: 8 },\r\n  callBack,\r\n  defaultValue,\r\n\r\n}) => {\r\n  const {\r\n    setSelectedDictionaryName,\r\n    setSelectedIndustry,\r\n    dictionary_names,\r\n  } = useContext(AppContext)\r\n\r\n  const handleChangeDictionaryName = (value) => setSelectedDictionaryName(value)\r\n  const handleChangeOptionName = (value) => {\r\n    const selected_value = data.find((item) => item.value === value)\r\n    setSelectedIndustry(value)\r\n    callBack && selected_value && callBack(selected_value.id)\r\n  }\r\n\r\n  const setTreeData = (data) =>\r\n    data.map((name) => ({\r\n      title: name,\r\n      value: name,\r\n      children: [],\r\n    }))\r\n\r\n  const renderSelect = () =>\r\n    data ? (\r\n      <TreeSelect\r\n        style={style}\r\n        allowClear\r\n        placeholder={placeholder}\r\n        treeData={data}\r\n        onChange={handleChangeOptionName}\r\n        className='AdminSelect_style'\r\n        defaultValue={defaultValue}\r\n      />\r\n    ) : (\r\n      <TreeSelect\r\n        placeholder={placeholder}\r\n        onChange={handleChangeDictionaryName}\r\n        style={style}\r\n        treeData={setTreeData(dictionary_names)}\r\n        className='AdminSelect_style'\r\n      />\r\n    )\r\n\r\n  return <>{renderSelect()}</>\r\n}\r\n","import React from 'react'\r\n\r\nimport { Form, Input, InputNumber, Select } from 'antd'\r\n\r\nexport const EditableCell = ({\r\n  data,\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const switchCase = (type) => {\r\n    switch (type) {\r\n      case 'select':\r\n        return (\r\n          <Select placeholder='Выбрать значение' allowClear>\r\n            {data &&\r\n              data.map((item) => (\r\n                <Select.Option\r\n                  key={`${item.title}-${item.id}`}\r\n                  value={item.title}\r\n                >\r\n                  {item.title}\r\n                </Select.Option>\r\n              ))}\r\n          </Select>\r\n        )\r\n      case 'number':\r\n        return <InputNumber className='Edit_input_style' />\r\n      default:\r\n        return <Input className='Edit_input_style' />\r\n    }\r\n  }\r\n\r\n  const inputNode = switchCase(inputType)\r\n\r\n  return (\r\n    <td {...restProps} className='Table_td_style_line'>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={\r\n            inputType !== 'select' &&\r\n            inputType !== 'date' &&\r\n            inputType !== 'number' && [\r\n              {\r\n                required: true,\r\n                message: `это поле необходимо заполнить!`,\r\n              },\r\n            ]\r\n          }\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  )\r\n}\r\n","import React, { useState, useContext, useEffect } from 'react'\r\nimport { Table, Form, Space, Popconfirm } from 'antd'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from '@ant-design/icons'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI, deleteAPI } from '../../utils/api'\r\n\r\nimport { EditableCell } from './EditableCell'\r\n\r\nexport const AdminTable = ({\r\n  cols,\r\n  data,\r\n  loading,\r\n  url,\r\n  url2,\r\n  setFetchedData,\r\n  save,\r\n  isLink,\r\n}) => {\r\n  const { searchText } = useContext(AppContext)\r\n  const [filtered, setFiltered] = useState()\r\n  const [editingKey, setEditingKey] = useState('')\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (data && searchText) {\r\n      setFiltered(\r\n        data.filter((item) => {\r\n          let obb =\r\n            item.children &&\r\n            item.children.some((ob) => {\r\n              const isNestedFilter = ob.key\r\n                .toLowerCase()\r\n                .includes(searchText.toLowerCase())\r\n              return isNestedFilter\r\n            })\r\n\r\n          const isFilter = item.key\r\n            .toLowerCase()\r\n            .includes(searchText.toLowerCase())\r\n          return obb ? obb : isFilter\r\n        })\r\n      )\r\n    }\r\n  }, [data, searchText])\r\n\r\n  const isEditing = (record) => record.key === editingKey\r\n\r\n  const edit = (record, form, setEditingKey) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const arr = isLink\r\n    ? cols\r\n    : [\r\n        ...cols,\r\n        {\r\n          title: 'Действие',\r\n          dataIndex: '',\r\n          key: 'x',\r\n          render: (_, record) => {\r\n            const editable = isEditing(record)\r\n            return editable ? (\r\n              <span>\r\n                <a\r\n                  onClick={() => save(record, form, setEditingKey)}\r\n                  style={{\r\n                    marginRight: 8,\r\n                  }}\r\n                >\r\n                  <SaveOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Сохранить'\r\n                  />\r\n                </a>\r\n                <Popconfirm\r\n                  title='Вы уверены что хотите оменить изменения?'\r\n                  onConfirm={cancel}\r\n                >\r\n                  <CloseOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Отменить'\r\n                  />\r\n                </Popconfirm>\r\n              </span>\r\n            ) : (\r\n              <Space>\r\n                <a\r\n                  disabled={editingKey !== ''}\r\n                  onClick={() => edit(record, form, setEditingKey)}\r\n                >\r\n                  <EditOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Редактировать'\r\n                  />\r\n                </a>\r\n                <Popconfirm\r\n                  title='Вы уверены что хотите удалить даныне?'\r\n                  onConfirm={() => handleDelete(record.id)}\r\n                >\r\n                  <DeleteOutlined\r\n                    className='icon_edit_btn_style'\r\n                    title='Удалить'\r\n                  />\r\n                </Popconfirm>\r\n              </Space>\r\n            )\r\n          },\r\n        },\r\n      ]\r\n\r\n  cols = cols[0].title === 'Все справочники' ? cols : arr\r\n\r\n  const handleDelete = (id) => {\r\n    deleteAPI(`${url}/${id}`).then((res) =>\r\n      getAPI(url2 ? url2 : url)\r\n        .then((res) =>\r\n          setFetchedData({\r\n            loading: false,\r\n            data: res.data,\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n    )\r\n  }\r\n\r\n  const mergedColumns = cols.map((col, index) => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => {\r\n        return {\r\n          record,\r\n          setIndicator: col.setIndicator,\r\n          inputType: col.type,\r\n          dataIndex: col.dataIndex,\r\n          title: col.title,\r\n          data: col.data,\r\n          editing: isEditing(record),\r\n          callBack: col.callBack,\r\n        }\r\n      },\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        locale={{\r\n          filterTitle: 'Меню фильтра',\r\n          filterConfirm: 'Ок',\r\n          filterReset: 'Сбросить',\r\n          filterEmptyText: 'Нет фильтров',\r\n          selectAll: 'Выбрать текущую страницу',\r\n          selectInvert: 'Invert current page',\r\n          selectionAll: 'Выбрать все',\r\n          sortTitle: 'Сортировать',\r\n          expand: 'Expand row',\r\n          collapse: 'Collapse row',\r\n          triggerDesc: 'Сортировать по убыванию',\r\n          triggerAsc: 'Сортировать по возрастанию',\r\n          cancelSort: 'Отменить сортировку',\r\n        }}\r\n        columns={mergedColumns}\r\n        dataSource={searchText ? filtered : data}\r\n        loading={loading}\r\n        pagination={{\r\n          pageSizeOptions: ['10', '20', '25', '30'],\r\n          showSizeChanger: true,\r\n          locale: { items_per_page: '' },\r\n          onChange: cancel,\r\n        }}\r\n        className='AdminTable_style'\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { AdminTable as Table } from '../common/AdminTable'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI, putAPI } from '../../utils/api'\r\n\r\nexport const DictionaryTable = () => {\r\n  const {\r\n    selectedDictionaryName,\r\n    fetchedDictionaryData,\r\n    setFetchedDictionaryData,\r\n  } = useContext(AppContext)\r\n  let columns = []\r\n  let data = []\r\n\r\n  columns = selectedDictionaryName\r\n    ? [\r\n        {\r\n          title: 'Наименование',\r\n          dataIndex: selectedDictionaryName,\r\n          editable: true,\r\n          width: '90%',\r\n        },\r\n      ]\r\n    : [\r\n        {\r\n          title: 'Наименование',\r\n          dataIndex: 'All',\r\n          width: '90%',\r\n          padding: '10px',\r\n        },\r\n      ]\r\n\r\n  if (!fetchedDictionaryData.loading) {\r\n    const arr = fetchedDictionaryData.data.filter((item) => item.name !== 'Тип')\r\n\r\n    const obb = arr.find((item) => item.name === selectedDictionaryName)\r\n\r\n    data = selectedDictionaryName\r\n      ? obb.options.map((item) =>\r\n          item.options.length > 0\r\n            ? {\r\n                key: item.name,\r\n                id: item.id,\r\n                tag: item.tag,\r\n                'parent-id': obb.id,\r\n                [item.tag]: item.name,\r\n                children: item.options.map((ob) => ({\r\n                  key: ob.name,\r\n                  [item.tag]: ob.name,\r\n                  'parent-id': item.id,\r\n                  tag: item.tag,\r\n                  id: ob.id,\r\n                })),\r\n              }\r\n            : {\r\n                key: item.name,\r\n                id: item.id,\r\n                tag: item.tag,\r\n                'parent-id': obb.id,\r\n                [selectedDictionaryName]: item.name,\r\n              }\r\n        )\r\n      : [].concat(\r\n          ...arr.map((item) =>\r\n            item.name === 'Сфера' || selectedDictionaryName === 'Стратегия 2050'\r\n              ? item.options.map((op) => ({\r\n                  key: op.name,\r\n                  All: op.name,\r\n                  children: op.options.map((ob) => ({\r\n                    key: ob.name,\r\n                    All: ob.name,\r\n                  })),\r\n                }))\r\n              : {\r\n                  key: item.name,\r\n                  All: item.name,\r\n                  children: item.options.map((ob) => ({\r\n                    key: ob.name,\r\n                    All: ob.name,\r\n                  })),\r\n                }\r\n          )\r\n        )\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n\r\n      const data_post = {\r\n        name: row[record.tag],\r\n        tag: record.tag,\r\n      }\r\n\r\n      putAPI(`/sc-analytic-indicators/api/dictionaries/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI(`/sc-analytic-indicators/api/dictionaries`).then((res) =>\r\n            setFetchedDictionaryData({ loading: false, data: res.data })\r\n          )\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      cols={columns}\r\n      data={data}\r\n      loading={fetchedDictionaryData.loading}\r\n      url={'/sc-analytic-indicators/api/dictionaries'}\r\n      setFetchedData={setFetchedDictionaryData}\r\n      save={save}\r\n    />\r\n  )\r\n}\r\n","import React, { useState, useRef, useContext } from 'react'\r\nimport { Alert, Form } from 'antd'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { Button, Input, Select } from '../common'\r\n\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const Controllers = ({ ant_form, setIsError }) => {\r\n  const inptRef = useRef()\r\n  const inptRef2 = useRef()\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n\r\n  const {\r\n    selectedIndustry,\r\n    selectedDictionaryName,\r\n    fetchedDictionaryData,\r\n    setFetchedDictionaryData,\r\n  } = useContext(AppContext)\r\n\r\n  let obb\r\n  if (!fetchedDictionaryData.loading) {\r\n    obb = fetchedDictionaryData.data.find(\r\n      (item) => item.name === selectedDictionaryName\r\n    )\r\n  }\r\n\r\n  const handleAddDictionary = () => {\r\n    if (inptRef.current.input.value) {\r\n      const name = inptRef.current.input.value\r\n      const data = {\r\n        'parent-id': obb.id,\r\n        tag: selectedDictionaryName,\r\n        name,\r\n        options: [],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/dictionaries', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/dictionaries')\r\n          .then((res) =>\r\n            setFetchedDictionaryData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          )\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n\r\n      ant_form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите необходимое название для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleAddDictionaryChild = () => {\r\n    if (selectedIndustry && inptRef2.current.input.value) {\r\n      const name = inptRef2.current.input.value\r\n\r\n      const ob = obb.options.find((item) => item.name === selectedIndustry)\r\n      const data = {\r\n        'parent-id': ob.id,\r\n        tag: 'Отрасль',\r\n        name,\r\n        options: [],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/dictionaries', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/dictionaries')\r\n          .then((res) =>\r\n            setFetchedDictionaryData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          )\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n      ant_form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  let names = []\r\n  if (obb) {\r\n    names = obb.options.map((item) => ({\r\n      id: item.id,\r\n      title: item.name,\r\n      value: item.name,\r\n      children: [],\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {selectedDictionaryName && (\r\n        <Form.Item name='dictionary-controllers Controllers_style'>\r\n          <div className='form_add_sphere Controllers_style_inner'>\r\n            <Input\r\n              inptRef={inptRef}\r\n              required={true}\r\n              placeholder={\r\n                selectedDictionaryName === 'Сфера' ||\r\n                selectedDictionaryName === 'Стратегия 2050'\r\n                  ? 'Добавить новую сферу'\r\n                  : 'Добавить новый элемент'\r\n              }\r\n            />\r\n            <Button handleAdd={handleAddDictionary} text1={'Добавить сферу'} />\r\n          </div>\r\n        </Form.Item>\r\n      )}\r\n      {selectedDictionaryName === 'Сфера' ||\r\n      selectedDictionaryName === 'Стратегия 2050' ? (\r\n        <Form.Item className='form_add_sphere_wrap'>\r\n          <Select data={names} placeholder='Сделайте выбор' />\r\n          <div className='form_add_sphere'>\r\n            <Form.Item name='dictionary-child-controllers'>\r\n              <Input\r\n                inptRef={inptRef2}\r\n                placeholder={'Добавить новую отрасль'}\r\n                required={true}\r\n              />\r\n            </Form.Item>\r\n            <Button\r\n              handleAdd={handleAddDictionaryChild}\r\n              text2={'Добавить отрасль'}\r\n            />\r\n          </div>\r\n        </Form.Item>\r\n      ) : null}\r\n      {status.alert && (\r\n        <Alert\r\n          message={status.message}\r\n          description={status.description}\r\n          type={status.type}\r\n          closable\r\n          onClose={onCloseAlert}\r\n          style={{ margin: 15 }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { Form } from 'antd'\r\n\r\nimport { getAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Select, Search } from '../common'\r\nimport { DictionaryTable as Table } from './DictionaryTable'\r\nimport { Controllers } from './Controllers'\r\n\r\nexport const Dictionary = () => {\r\n  const [form] = Form.useForm()\r\n\r\n  const { setFetchedDictionaryData } = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    getAPI('/sc-analytic-indicators/api/dictionaries').then((res) => {\r\n      setFetchedDictionaryData({\r\n        loading: false,\r\n        data: res.data,\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n        <div className='first_stage_filter'>\r\n          <Select />\r\n        </div>\r\n      </Form.Item>\r\n      <Controllers ant_form={form} />\r\n      <Form.Item>\r\n        <Search style={{ width: '40%', margin: '5 0', marginRight: 8 }} />\r\n        <Table />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Dictionary } from './components/Dictionary'\r\n\r\nexport const CustomDictionary = () => {\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <Dictionary />\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState, useContext } from 'react'\r\nimport { Alert, Form } from 'antd'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Button, Input, Select } from '../common'\r\n\r\nexport const Controllers = ({ isStrategy }) => {\r\n  const [indicator, setIndicator] = useState([])\r\n  const {\r\n    fetchedDictionaryData,\r\n    setFetchedIndicatorData,\r\n    setFetchedIndicatorStrategyData,\r\n  } = useContext(AppContext)\r\n\r\n  const inputRef = useRef()\r\n  const [form] = Form.useForm()\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n\r\n  const handleSubmit = () => {\r\n    if (inputRef.current.input.value) {\r\n      const typeId = isStrategy ? 229 : 227\r\n      const data = {\r\n        name: inputRef.current.input.value,\r\n        dictionaries: [...indicator, typeId],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/indicators', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/indicators')\r\n          .then((res) => {\r\n            setFetchedIndicatorData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n            setFetchedIndicatorStrategyData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n\r\n      form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleIndicator = (id) => {\r\n    setIndicator((state) => [...state, id])\r\n  }\r\n\r\n  const renderSelect = () => {\r\n    let selects = []\r\n    let industry = []\r\n    if (!fetchedDictionaryData.loading) {\r\n      industry = fetchedDictionaryData.data\r\n        .find((item) =>\r\n          isStrategy ? item.name === 'Стратегия 2050' : item.name === 'Сфера'\r\n        )\r\n        .options.map((option) =>\r\n          option.options.map((ob) => ({ name: ob.name, id: ob.id }))\r\n        )\r\n\r\n      const arr = fetchedDictionaryData.data.filter(\r\n        (item) => item.name !== 'Тип'\r\n      )\r\n\r\n      const ob = arr.filter((item) =>\r\n        !isStrategy ? item.name !== 'Стратегия 2050' : item.name !== 'Сфера'\r\n      )\r\n\r\n      selects = ob.map((item, index) => {\r\n        const name = isStrategy ? 'Стратегия 2050' : 'Сфера'\r\n        const data = item.options.map((option) =>\r\n          item.name === name\r\n            ? {\r\n                id: option.id,\r\n                title: option.name,\r\n                value: option.name,\r\n                children: [],\r\n              }\r\n            : {\r\n                id: option.id,\r\n                title: option.name,\r\n                value: option.name,\r\n                children: option.options.map((ob) => {\r\n                  return {\r\n                    id: ob.id,\r\n                    title: ob.name,\r\n                    value: ob.name,\r\n                    children: [],\r\n                  }\r\n                }),\r\n              }\r\n        )\r\n\r\n        return (\r\n          <Select\r\n            key={index}\r\n            placeholder={item.name === 'Стратегия 2050' ? 'Сфера' : item.name}\r\n            data={data}\r\n            callBack={(id) => handleIndicator(id)}\r\n          />\r\n        )\r\n      })\r\n    }\r\n\r\n    selects.push(\r\n      <Select\r\n        key={45}\r\n        placeholder={'Отрасль'}\r\n        data={[].concat(...industry).map((item) => ({\r\n          id: item.id,\r\n          title: item.name,\r\n          value: item.name,\r\n          children: [],\r\n        }))}\r\n        callBack={(id) => handleIndicator(id)}\r\n      />\r\n    )\r\n\r\n    return selects.map((select) => select)\r\n  }\r\n\r\n  return (\r\n    <div className={'form_indicators'}>\r\n      {!fetchedDictionaryData.loading && (\r\n        <Form form={form}>\r\n          <Form.Item>\r\n            <Form.Item name='input'>\r\n              <Input\r\n                placeholder={'Введите название индикатора'}\r\n                inptRef={inputRef}\r\n                style={{\r\n                  margin: 20,\r\n                  marginLeft: 0,\r\n                  marginTop: 0,\r\n                  minWidth: 250,\r\n                  width: 250,\r\n                }}\r\n              />\r\n            </Form.Item>\r\n            {renderSelect()}\r\n            <Button\r\n              type='primary'\r\n              handleAdd={handleSubmit}\r\n              text3={'Добавить индикатор'}\r\n            />\r\n          </Form.Item>\r\n          {status.alert && (\r\n            <Alert\r\n              message={status.message}\r\n              description={status.description}\r\n              type={status.type}\r\n              closable\r\n              onClose={onCloseAlert}\r\n              style={{ margin: 15 }}\r\n            />\r\n          )}\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\n\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI } from '../../utils/api'\r\n\r\nimport { Controllers } from './Controllers'\r\nimport { Indicator, AdminTabs } from '../common'\r\nimport { Tabs } from 'antd'\r\n\r\nexport const Indicators = () => {\r\n  const { TabPane } = Tabs\r\n\r\n  const { fetchedDictionaryData, setFetchedDictionaryData } = useContext(\r\n    AppContext\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!fetchedDictionaryData.data) {\r\n      getAPI('/sc-analytic-indicators/api/dictionaries').then((res) => {\r\n        setFetchedDictionaryData({\r\n          loading: false,\r\n          data: res.data,\r\n        })\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <AdminTabs position={'top'}>\r\n      <TabPane tab='Панель администратора' key='1'>\r\n        <Controllers />\r\n        <Indicator />\r\n      </TabPane>\r\n      <TabPane tab='Индикатор стратегии' key='2'>\r\n        <Controllers isStrategy={true} />\r\n        <Indicator isStrategy={true} />\r\n      </TabPane>\r\n    </AdminTabs>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Indicators } from './components/Indicators'\r\n\r\nexport const CustomIndicator = () => {\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <Indicators />\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Tabs } from 'antd'\r\nimport { Card, Indicator, AdminTabs } from './components/common'\r\n\r\nexport const CustomIndicatorInfo = () => {\r\n  const { TabPane } = Tabs\r\n\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <AdminTabs position={'top'}>\r\n          <TabPane tab='Панель администратора' key='1'>\r\n            <Card>\r\n              <Indicator isLink={true} />\r\n            </Card>\r\n          </TabPane>\r\n          <TabPane tab='Индикатор стратегии' key='2'>\r\n            <Card>\r\n              <Indicator isStrategy={true} isLink={true} />\r\n            </Card>\r\n          </TabPane>\r\n        </AdminTabs>\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { ProtectedRoute } from './components/ProtectedRoute'\r\n\r\n//components\r\n// import { InfoPanel, Leaders } from './modules/CIP'\r\nimport { SignIn } from './components/SignIn'\r\nimport Users from './modules/Users'\r\nimport Roles from './modules/Roles'\r\nimport Roadmap from './modules/Roadmap'\r\nimport { Dictionary, Indicator, IndicatorInfo } from './modules/CMD'\r\n\r\nimport { Home } from './components/Home'\r\n\r\nexport const Routes = () => {\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from='/' to='/Роли' />\r\n\r\n      {/* <Route path='/Руководители' component={Leaders} /> */}\r\n      {/* <Route path='/Инфопанели' component={InfoPanel} /> */}\r\n      <ProtectedRoute exact path='/Роли' component={Roles} />\r\n      <ProtectedRoute exact path='/Пользователи' component={Users} />\r\n      <ProtectedRoute exact path='/Карта ремонтных работ' component={Roadmap} />\r\n      <Route\r\n        path='/Справочники'\r\n        component={() => (\r\n          <Home>\r\n            <Dictionary />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Аналитические индикаторы'\r\n        component={() => (\r\n          <Home>\r\n            <Indicator />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Показатели индикаторов'\r\n        component={() => (\r\n          <Home>\r\n            <IndicatorInfo />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route exact path='/авторизация' component={SignIn} />\r\n      <Route exact path='*' render={() => <div>Page not found</div>} />\r\n    </Switch>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Routes } from './Routes'\r\n\r\n//styles\r\nimport 'antd/dist/antd.css'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  return <Routes />\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport adminReducer from './features/admin/adminSlice'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    admin: adminReducer,\r\n  },\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <React.StrictMode> */}\r\n    <Router basename='/admin'>\r\n      <App />\r\n    </Router>\r\n    {/* </React.StrictMode> */}\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}