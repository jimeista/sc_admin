{"version":3,"sources":["features/admin/adminSlice.js","features/roadmap/roadmapSlice.js","features/roles/rolesSlice.js","features/users/usersSlice.js","features/heads/headsSlice.js","utils/menu_helper.js","components/SideNavMenu.js","components/MainContentWrapper.js","components/Home.js","components/ProtectedRoute.js","components/form/SignInForm.js","common/EditableCell.js","common/Table.js","utils/users_table.js","utils/users_helper.js","modules/Users/UserTable.js","modules/Users/UserControllers.js","modules/Users/Users.js","modules/Roles/RoleControllers.js","utils/roles_table.js","modules/Roles/RoleTable.js","modules/Roles/Roles.js","modules/Roadmap/utils/yandex_helper.js","modules/Roadmap/common/YandexMap.js","modules/Roadmap/utils/usePrevious.js","modules/Roadmap/common/Steps.js","modules/Roadmap/common/Tabs.js","modules/Roadmap/utils/worklist_form.js","modules/Roadmap/components/WorkList/form/WorkDescription.js","modules/Roadmap/components/WorkList/form/WorkContractor.js","modules/Roadmap/components/WorkList/form/WorkStatus.js","modules/Roadmap/utils/helper.js","modules/Roadmap/components/WorkList/form/WorkConfirm.js","modules/Roadmap/components/WorkList/form/StepsWrapper.js","modules/Roadmap/components/WorkList/WorkListModal.js","modules/Roadmap/components/WorkList/WorkDetailsModal.js","modules/Roadmap/utils/table_helper.js","modules/Roadmap/components/WorkList/WorkListTable.js","modules/Roadmap/components/WorkList/index.js","modules/Roadmap/components/CrossList/form/SelectGroup.js","modules/Roadmap/components/CrossList/form/AddCrossWorks.js","modules/Roadmap/components/CrossList/CrossListModal.js","modules/Roadmap/components/CrossList/CrossDetailsModal.js","modules/Roadmap/components/CrossList/CrossListTable.js","modules/Roadmap/components/CrossList/index.js","modules/Roadmap/components/RoadMap.js","modules/Roadmap/index.js","modules/Heads/HeadsTable.js","utils/heads_table.js","common/Modal.js","modules/Heads/HeadsModal.js","modules/Heads/Heads.js","modules/CMD/context/main.js","modules/CMD/utils/api.js","modules/CMD/components/common/AdminButton.js","modules/CMD/components/common/AdminCard.js","modules/CMD/components/common/EditableCell.js","modules/CMD/components/common/AdminTable.js","modules/CMD/components/common/AdminIndicator.js","modules/CMD/utils/helper.js","modules/CMD/components/common/AdminInput.js","modules/CMD/components/common/AdminTabs.js","modules/CMD/components/IndicatorInfo/Controllers.js","modules/CMD/components/IndicatorInfo/IndicatorInfoTable.js","modules/CMD/components/IndicatorInfo/index.js","modules/CMD/components/common/AdminModal.js","modules/CMD/components/common/AdminSearch.js","modules/CMD/components/common/AdminSelect.js","modules/CMD/components/Dictionary/DictionaryTable.js","modules/CMD/components/Dictionary/Controllers.js","modules/CMD/components/Dictionary/index.js","modules/CMD/Dictionary.js","modules/CMD/components/Indicators/Controllers.js","modules/CMD/components/Indicators/index.js","modules/CMD/Indicator.js","modules/CMD/IndicatorInfo.js","Routes.js","App.js","index.js"],"names":["getAuth","createAsyncThunk","data","a","axios","get","config","then","res","status","localStorage","setItem","JSON","stringify","user","auth","getAuthorities","url","id","role","repr","getOrganisationList","catch","err","console","log","putOrganisationList","put","adminSlice","createSlice","name","initialState","error","authorities","organisationList","reducers","logout","state","setAuth","action","payload","setAuthorities","extraReducers","pending","fulfilled","rejected","map","i","actions","BASE_ROADMAP_URL","getRoadmapOrganisations","r","getRoadmapRegions","getRoadmapCategories","getRoadmap","getIntersections","postRoadmap","ob","post","geometries","coordinates","mapData","type","parse","postIntersections","initialPost","intersection","putRoadmap","reedit","delete","deleteRoadmap","deleteIntersection","roadmapSlice","organisations","regions","categories","formData","current","intersectionsMapData","editedId","deletedId","deletedIntersectionId","intersections","formValidate","setCurrent","setMapData","setIntersectionsMapData","resetMapData","resetIntersectionsMapData","resetData","resetFormData","resetIntersectionsData","setEditedId","setDeletedId","setDeletedIntersectionId","category","find","region","organisation","index","findIndex","splice","setIntersection","getRoles","getModules","getRoleModules","modules","roles","data_","postRoleModules","post_new_role_module","permitted_modules","record_new_role_module","putRoleModule","removed","length","added","deleteRoleModule","role_modules","resetRoles","resetModules","resetRoleModules","failed","record","indx","getUsers","postNewUser","putUser","deleteUser","getHeads","putHeads","server","client","headsSlice","checkModule","menu","module","configure","submenu","item","menuitems","SubMenu","Menu","React","memo","width","useState","collapsed","btnheight","setState","useSelector","admin","useEffect","disabled","useMemo","forEach","m","sidenavmenu_","Object","values","setSideNavMenu","key","icon","MailOutlined","ContainerOutlined","title","className","menuitem","Item","FileOutlined","to","style","onClick","height","MenuUnfoldOutlined","defaultSelectedKeys","defaultOpenKeys","mode","inlineCollapsed","children","dispatch","useDispatch","history","useHistory","UserOutlined","margin","abbreviation","removeItem","push","window","innerWidth","setWidth","resizeListener","document","documentElement","clientWidth","body","addEventListener","removeEventListener","display","padding","ProtectedRoute","Component","component","rest","render","props","getItem","pathname","from","location","SignInForm","Form","useForm","form","message","success","onSubmit","validateFields","btoa","username","password","headers","Authorization","rules","required","placeholder","resetFields","EditableCell","editing","dataIndex","inputType","notRequired","restProps","Option","Select","inputNode","allowClear","value","tagRender","label","closable","onClose","marginRight","marginBottom","options","min","max","formatter","parser","replace","switchCase","CustomTable","editingKey","setEditingKey","arr","columns","align","_","isEditing","onSave","SaveOutlined","onConfirm","cancel","CloseOutlined","isEditable","edit","EditOutlined","isDeletable","onDelete","DeleteOutlined","setFieldsValue","row","newData","handleEdit","handleDelete","errInfo","mergedColumns","col","editable","onCell","components","cell","bordered","dataSource","rowClassName","pagination","onChange","loading","setColumnsHelper","tags","tag","color","toUpperCase","onRequest","o","filter","includes","split","setDataSource","setDataSourceHelper","setData","record_","onAdd","htmlType","withRouter","users","role_options","organisation_options","modules_options","useCallback","ids","setRoleColumns","setRoleDataSource","setOptions","renderGeoObjects","geo","geometry","fillColor","strokeColor","strokeWidth","editorDrawingCursor","editorMaxPoints","mapState","center","zoom","CustomYandexMap","roadmap","active","setActive","polygons","setPolygons","previousState","ref","useRef","usePrevious","geoObject","draw","instanceRef","createGeoObject","editor","startDrawing","events","add","e","originalEvent","newCoordinates","event","stopDrawing","geoObjects","justifyContent","alignItems","renderButtons","minWidth","minHeight","defaultState","Step","Steps","CustomSteps","steps","callback","validate","size","content","paddingLeft","CustomTabs","tabs","TabPane","Tabs","tab","child","TextArea","Input","renderTextArea","isOpen","valuePropName","hidden","getValueFromEvent","target","renderDatePicker","picker","handleChange","text","picker_","format","Group","compact","string","moment","marginLeft","checked","upload_props","listType","authorization","info","file","fileList","WorkDescription","iscanvas","setCanvas","isclosured","setClosured","pickerStart","setPickerStart","pickerEnd","setPickerEnd","getFieldValue","prop","hasFeedback","op","renderSelects","noStyle","UploadOutlined","WorkContractor","phone","setPhone","country","WorkStatus","setDisabled","nameEnToRuWorkListHelper","prepareToShowDetailsObToArr","keys","undefined","validateRoadWorkForm","percentage","is_hidden","is_canceled","commentary","setCoordinates","ii","y","x","k","WorkConfirm","renderForm","new_arr","StepsWrapper","setSteps","WorkListModal","visible","setVisible","postFormData","onOk","onCancel","footer","WorkDetailsModal","onCloseModal","putFormData","setFilterSelectsHelper","response","result","date_filters","reverse","WorkListTable","setRecord","filtered","setFiltered","filters","onFilter","indexOf","rule","sorter","b","sortDirections","setWorkListTableColumnsHelper","address","toLowerCase","toString","WorkList","order","AddCrossWorks","count","setCount","flexWrap","marginTop","shape","CrossListModal","area","CrossDetailsModal","array","setArray","list","CrossListTable","setCrossListDataSourceHelper","cols","setCrossListTableColumnsHelper","isIncluded","CrossList","RoadMap","position","path","src","CustomModal","showModal","handleOk","handleCancel","this","btntext","btnstyle","heads","AppContext","createContext","AppContextProvider","selectedValue","setSelectedValue","selectedDictionaryName","setSelectedDictionaryName","selectedIndustry","setSelectedIndustry","filteredData","setFilteredData","indicators","setIndicators","searchText","setSearchText","fetchedDictionaryData","setFetchedDictionaryData","fetchedIndicatorInfoData","setFetchedIndicatorInfoData","fetchedIndicatorData","setFetchedIndicatorData","fetchedIndicatorStrategyData","setFetchedIndicatorStrategyData","modalIndicator","setModalIndicator","Provider","dictionary_names","getAPI","postAPI","putAPI","deleteAPI","AdminButton","handleAdd","text2","text1","text3","handleClick","renderBTN","AdminCard","url2","setFetchedData","save","isLink","useContext","obb","some","isFilter","locale","filterTitle","filterConfirm","filterReset","filterEmptyText","selectAll","selectInvert","selectionAll","sortTitle","expand","collapse","triggerDesc","triggerAsc","cancelSort","pageSizeOptions","showSizeChanger","items_per_page","AdminIndicator","isStrategy","open","setOpen","datasource_","dictionaries","Тип","indicator","obj","Индикатор","dictionary_name","names","sort","option_data","option","Отрасль","concat","strcmp","option_name","charAt","slice","data_post","AdminInput","defaultValue","inptRef","AdminTabs","defaultActiveKey","tabPosition","classname","Controllers","plan","date","alert","setStatus","dateString","year","month","background","callBack","fact","planned","description","setTimeout","lang","today","now","ok","clear","yearFormat","dateFormat","dayFormat","dateTimeFormat","monthFormat","monthBeforeYear","timePickerLocale","weekFormat","IndicatorInfoTable","dataSource_","substr","План","comment","Факт","IndicatorInfo","AdminModal","handleCloseModal","AdminSearch","input","AdminSelect","handleChangeDictionaryName","handleChangeOptionName","selected_value","setTreeData","treeData","virtual","DictionaryTable","All","ant_form","inptRef2","Dictionary","CustomDictionary","setIndicator","inputRef","handleIndicator","renderSelect","selects","industry","select","typeId","Indicators","CustomIndicator","CustomIndicatorInfo","exact","Roles","Users","Roadmap","Heads","App","store","configureStore","reducer","roadmapReducer","adminReducer","rolesReducer","usersReducer","headsReducer","ReactDOM","basename","getElementById"],"mappings":"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","file":"static/js/main.b22ff3e0.chunk.js","sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getAuth = createAsyncThunk('admin/getAuth', async (data) => {\r\n  const url = '/sc-api-gateway/acl/users/current'\r\n  let res = await axios.get(url, data.config).then((res) => {\r\n    if (res.status === 200) {\r\n      localStorage.setItem(\r\n        'user',\r\n        JSON.stringify({ config: data.user, auth: res.data })\r\n      )\r\n      return res.data\r\n    }\r\n  })\r\n  return { data: res, config: data.config }\r\n})\r\n\r\nexport const getAuthorities = createAsyncThunk(\r\n  'admin/getAuthorities',\r\n  async (data) => {\r\n    const url = `/sc-api-gateway/acl/roles/${data.id}/authorities`\r\n    let res = await axios.get(url, data.config).then((res) => res.data)\r\n\r\n    return { role: data.repr, data: res, id: data.id }\r\n  }\r\n)\r\n\r\nexport const getOrganisationList = createAsyncThunk(\r\n  'admin/getOrganisationList',\r\n  async (config) => {\r\n    const url = '/sc-api-gateway/acl/organisations'\r\n    const data = await axios\r\n      .get(url, config)\r\n      .then((res) => res.data)\r\n      .catch((err) => console.log(err))\r\n\r\n    return data\r\n  }\r\n)\r\n\r\nexport const putOrganisationList = createAsyncThunk(\r\n  'admin/putOrganisationList',\r\n  async (data) => {\r\n    await axios.put(`/sc-api-gateway/acl/organisations/${data.id}`, data)\r\n    return data\r\n  }\r\n)\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'admin',\r\n  initialState: {\r\n    auth: {\r\n      data: {},\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    authorities: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: null,\r\n    },\r\n    organisationList: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: null,\r\n    },\r\n  },\r\n  reducers: {\r\n    logout: (state) => {\r\n      state.auth.status = 'idle'\r\n      state.auth.data = {}\r\n    },\r\n    setAuth: (state, action) => {\r\n      state.auth.status = 'success'\r\n      state.auth.data = action.payload.auth\r\n      state.config = action.payload.config\r\n    },\r\n    setAuthorities: (state) => {\r\n      state.authorities.status = 'idle'\r\n      state.authorities.data = []\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //get current user info\r\n    [getAuth.pending]: (state) => {\r\n      state.auth.status = 'loading'\r\n    },\r\n    [getAuth.fulfilled]: (state, action) => {\r\n      state.auth.status = 'success'\r\n      state.auth.data = action.payload.data\r\n      state.config = action.payload.config\r\n    },\r\n    [getAuth.rejected]: (state, action) => {\r\n      state.auth.status = 'failed'\r\n      state.auth.error = action.payload\r\n    },\r\n\r\n    //get authorities\r\n    [getAuthorities.pending]: (state) => {\r\n      state.authorities.status = 'loading'\r\n    },\r\n    [getAuthorities.fulfilled]: (state, action) => {\r\n      state.authorities.status = 'success'\r\n      state.authorities.data = [action.payload, ...state.authorities.data]\r\n    },\r\n    [getAuthorities.rejected]: (state, action) => {\r\n      state.authorities.status = 'failed'\r\n      state.authorities.error = action.payload\r\n    },\r\n\r\n    //get organisation list\r\n    [getOrganisationList.pending]: (state) => {\r\n      state.organisationList.status = 'loading'\r\n    },\r\n    [getOrganisationList.fulfilled]: (state, action) => {\r\n      state.organisationList.status = 'success'\r\n      state.organisationList.data = action.payload\r\n    },\r\n    [getOrganisationList.rejected]: (state, action) => {\r\n      state.organisationList.status = 'failed'\r\n      state.organisationList.error = action.payload\r\n    },\r\n\r\n    // //put organisation list\r\n    [putOrganisationList.pending]: (state) => {\r\n      state.organisationList.status = 'loading'\r\n    },\r\n    [putOrganisationList.fulfilled]: (state, action) => {\r\n      state.organisationList.status = 'success'\r\n      state.organisationList.data = state.organisationList.data.map((i) =>\r\n        i.id === action.payload.id ? { ...action.payload } : i\r\n      )\r\n    },\r\n    [putOrganisationList.rejected]: (state, action) => {\r\n      state.organisationList.status = 'failed'\r\n      state.organisationList.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { logout, setAuth, setAuthorities } = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nconst BASE_ORGANIZATIONS_URL = '/sc-roadworks/api/organisations'\r\nconst BASE_REGIONS_URL = '/sc-roadworks/api/regions'\r\nconst BASE_CATEGORIES_URL = '/sc-roadworks/api/categories'\r\nconst BASE_ROADMAP_URL = '/sc-roadworks/api/roadworks'\r\nconst BASE_INTERSECTIONS_URL = '/sc-roadworks/api/intersections'\r\n\r\nexport const getRoadmapOrganisations = createAsyncThunk(\r\n  'roadmap/getRoadmapOrganisations',\r\n  async () => await axios.get(BASE_ORGANIZATIONS_URL).then((r) => r.data)\r\n)\r\n\r\nexport const getRoadmapRegions = createAsyncThunk(\r\n  'roadmap/getRoadmapRegions',\r\n  async () => await axios.get(BASE_REGIONS_URL).then((r) => r.data)\r\n)\r\n\r\nexport const getRoadmapCategories = createAsyncThunk(\r\n  'roadmap/getRoadmapCategories',\r\n  async () => await axios.get(BASE_CATEGORIES_URL).then((r) => r.data)\r\n)\r\n\r\nexport const getRoadmap = createAsyncThunk(\r\n  'roadmap/getRoadmap',\r\n  async () => await axios.get(BASE_ROADMAP_URL).then((r) => r.data)\r\n)\r\n\r\nexport const getIntersections = createAsyncThunk(\r\n  'roadmap/getIntersections',\r\n  async () => await axios.get(BASE_INTERSECTIONS_URL).then((r) => r.data)\r\n)\r\n\r\nexport const postRoadmap = createAsyncThunk(\r\n  'roadmap/postRoadmap',\r\n  async (ob) => {\r\n    const res = await axios.post(BASE_ROADMAP_URL, ob.data)\r\n    // console.log(res)\r\n    await axios.post(`/sc-roadworks/api/roadworks/${res.data}/geometries`, {\r\n      geometries: ob.geometries,\r\n    })\r\n\r\n    const coordinates = ob.mapData.map((i) => {\r\n      if (i.type === 'polyline') {\r\n        return i.coordinates\r\n      } else {\r\n        return i.coordinates[0]\r\n      }\r\n    })\r\n\r\n    return {\r\n      data: JSON.parse(res.config.data),\r\n      id: res.data,\r\n      geometries: {\r\n        type: 'polygon',\r\n        coordinates,\r\n      },\r\n    }\r\n  }\r\n)\r\n\r\nexport const postIntersections = createAsyncThunk(\r\n  'roadmap/postIntersections',\r\n  async (initialPost) => {\r\n    const res = await axios.post(BASE_INTERSECTIONS_URL, initialPost)\r\n    return {\r\n      id: res.data,\r\n      ...initialPost,\r\n      intersection: { coordinates: [], type: 'Point' },\r\n    }\r\n  }\r\n)\r\n\r\nexport const putRoadmap = createAsyncThunk(\r\n  'roadmap/putRoadmap',\r\n  async (post) => {\r\n    if (post.reedit) {\r\n      await axios.put(`${BASE_ROADMAP_URL}/${post.id}`, {\r\n        ...post.data.data,\r\n        'status-form': post.data.data.status,\r\n      })\r\n\r\n      //delete geometries and post new coordinates\r\n      await axios.delete(`/sc-roadworks/api/roadworks/${post.id}/geometries`)\r\n      await axios.post(`/sc-roadworks/api/roadworks/${post.id}/geometries`, {\r\n        geometries: post.data.geometries,\r\n      })\r\n\r\n      const coordinates = post.mapData.map((i) => {\r\n        if (i.type === 'polyline') {\r\n          return i.coordinates\r\n        } else {\r\n          return i.coordinates[0]\r\n        }\r\n      })\r\n\r\n      return {\r\n        reedit: post.reedit,\r\n        data: post.data.data,\r\n        id: post.id,\r\n        geometries: {\r\n          type: 'polygon',\r\n          coordinates,\r\n        },\r\n      }\r\n    } else {\r\n      await axios.put(`${BASE_ROADMAP_URL}/${post.id}`, {\r\n        'status-form': post.data,\r\n      })\r\n\r\n      return post\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteRoadmap = createAsyncThunk(\r\n  'roadmap/deleteRoadmap',\r\n  async (id) => {\r\n    await axios.delete(`${BASE_ROADMAP_URL}/${id}`)\r\n    return id\r\n  }\r\n)\r\n\r\nexport const deleteIntersection = createAsyncThunk(\r\n  'roadmap/deleteIntersection',\r\n  async (id) => {\r\n    await axios.delete(`${BASE_INTERSECTIONS_URL}/${id}`)\r\n    return id\r\n  }\r\n)\r\n\r\nexport const roadmapSlice = createSlice({\r\n  name: 'roadmap',\r\n  initialState: {\r\n    organisations: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    regions: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    categories: {\r\n      status: 'idle',\r\n      data: [],\r\n      error: null,\r\n    },\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n\r\n    formData: {}, //modal form submit values\r\n    current: 0, //modal current step\r\n\r\n    mapData: [], //modal yandex map coordinates data for road works\r\n    intersectionsMapData: [], //modal yandex map coordinates data for intersections\r\n\r\n    editedId: null,\r\n    deletedId: null,\r\n    deletedIntersectionId: null,\r\n    intersections: {\r\n      status: 'idle',\r\n      error: null,\r\n      data: [],\r\n    },\r\n  },\r\n  reducers: {\r\n    formValidate: (state, action) => {\r\n      state.formData = { ...state.formData, ...action.payload }\r\n    },\r\n    setCurrent: (state, action) => {\r\n      state.current = action.payload\r\n    },\r\n    setMapData: (state, action) => {\r\n      state.mapData = [...state.mapData, ...action.payload]\r\n    },\r\n    setIntersectionsMapData: (state, action) => {\r\n      state.intersectionsMapData = action.payload\r\n    },\r\n    resetMapData: (state) => {\r\n      state.mapData = []\r\n    },\r\n    resetIntersectionsMapData: (state) => {\r\n      state.intersectionsMapData = []\r\n    },\r\n    resetData: (state) => {\r\n      state.data = []\r\n      state.status = 'idle'\r\n    },\r\n    resetFormData: (state) => {\r\n      state.formData = {}\r\n    },\r\n    resetIntersectionsData: (state) => {\r\n      state.intersections.data = []\r\n      state.intersections.status = 'idle'\r\n    },\r\n    setEditedId: (state) => {\r\n      state.editedId = null\r\n    },\r\n    setDeletedId: (state) => {\r\n      state.deletedId = null\r\n    },\r\n    setDeletedIntersectionId: (state) => {\r\n      state.deletedIntersectionId = null\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //get organisation list\r\n    [getRoadmapOrganisations.fulfilled]: (state, action) => {\r\n      state.organisations.status = 'success'\r\n      state.organisations.data = action.payload\r\n    },\r\n    [getRoadmapOrganisations.pending]: (state) => {\r\n      state.organisations.status = 'loading'\r\n    },\r\n    [getRoadmapOrganisations.rejected]: (state, action) => {\r\n      state.organisations.status = 'failed'\r\n      state.organisations.error = action.payload\r\n    },\r\n\r\n    //get region list\r\n    [getRoadmapRegions.fulfilled]: (state, action) => {\r\n      state.regions.status = 'success'\r\n      state.regions.data = action.payload\r\n    },\r\n    [getRoadmapRegions.pending]: (state, action) => {\r\n      state.regions.status = 'loading'\r\n    },\r\n    [getRoadmapRegions.rejected]: (state, action) => {\r\n      state.regions.status = 'failed'\r\n      state.regions.error = action.payload\r\n    },\r\n\r\n    //get categories list\r\n    [getRoadmapCategories.fulfilled]: (state, action) => {\r\n      state.categories.status = 'success'\r\n      state.categories.data = action.payload\r\n    },\r\n    [getRoadmapCategories.pending]: (state, action) => {\r\n      state.categories.status = 'loading'\r\n    },\r\n    [getRoadmapCategories.rejected]: (state, action) => {\r\n      state.categories.status = 'failed'\r\n      state.categories.error = action.payload\r\n    },\r\n\r\n    //get road works\r\n    [getRoadmap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = action.payload\r\n    },\r\n    [getRoadmap.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [getRoadmap.rejected]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //post road new work\r\n    [postRoadmap.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [postRoadmap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      let ob = action.payload.data\r\n      const id = action.payload.id\r\n      const geometries = action.payload.geometries\r\n      const category = state.categories.data.find(\r\n        (i) => i.id === action.payload.data.category\r\n      ).name\r\n      const region = state.regions.data.find(\r\n        (i) => i.id === action.payload.data.region\r\n      ).name\r\n      const organisation = state.organisations.data.find(\r\n        (i) => i.id === action.payload.data.organisation\r\n      ).name\r\n      ob = { ...ob, category, region, organisation, id, geometries }\r\n      state.data = [ob, ...state.data]\r\n    },\r\n\r\n    //update road work\r\n    [putRoadmap.pending]: (state, action) => {\r\n      state.status = 'loading'\r\n    },\r\n    [putRoadmap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      // let data = state.data.find((i) => i.id === action.payload.id)\r\n      let index = state.data.findIndex((i) => i.id === action.payload.id)\r\n      state.editedId = action.payload.id\r\n\r\n      //ids to names\r\n      if (action.payload.reedit) {\r\n        console.log(action.payload, action.payload.data)\r\n        const category = state.categories.data.find(\r\n          (i) => i.id === action.payload.data.category\r\n        ).name\r\n        const region = state.regions.data.find(\r\n          (i) => i.id === action.payload.data.region\r\n        ).name\r\n        const organisation = state.organisations.data.find(\r\n          (i) => i.id === action.payload.data.organisation\r\n        ).name\r\n        state.data[index] = {\r\n          ...action.payload.data,\r\n          category,\r\n          region,\r\n          organisation,\r\n          id: action.payload.id,\r\n        }\r\n        state.data[index].geometries = action.payload.geometries\r\n      } else {\r\n        state.data[index].status = {\r\n          ...state.data[index].status,\r\n          ...action.payload.data,\r\n        }\r\n      }\r\n    },\r\n\r\n    //delete road work\r\n    [deleteRoadmap.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [deleteRoadmap.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      let index = state.data.findIndex((i) => i.id === action.payload)\r\n      state.data.splice(index, 1)\r\n      state.deletedId = action.payload\r\n    },\r\n\r\n    //get intersections\r\n    [getIntersections.fulfilled]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      state.intersections.data = action.payload\r\n    },\r\n    [getIntersections.pending]: (state) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [getIntersections.rejected]: (state, action) => {\r\n      state.intersections.status = 'failed'\r\n      state.intersections.error = action.payload\r\n    },\r\n\r\n    //post new intersection\r\n    [postIntersections.pending]: (state) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [postIntersections.fulfilled]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      state.intersections.data = [action.payload, ...state.intersections.data]\r\n    },\r\n\r\n    //delete intersection\r\n    [deleteIntersection.pending]: (state) => {\r\n      state.intersections.status = 'loading'\r\n    },\r\n    [deleteIntersection.fulfilled]: (state, action) => {\r\n      state.intersections.status = 'success'\r\n      let index = state.intersections.data.findIndex(\r\n        (i) => i.id === action.payload\r\n      )\r\n      state.intersections.data.splice(index, 1)\r\n      state.deletedIntersectionId = action.payload\r\n      console.log(action.payload, index)\r\n    },\r\n  },\r\n})\r\n\r\nexport const {\r\n  formValidate,\r\n  setCurrent,\r\n  setMapData,\r\n  setIntersectionsMapData,\r\n  setIntersection,\r\n  resetFormData,\r\n  setEditedId,\r\n  setDeletedId,\r\n  setDeletedIntersectionId,\r\n  resetIntersectionsMapData,\r\n  resetMapData,\r\n  resetData,\r\n  resetIntersectionsData,\r\n} = roadmapSlice.actions\r\n\r\nexport default roadmapSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getRoles = createAsyncThunk('admin/getRoles', async (data) => {\r\n  const url = '/sc-api-gateway/acl/roles'\r\n  let isAdmin = false\r\n\r\n  //check if SUPER-ADMIN is loged to show super-admin role\r\n  // data.auth.roles.forEach((name) => {\r\n  //   if (name === 'SUPER-ADMIN') {\r\n  //     isAdmin = true\r\n  //   }\r\n  // })\r\n\r\n  //validate SUPER-ADMIN privileges\r\n  const res = await axios\r\n    .get(url, data.config)\r\n    .then((res) => {\r\n      // if (!isAdmin) {\r\n      //   return res.data.filter((i) => i.repr !== 'Супер-Администратор')\r\n      // }\r\n      return res.data\r\n    })\r\n    .catch((err) => console.log(err))\r\n\r\n  return res\r\n})\r\n\r\nexport const getModules = createAsyncThunk(\r\n  'admin/getModules',\r\n  async (config) => {\r\n    const url = '/sc-api-gateway/acl/modules'\r\n    const res = await axios\r\n      .get(url, config)\r\n      .then((res) => res.data)\r\n      .catch((err) => console.log(err))\r\n\r\n    return res\r\n  }\r\n)\r\n\r\nexport const getRoleModules = createAsyncThunk(\r\n  'admin/getRoleModules',\r\n  async (data) => {\r\n    let modules = []\r\n    for (const role of data.roles) {\r\n      const url = `/sc-api-gateway/acl/roles/${role.id}/authorities`\r\n      let data_ = await axios\r\n        .get(url, data.config)\r\n        .then((res) => {\r\n          // console.log(res.data)\r\n          return {\r\n            id: role.id,\r\n            repr: role.repr,\r\n            'permitted-modules': res.data,\r\n          }\r\n        })\r\n        .catch((err) => console.log(err))\r\n\r\n      modules = [...modules, data_]\r\n    }\r\n\r\n    return modules\r\n  }\r\n)\r\n\r\nexport const postRoleModules = createAsyncThunk(\r\n  'admin/postRoleModules',\r\n  async (data) => {\r\n    let id = await axios\r\n      .post('/sc-api-gateway/acl/roles', data.post_new_role_module)\r\n      .then((res) => res.data)\r\n\r\n    let permitted_modules = await axios\r\n      .get(`/sc-api-gateway/acl/roles/${id}/authorities`)\r\n      .then((res) => res.data)\r\n\r\n    return {\r\n      ...data.record_new_role_module,\r\n      id,\r\n      'permitted-modules': permitted_modules,\r\n    }\r\n  }\r\n)\r\n\r\nexport const putRoleModule = createAsyncThunk(\r\n  'admin/putRoleModule',\r\n  async (data) => {\r\n    //delete module authority\r\n    if (data.removed.length > 0) {\r\n      for (const id of data.removed) {\r\n        await axios.delete(`/sc-api-gateway/acl/authorities/${id}`)\r\n        // .then((res) => console.log('removed module authority', res))\r\n      }\r\n    }\r\n\r\n    //add new authority\r\n    if (data.added.length > 0) {\r\n      for (const id of data.added) {\r\n        await axios.post(`/sc-api-gateway/acl/roles/${data.id}/authorities`, {\r\n          'module-id': id,\r\n        })\r\n        // .then((res) => console.log('added', res))\r\n      }\r\n    }\r\n\r\n    //change role name\r\n    await axios.put(`/sc-api-gateway/acl/roles/${data.id}`, { repr: data.repr })\r\n\r\n    let permitted_modules = await axios\r\n      .get(`/sc-api-gateway/acl/roles/${data.id}/authorities`)\r\n      .then((res) => res.data)\r\n\r\n    return {\r\n      id: data.id,\r\n      repr: data.repr,\r\n      'permitted-modules': permitted_modules,\r\n    }\r\n  }\r\n)\r\n\r\nexport const deleteRoleModule = createAsyncThunk(\r\n  'admin/deleteRoleModule',\r\n  async (id) => {\r\n    axios.delete(`/sc-api-gateway/acl/roles/${id}`)\r\n    return id\r\n  }\r\n)\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'roles',\r\n  initialState: {\r\n    roles: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    modules: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n    role_modules: {\r\n      data: [],\r\n      status: 'idle',\r\n      error: '',\r\n    },\r\n  },\r\n  reducers: {\r\n    resetRoles: (state) => {\r\n      state.roles.status = 'idle'\r\n      state.roles.data = []\r\n    },\r\n    resetModules: (state) => {\r\n      state.modules.status = 'idle'\r\n      state.modules.data = []\r\n    },\r\n    resetRoleModules: (state) => {\r\n      state.role_modules.status = 'idle'\r\n      state.role_modules.data = []\r\n    },\r\n  },\r\n  extraReducers: {\r\n    //get roles\r\n    [getRoles.pending]: (state) => {\r\n      state.roles.status = 'loading'\r\n    },\r\n    [getRoles.fulfilled]: (state, action) => {\r\n      state.roles.status = 'success'\r\n      state.roles.data = action.payload\r\n    },\r\n    [getRoles.failed]: (state, action) => {\r\n      state.roles.status = 'failed'\r\n      state.roles.error = action.payload\r\n    },\r\n\r\n    //get all available modules\r\n    [getModules.pending]: (state) => {\r\n      state.modules.status = 'loading'\r\n    },\r\n    [getModules.fulfilled]: (state, action) => {\r\n      state.modules.status = 'success'\r\n      state.modules.data = action.payload\r\n    },\r\n    [getModules.failed]: (state, action) => {\r\n      state.modules.status = 'failed'\r\n      state.modules.error = action.payload\r\n    },\r\n\r\n    //get all roles' modules\r\n    [getRoleModules.pending]: (state) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [getRoleModules.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = action.payload\r\n    },\r\n    [getRoleModules.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //post new role\r\n    [postRoleModules.pending]: (state) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [postRoleModules.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = [action.payload, ...state.role_modules.data]\r\n      state.roles.data = [\r\n        { repr: action.payload.repr, id: action.payload.id },\r\n        ...state.roles.data,\r\n      ]\r\n    },\r\n    [postRoleModules.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //update role module\r\n    [putRoleModule.pending]: (state) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [putRoleModule.fulfilled]: (state, action) => {\r\n      let record = action.payload\r\n      state.role_modules.status = 'success'\r\n      state.role_modules.data = state.role_modules.data.map((i) =>\r\n        i.id === record.id ? record : i\r\n      )\r\n      state.roles.data = state.roles.data.map((i) => {\r\n        return i.id === record.id ? { id: record.id, repr: record.repr } : i\r\n      })\r\n    },\r\n    [putRoleModule.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n\r\n    //delete role module\r\n    [deleteRoleModule.pending]: (state) => {\r\n      state.role_modules.status = 'loading'\r\n    },\r\n    [deleteRoleModule.fulfilled]: (state, action) => {\r\n      state.role_modules.status = 'success'\r\n      let index = state.role_modules.data.findIndex(\r\n        (i) => i.id === action.payload\r\n      )\r\n      state.role_modules.data.splice(index, 1)\r\n      let indx = state.roles.data.findIndex((i) => i.id === action.payload)\r\n      state.roles.data.splice(indx, 1)\r\n    },\r\n    [deleteRoleModule.failed]: (state, action) => {\r\n      state.role_modules.status = 'failed'\r\n      state.role_modules.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const { resetRoles, resetModules, resetRoleModules } = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getUsers = createAsyncThunk('admin/getUsers', async (config) => {\r\n  const url = '/sc-api-gateway/acl/users'\r\n  let res = await axios.get(url, config).then((res) => res.data)\r\n  return res\r\n})\r\n\r\nexport const postNewUser = createAsyncThunk(\r\n  'admin/postNewUser',\r\n  async (data) => {\r\n    const url = '/sc-api-gateway/acl/users'\r\n    let id = await axios.post(url, data.post).then((res) => {\r\n      console.log(res)\r\n      return res.data\r\n    })\r\n\r\n    return { 'account-id': id, ...data.record }\r\n  }\r\n)\r\n\r\nexport const putUser = createAsyncThunk('admin/putUser', async (data) => {\r\n  const url = `/sc-api-gateway/acl/users/${data.record['account-id']}`\r\n  await axios.put(url, data.post)\r\n\r\n  return data.record\r\n})\r\n\r\nexport const deleteUser = createAsyncThunk('admin/deleteUser', async (id) => {\r\n  const url = `/sc-api-gateway/acl/users/${id}`\r\n  await axios.delete(url)\r\n\r\n  return id\r\n})\r\n\r\nconst adminSlice = createSlice({\r\n  name: 'roles',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle',\r\n    error: '',\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    //fetch users\r\n    [getUsers.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [getUsers.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = action.payload\r\n    },\r\n    [getUsers.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //post user\r\n    [postNewUser.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [postNewUser.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = [action.payload, ...state.data]\r\n    },\r\n    [postNewUser.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //edit user\r\n    [putUser.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [putUser.fulfilled]: (state, action) => {\r\n      console.log(action.payload)\r\n      state.status = 'success'\r\n      state.data = state.data.map((i) =>\r\n        i['account-id'] === action.payload['account-id'] ? action.payload : i\r\n      )\r\n    },\r\n    [putUser.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //delete user\r\n    [deleteUser.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [deleteUser.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      let index = state.data.findIndex((i) => i.id === action.payload)\r\n      state.data.splice(index, 1)\r\n    },\r\n    [deleteUser.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\nexport const {} = adminSlice.actions\r\n\r\nexport default adminSlice.reducer\r\n","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit'\r\nimport axios from 'axios'\r\n\r\nexport const getHeads = createAsyncThunk('admin/getHeads', async (config) => {\r\n  const url = '/sc-api-gateway/acl/supervisors'\r\n  const res = await axios\r\n    .get(url, config)\r\n    .then((res) => res.data)\r\n    .catch((err) => console.log(err))\r\n\r\n  return res\r\n})\r\n\r\nexport const putHeads = createAsyncThunk('admin/putHeads', async (data) => {\r\n  await axios.put(`/sc-api-gateway/acl/supervisors/${data.id}`, data.server)\r\n  return { id: data.id, record: data.client }\r\n})\r\n\r\nconst headsSlice = createSlice({\r\n  name: 'heads',\r\n  initialState: {\r\n    data: [],\r\n    status: 'idle',\r\n    error: null,\r\n  },\r\n  reducers: {},\r\n  extraReducers: {\r\n    //get current user info\r\n    [getHeads.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [getHeads.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = action.payload\r\n    },\r\n    [getHeads.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n\r\n    //put current user info\r\n    [putHeads.pending]: (state) => {\r\n      state.status = 'loading'\r\n    },\r\n    [putHeads.fulfilled]: (state, action) => {\r\n      state.status = 'success'\r\n      state.data = state.data.map((i) => {\r\n        if (i['supervisor-id'] === action.payload.id) {\r\n          return { ...i, ...action.payload.record }\r\n        }\r\n\r\n        return i\r\n      })\r\n    },\r\n    [putHeads.failed]: (state, action) => {\r\n      state.status = 'failed'\r\n      state.error = action.payload\r\n    },\r\n  },\r\n})\r\n\r\n// export const {} = headsSlice.actions\r\n\r\nexport default headsSlice.reducer\r\n","export const setSideNavMenu = (modules) => {\r\n  let sidenavmenu_ = {}\r\n\r\n  modules.forEach((module) => {\r\n    sidenavmenu_ = { ...sidenavmenu_, ...checkModule(sidenavmenu_, module) }\r\n  })\r\n\r\n  return Object.values(sidenavmenu_)\r\n}\r\n\r\nconst checkModule = (menu, module) => {\r\n  switch (module) {\r\n    case 'Аналитические индикаторы':\r\n      return configure(menu, 'Управление мастер-данными', module)\r\n    case 'Показатели индикаторов':\r\n      return configure(menu, 'Управление мастер-данными', module)\r\n    case 'Справочники':\r\n      return configure(menu, 'Управление мастер-данными', module)\r\n    case 'Ремонт дорог':\r\n      return configure(menu, 'Управление мастер-данными', module)\r\n    case 'Роли':\r\n      return configure(menu, 'Управление пользователями', module)\r\n    case 'Пользователи':\r\n      return configure(menu, 'Управление пользователями', module)\r\n    case 'Руководители':\r\n      return configure(menu, 'Управление информационной панелью', module)\r\n    default:\r\n      return menu\r\n  }\r\n}\r\n\r\nconst configure = (menu, submenu, module) => {\r\n  let item = menu[submenu]\r\n  if (item) {\r\n    menu = {\r\n      ...menu,\r\n      [submenu]: { submenu, menuitems: [...item.menuitems, module] },\r\n    }\r\n  } else {\r\n    menu = { ...menu, [submenu]: { submenu, menuitems: [module] } }\r\n  }\r\n\r\n  return menu\r\n}\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport { Menu, Button } from 'antd'\r\nimport {\r\n  MenuUnfoldOutlined,\r\n  // AppstoreOutlined,\r\n  // PieChartOutlined,\r\n  // DesktopOutlined,\r\n  ContainerOutlined,\r\n  MailOutlined,\r\n  FileOutlined,\r\n} from '@ant-design/icons'\r\n\r\nimport { setSideNavMenu } from '../utils/menu_helper'\r\n\r\nconst { SubMenu } = Menu\r\n\r\nconst SideNavMenu = ({ width }) => {\r\n  const [state, setState] = useState({\r\n    collapsed: false,\r\n    btnheight: 50,\r\n  })\r\n\r\n  const { authorities } = useSelector((state) => state.admin)\r\n\r\n  useEffect(() => {\r\n    width < 600 &&\r\n      setState((state) => ({\r\n        ...state,\r\n        disabled: true,\r\n        collapsed: false,\r\n      }))\r\n  }, [width])\r\n\r\n  const toggleCollapsed = () => {\r\n    setState((state) => ({ ...state, collapsed: !state.collapsed }))\r\n  }\r\n\r\n  const menu = useMemo(() => {\r\n    let permitted_modules = {}\r\n    authorities.data.forEach((i) => {\r\n      i.data.forEach((m) => {\r\n        permitted_modules = {\r\n          ...permitted_modules,\r\n          [m['permitted-module']]: m['permitted-module'],\r\n        }\r\n      })\r\n    })\r\n\r\n    let menu_ = setSideNavMenu(Object.values(permitted_modules))\r\n\r\n    return menu_.map((i, index) => (\r\n      <SubMenu\r\n        key={i.submenu}\r\n        icon={index % 2 === 0 ? <MailOutlined /> : <ContainerOutlined />}\r\n        title={i.submenu}\r\n        className='SideNavMenu_style_sub_menu'\r\n      >\r\n        {i.menuitems.map((menuitem) => (\r\n          <Menu.Item\r\n            key={menuitem}\r\n            icon={<FileOutlined />}\r\n            className='SideNavMenu_style_menu_item'\r\n          >\r\n            <Link to={`${menuitem}`}>{menuitem}</Link>\r\n          </Menu.Item>\r\n        ))}\r\n      </SubMenu>\r\n    ))\r\n  }, [authorities])\r\n\r\n  return (\r\n    <div\r\n      style={{ width: width < 600 ? '100%' : state.collapsed ? 80 : 350 }}\r\n      className='SideNavMenu_style'\r\n    >\r\n      <Button\r\n        type='primary'\r\n        onClick={toggleCollapsed}\r\n        style={{\r\n          height: state.btnheight,\r\n          width: '100%',\r\n        }}\r\n        className='SideNavMenu_style_button'\r\n      >\r\n        {width > 600 && state.collapsed ? (\r\n          <MenuUnfoldOutlined />\r\n        ) : (\r\n          'Панель администратора'\r\n        )}\r\n      </Button>\r\n      <Menu\r\n        defaultSelectedKeys={['1']}\r\n        defaultOpenKeys={[\r\n          'Управление пользователями',\r\n          'Управление мастер-данными',\r\n          'Управление информационной панелью',\r\n        ]}\r\n        mode='inline'\r\n        inlineCollapsed={width < 600 ? false : state.collapsed}\r\n        style={{ height: '100%' }}\r\n      >\r\n        {menu}\r\n      </Menu>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(SideNavMenu)\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { Avatar, Button } from 'antd'\r\nimport { UserOutlined } from '@ant-design/icons'\r\n\r\nimport { logout, setAuthorities } from '../features/admin/adminSlice'\r\n\r\nconst MainContentWrapper = ({ children }) => {\r\n  const { auth } = useSelector((state) => state.admin)\r\n  const dispatch = useDispatch()\r\n  const history = useHistory()\r\n\r\n  const onLogout = () => {\r\n    dispatch(logout())\r\n    dispatch(setAuthorities())\r\n    localStorage.removeItem('user')\r\n    history.push('/авторизация')\r\n  }\r\n\r\n  return (\r\n    <div\r\n      style={{ width: '100%', height: '100%' }}\r\n      className='MainContent_style'\r\n    >\r\n      <div className='header header-user-wrapper MainContent_style_header'>\r\n        <div className='MainContent_style_href'>\r\n          {/* <a href='#'>ru</a> | <a href='#'>kaz</a> */}\r\n        </div>\r\n        <div className='MainContent_style_header'>\r\n          <Avatar icon={<UserOutlined />} />\r\n          <span\r\n            style={{ margin: '0 1rem' }}\r\n            className='MainContent_style_header_fio'\r\n          >\r\n            {auth.status === 'success' &&\r\n              `${auth.data.name}/${auth.data.organisation.abbreviation}-${auth.data.organisation['full-name']}`}\r\n          </span>\r\n          <Button onClick={onLogout}>Выйти</Button>\r\n        </div>\r\n      </div>\r\n      <div className='main-content-wrapper MainContent_style_body'>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(MainContentWrapper)\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport SideNavMenu from './SideNavMenu'\r\nimport MainContentWrapper from './MainContentWrapper'\r\n\r\nconst Home = ({ children }) => {\r\n  let [width, setWidth] = useState(window.innerWidth)\r\n\r\n  const getWidth = () =>\r\n    window.innerWidth ||\r\n    document.documentElement.clientWidth ||\r\n    document.body.clientWidth\r\n\r\n  useEffect(() => {\r\n    const resizeListener = () => {\r\n      // change width from the state object\r\n      setWidth(getWidth())\r\n    }\r\n    // set resize listener\r\n    window.addEventListener('resize', resizeListener)\r\n\r\n    // clean up function\r\n    return () => {\r\n      // remove resize listener\r\n      window.removeEventListener('resize', resizeListener)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <div\r\n      className='App Admin_main_style'\r\n      style={{ display: width < 600 ? 'block' : 'flex' }}\r\n    >\r\n      <SideNavMenu width={width} />\r\n      <MainContentWrapper>\r\n        <div\r\n          style={{ width: '100%', margin: '20px auto', padding: 5 }}\r\n          className='Admin_main_style_content'\r\n        >\r\n          {children}\r\n        </div>\r\n      </MainContentWrapper>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(Home)\r\n","import React from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nimport Home from './Home'\r\n\r\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        localStorage.getItem('user') ? (\r\n          <Home>\r\n            <Component />\r\n          </Home>\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: '/авторизация', state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { Form, Input, message } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport { getAuth } from '../../features/admin/adminSlice'\r\n\r\nimport './SignInForm.css'\r\n\r\nexport const SignInForm = () => {\r\n  const [form] = Form.useForm()\r\n  const history = useHistory()\r\n\r\n  const { auth } = useSelector((state) => state.admin)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (auth.status === 'success') {\r\n      message.success('Авторизация прошла успешно')\r\n    }\r\n\r\n    if (auth.status === 'failed') {\r\n      message.error('Ошибка авторизации')\r\n    }\r\n\r\n    return () => {\r\n      history.push('/')\r\n    }\r\n  }, [auth, history])\r\n\r\n  const onCancel = () => {\r\n    form.resetFields()\r\n  }\r\n\r\n  const onSubmit = async () => {\r\n    const record = await form.validateFields()\r\n    const auth = `Basic ${btoa(`${record.username}:${record.password}`)}`\r\n\r\n    const config = { headers: { Authorization: auth } }\r\n\r\n    dispatch(getAuth({ config, user: config }))\r\n  }\r\n\r\n  return (\r\n    <div className={'Form_main_style'}>\r\n      <div className={`Form_style_wrapper`}>\r\n        <div className={`title_back`}>\r\n          Панель администратора <br />\r\n          Ситуационного центра города алматы\r\n        </div>\r\n        <Form form={form} className={`Form_style_wrap`}>\r\n          <Form.Item\r\n            name={'username'}\r\n            className={`Form_style`}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Введите логин`,\r\n              },\r\n            ]}\r\n          >\r\n            <Input placeholder='Логин' className={`Form_style_item login`} />\r\n          </Form.Item>\r\n          <Form.Item\r\n            name={'password'}\r\n            className={`Form_style`}\r\n            rules={[\r\n              {\r\n                required: true,\r\n                message: `Введите пароль`,\r\n              },\r\n            ]}\r\n          >\r\n            <Input\r\n              placeholder='Пароль'\r\n              type={'password'}\r\n              className={`Form_style_item password`}\r\n            />\r\n          </Form.Item>\r\n          <div className={`Form_btn`}>\r\n            <div onClick={onCancel}>\r\n              <span>сбросить</span>\r\n            </div>\r\n            <div onClick={onSubmit}>\r\n              <span>применить</span>\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Input, InputNumber, Form, Select, Tag } from 'antd'\r\n\r\nexport const EditableCell = ({\r\n  editing,\r\n  dataIndex,\r\n  placeholder,\r\n  title,\r\n  data,\r\n  inputType,\r\n  record,\r\n  index,\r\n  children,\r\n  notRequired,\r\n  ...restProps\r\n}) => {\r\n  const { Option } = Select\r\n\r\n  const switchCase = (type) => {\r\n    switch (type) {\r\n      case 'select':\r\n        return (\r\n          <Select placeholder={placeholder} allowClear>\r\n            {data.map((value) => (\r\n              <Option key={`${value}- ${placeholder}`} value={value}>\r\n                {value}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        )\r\n\r\n      case 'multi-select':\r\n        function tagRender(props) {\r\n          const { label, closable, onClose } = props\r\n\r\n          return (\r\n            <Tag\r\n              closable={closable}\r\n              onClose={onClose}\r\n              style={{ marginRight: 3 }}\r\n            >\r\n              {label}\r\n            </Tag>\r\n          )\r\n        }\r\n        return (\r\n          <Select\r\n            placeholder='Модули'\r\n            mode='multiple'\r\n            tagRender={tagRender}\r\n            style={{ width: '100%', marginBottom: 15 }}\r\n            options={data}\r\n          />\r\n        )\r\n      case 'number':\r\n        return (\r\n          <InputNumber\r\n            min={0}\r\n            max={100}\r\n            formatter={(value) => `${value}%`}\r\n            parser={(value) => value.replace('%', '')}\r\n          />\r\n        )\r\n      default:\r\n        return (\r\n          <Input\r\n            className='Edit_input_style'\r\n            placeholder={placeholder}\r\n            allowClear\r\n          />\r\n        )\r\n    }\r\n  }\r\n\r\n  const inputNode = switchCase(inputType)\r\n\r\n  return (\r\n    <td {...restProps}>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={[\r\n            {\r\n              required: notRequired ? notRequired : true,\r\n              message: `Введите ${title}!`,\r\n            },\r\n          ]}\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Table, Popconfirm, Form, Space } from 'antd'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from '@ant-design/icons'\r\n\r\nimport { EditableCell } from './EditableCell'\r\n\r\nexport const CustomTable = (props) => {\r\n  const [form] = Form.useForm()\r\n  const [editingKey, setEditingKey] = useState('')\r\n\r\n  const arr = [\r\n    ...props.columns,\r\n    {\r\n      title: 'Действие',\r\n      dataIndex: '',\r\n      width: '5%',\r\n      align: 'center',\r\n      key: 'x',\r\n      render: (_, record) => {\r\n        const editable = isEditing(record)\r\n        return editable ? (\r\n          <span>\r\n            <a\r\n              onClick={() => onSave(record.key)}\r\n              style={{\r\n                marginRight: 8,\r\n              }}\r\n            >\r\n              <SaveOutlined className='icon_edit_btn_style' title='Сохранить' />\r\n            </a>\r\n            <Popconfirm\r\n              title='Вы уверены что хотите оменить изменения?'\r\n              onConfirm={cancel}\r\n            >\r\n              <CloseOutlined className='icon_edit_btn_style' title='Отменить' />\r\n            </Popconfirm>\r\n          </span>\r\n        ) : (\r\n          <Space>\r\n            {props.isEditable && (\r\n              <a\r\n                disabled={editingKey !== ''}\r\n                onClick={() => edit(record, form, setEditingKey)}\r\n              >\r\n                <EditOutlined\r\n                  className='icon_edit_btn_style'\r\n                  title='Редактировать'\r\n                />\r\n              </a>\r\n            )}\r\n            {props.isDeletable && (\r\n              <Popconfirm\r\n                title='Вы уверены что хотите удалить даныне?'\r\n                onConfirm={() => onDelete(record)}\r\n              >\r\n                <DeleteOutlined\r\n                  className='icon_edit_btn_style'\r\n                  title='Удалить'\r\n                />\r\n              </Popconfirm>\r\n            )}\r\n          </Space>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const isEditing = (record) => record.key === editingKey\r\n\r\n  const edit = (record) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const onSave = async (key) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      const newData = [...props.data]\r\n      const index = newData.findIndex((item) => key === item.key)\r\n\r\n      const item = newData[index]\r\n      // newData.splice(index, 1, { ...item, ...row })\r\n      // props.setData(newData)\r\n      props.handleEdit({ ...item, ...row })\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  const onDelete = async (record) => {\r\n    try {\r\n      // let newData = [...props.data]\r\n      // props.setData(newData.filter((item) => item.key !== record.key))\r\n      props.handleDelete(record)\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  const mergedColumns = arr.map((col) => {\r\n    if (!col.editable) {\r\n      return col\r\n    }\r\n\r\n    return {\r\n      ...col,\r\n      onCell: (record) => ({\r\n        record,\r\n        inputType: col.type,\r\n        dataIndex: col.dataIndex,\r\n        title: col.title,\r\n        data: col.data,\r\n        placeholder: col.placeholder,\r\n        editing: isEditing(record),\r\n        notRequired: col.notRequired,\r\n      }),\r\n    }\r\n  })\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        bordered\r\n        dataSource={props.data}\r\n        columns={mergedColumns}\r\n        rowClassName='editable-row'\r\n        pagination={{\r\n          onChange: cancel,\r\n        }}\r\n        loading={props.loading}\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tag } from 'antd'\r\n\r\nexport const setColumnsHelper = (organisations, roles, modules) => {\r\n  return [\r\n    {\r\n      title: '№',\r\n      dataIndex: '№',\r\n      align: 'center',\r\n      width: '2%',\r\n    },\r\n    {\r\n      title: 'ФИО',\r\n      dataIndex: 'name',\r\n      editable: true,\r\n      placeholder: 'ФИО',\r\n    },\r\n    {\r\n      title: 'Организация',\r\n      dataIndex: 'organisation',\r\n      editable: true,\r\n      placeholder: 'Организация',\r\n      type: 'select',\r\n      data: organisations,\r\n    },\r\n    {\r\n      title: 'Роль',\r\n      dataIndex: 'roles',\r\n      editable: true,\r\n      placeholder: 'Роль',\r\n      type: 'multi-select',\r\n      data: roles,\r\n      notRequired: false,\r\n      render: (tags) => {\r\n        return (\r\n          <span>\r\n            {tags.map((tag) => {\r\n              let color = tag.length > 5 ? 'geekblue' : 'blue'\r\n              return (\r\n                <Tag color={color} key={tag} style={{ margin: '5px 5px' }}>\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              )\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: 'Логин',\r\n      dataIndex: 'username',\r\n      editable: true,\r\n      placeholder: 'Логин',\r\n    },\r\n  ]\r\n}\r\n\r\nexport const setDataSourceHelper = (data) => {\r\n  return data.map((i, index) => {\r\n    return {\r\n      key: i['account-id'],\r\n      '№': ++index,\r\n      name: i.name,\r\n      organisation: `${i.organisation['full-name']} - ${i.organisation.abbreviation}`,\r\n      roles: i.roles.map((role) => role),\r\n      username: i.username,\r\n      'account-id': i['account-id'],\r\n    }\r\n  })\r\n}\r\n","export const onRequest = (record, roles, organisations, modules) => {\r\n  let post = {\r\n    name: record.name,\r\n    'organisation-id': organisations.find(\r\n      (o) => o.value === record.organisation\r\n    ).id,\r\n    username: record.username,\r\n    password: record.password ? record.password : '',\r\n    roles: roles.filter((i) => record.roles.includes(i.value)).map((i) => i.id),\r\n    modules: record.modules\r\n      ? modules.filter((i) => record.modules.includes(i.value)).map((i) => i.id)\r\n      : [],\r\n  }\r\n\r\n  //client post object\r\n  record = {\r\n    ...record,\r\n    organisation: {\r\n      abbreviation: record.organisation.split('-')[1],\r\n      'full-name': record.organisation.split('-')[0],\r\n    },\r\n  }\r\n\r\n  return { post, record }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { deleteUser, putUser } from '../../features/users/usersSlice'\r\n\r\nimport { setColumnsHelper, setDataSourceHelper } from '../../utils/users_table'\r\nimport { onRequest } from '../../utils/users_helper'\r\n\r\nconst UserTable = ({ data, status, roles, organisations, modules }) => {\r\n  const [dataSource, setDataSource] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (status === 'success') {\r\n      setDataSource(setDataSourceHelper(data))\r\n    }\r\n  }, [data, status])\r\n\r\n  const onEdit = (record_) => {\r\n    let { post, record } = onRequest(record_, roles, organisations, modules)\r\n\r\n    delete record['№']\r\n    delete record['key']\r\n\r\n    dispatch(putUser({ post, record }))\r\n  }\r\n  const onDelete = (record) => {\r\n    dispatch(deleteUser(record['account-id']))\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      columns={setColumnsHelper(\r\n        organisations.map((o) => o.value),\r\n        roles,\r\n        modules\r\n      )}\r\n      data={dataSource}\r\n      setData={setDataSource}\r\n      loading={status !== 'success'}\r\n      handleEdit={onEdit}\r\n      handleDelete={onDelete}\r\n      isEditable={true}\r\n      isDeletable={true}\r\n    />\r\n  )\r\n}\r\n\r\nexport default React.memo(UserTable)\r\n","import React from 'react'\r\nimport { Form, Input, Button, Select, Tag } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { postNewUser } from '../../features/users/usersSlice'\r\nimport { onRequest } from '../../utils/users_helper'\r\n\r\nconst UserControllers = ({ roles, organisations, modules }) => {\r\n  const [form] = Form.useForm()\r\n  const { Option } = Select\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onAdd = async () => {\r\n    let record = await form.validateFields()\r\n    if (typeof record.roles === 'undefined') {\r\n      record = { ...record, roles: [] }\r\n    }\r\n\r\n    // delete record.password\r\n    let ob = onRequest(record, roles, organisations, modules)\r\n\r\n    dispatch(postNewUser(ob))\r\n    form.resetFields()\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Form form={form} className='admin-controller Roles_block_style'>\r\n        <Form.Item\r\n          name='name'\r\n          style={{ width: '60%' }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите имя пользователя!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='ФИО' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='organisation'\r\n          style={{ width: '60%' }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Выберите название организации!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Select placeholder='Организация' allowClear>\r\n            {organisations.map((o) => (\r\n              <Option key={o.value}>{o.value}</Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='roles'\r\n          style={{ width: '60%' }}\r\n          // rules={[\r\n          //   {\r\n          //     required: true,\r\n          //     message: `Выберите роль пользователя!`,\r\n          //   },\r\n          // ]}\r\n        >\r\n          <Select\r\n            placeholder='Роли'\r\n            allowClear\r\n            mode='multiple'\r\n            tagRender={tagRender}\r\n            options={roles}\r\n          />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='username'\r\n          style={{ width: '60%' }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите логин`,\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder='Логин' />\r\n        </Form.Item>\r\n        <Form.Item\r\n          name='password'\r\n          style={{ width: '60%' }}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: `Введите пароль пользователя!`,\r\n            },\r\n          ]}\r\n        >\r\n          <Input\r\n            placeholder='Пароль'\r\n            type={'password'}\r\n            className='password_style_user'\r\n          />\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button\r\n            type='primary'\r\n            htmlType='submit'\r\n            // className='standard_btn_admin'\r\n            onClick={onAdd}\r\n          >\r\n            Добавить\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(UserControllers)\r\n\r\nfunction tagRender(props) {\r\n  const { label, closable, onClose } = props\r\n\r\n  return (\r\n    <Tag closable={closable} onClose={onClose} style={{ marginRight: 3 }}>\r\n      {label}\r\n    </Tag>\r\n  )\r\n}\r\n","import React, { useEffect, useMemo } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getUsers } from '../../features/users/usersSlice'\r\nimport UserTable from './UserTable'\r\nimport UserControllers from './UserControllers'\r\n\r\nconst Users = () => {\r\n  const { data, status } = useSelector((state) => state.users)\r\n  const { roles, modules } = useSelector((state) => state.roles)\r\n  const { organisationList, config } = useSelector((state) => state.admin)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    config && data.length === 0 && dispatch(getUsers(config))\r\n  }, [data, config])\r\n\r\n  const role_options = useMemo(() => {\r\n    if (roles.status === 'success') {\r\n      return roles.data.map((i) => ({ value: i.repr, id: i.id }))\r\n    }\r\n\r\n    return []\r\n  }, [roles])\r\n\r\n  const organisation_options = useMemo(() => {\r\n    if (organisationList.status === 'success') {\r\n      return organisationList.data.map((i) => ({\r\n        ...i,\r\n        value: `${i['full-name']} - ${i.abbreviation}`,\r\n      }))\r\n    }\r\n\r\n    return []\r\n  }, [organisationList])\r\n\r\n  const modules_options = useMemo(() => {\r\n    if (modules.status === 'success') {\r\n      return modules.data.map((i) => ({\r\n        ...i,\r\n        value: i.name,\r\n      }))\r\n    }\r\n  }, [modules])\r\n\r\n  return (\r\n    <>\r\n      <UserControllers\r\n        roles={role_options}\r\n        organisations={organisation_options}\r\n        modules={modules_options}\r\n      />\r\n      <UserTable\r\n        data={data}\r\n        status={status}\r\n        roles={role_options}\r\n        organisations={organisation_options}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Users)\r\n","import React, { useCallback } from 'react'\r\nimport { Form, Button, Select, Tag, Input } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { postRoleModules } from '../../features/roles/rolesSlice'\r\n\r\n//UI: render form controllers\r\nconst RoleControllers = ({ options }) => {\r\n  const [form] = Form.useForm()\r\n  const dispatch = useDispatch()\r\n  // const { modules } = useSelector((state) => state.admin)\r\n\r\n  // console.log('loading controllers', options)\r\n\r\n  //TASK: add new role's modules on put request (redux side)\r\n  const onAdd = useCallback(async () => {\r\n    try {\r\n      //extract form data to post\r\n      let row = await form.validateFields()\r\n\r\n      let ids = [] // request needs module's ids\r\n      let modules = [] //client side needs module names\r\n\r\n      //fill above looping through options modules\r\n      options.forEach((i) => {\r\n        if (row['permitted-modules'].includes(i.value)) {\r\n          ids = [...ids, i.id]\r\n          modules = [...modules, i.value]\r\n        }\r\n      })\r\n\r\n      let post_new_role_module = { ...row, 'permitted-modules': ids } // post object\r\n      dispatch(\r\n        postRoleModules({ post_new_role_module, record_new_role_module: row })\r\n      )\r\n\r\n      form.resetFields()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }, [form, options])\r\n\r\n  return (\r\n    <Form form={form} className=' Roles_create'>\r\n      <Form.Item\r\n        name='repr'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `Введите роль пользователя!`,\r\n          },\r\n        ]}\r\n      >\r\n        <Input placeholder='Роли' allowClear style={{ width: '60%' }} />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='permitted-modules'\r\n        rules={[\r\n          {\r\n            required: true,\r\n            message: `Выберите модули доступа пользователя!`,\r\n          },\r\n        ]}\r\n      >\r\n        <Select\r\n          placeholder='Модули'\r\n          mode='multiple'\r\n          tagRender={tagRender}\r\n          style={{ width: '60%' }}\r\n          options={options}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Button\r\n          type='primary'\r\n          htmlType='submit'\r\n          className='standard_btn_admin'\r\n          onClick={onAdd}\r\n        >\r\n          Добавить\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default React.memo(RoleControllers)\r\n\r\nfunction tagRender(props) {\r\n  const { label, closable, onClose } = props\r\n\r\n  return (\r\n    <Tag closable={closable} onClose={onClose} style={{ marginRight: 3 }}>\r\n      {label}\r\n    </Tag>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tag } from 'antd'\r\n\r\nexport const setRoleColumns = (options) => {\r\n  return [\r\n    {\r\n      title: '№',\r\n      dataIndex: '№',\r\n      align: 'center',\r\n      width: '2%',\r\n    },\r\n    {\r\n      title: 'Роль',\r\n      dataIndex: 'repr',\r\n      width: '30%',\r\n      editable: true,\r\n      placeholder: 'Роли',\r\n    },\r\n    {\r\n      title: 'Модули',\r\n      dataIndex: 'permitted-modules',\r\n      type: 'multi-select',\r\n      editable: true,\r\n      data: options,\r\n      render: (modules) => {\r\n        return (\r\n          <span>\r\n            {modules.map((module) => {\r\n              let color = module.length > 5 ? 'geekblue' : 'blue'\r\n              return (\r\n                <Tag color={color} key={module} style={{ margin: '5px 5px' }}>\r\n                  {module.toUpperCase()}\r\n                </Tag>\r\n              )\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\nexport const setRoleDataSource = (data) => {\r\n  return data.map((i, index) => {\r\n    return {\r\n      key: i.id,\r\n      '№': ++index,\r\n      repr: i.repr,\r\n      'permitted-modules': i['permitted-modules'].map(\r\n        (i) => i['permitted-module']\r\n      ),\r\n      modules: i['permitted-modules'],\r\n    }\r\n  })\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport {\r\n  deleteRoleModule,\r\n  putRoleModule,\r\n} from '../../features/roles/rolesSlice'\r\nimport { setRoleColumns, setRoleDataSource } from '../../utils/roles_table'\r\n\r\n//UI: render table\r\nconst RoleTable = ({ role_modules, options, modules }) => {\r\n  const dispatch = useDispatch()\r\n  const [data, setData] = useState([])\r\n\r\n  useEffect(() => {\r\n    //TASK: if role's modules are ready,show them on table\r\n    //LOGIC: set table datasource state\r\n    role_modules.status === 'success' &&\r\n      setData(setRoleDataSource(role_modules.data))\r\n  }, [role_modules])\r\n\r\n  const onEdit = (record) => {\r\n    //store newly added modules\r\n    let added = []\r\n    let arr = record.modules.map((i) => i['permitted-module']) //initial modules\r\n    added = record['permitted-modules'].filter((name) => !arr.includes(name))\r\n    added = modules.data.filter((i) => added.includes(i.name)).map((i) => i.id)\r\n\r\n    // //check if module is removed\r\n    let removed = [] //store removed modules\r\n    removed = record.modules\r\n      .filter(\r\n        (item) =>\r\n          !record['permitted-modules'].includes(item['permitted-module'])\r\n      )\r\n      .map((i) => i['authority-id'])\r\n\r\n    dispatch(\r\n      putRoleModule({\r\n        id: record.key,\r\n        removed,\r\n        added,\r\n        repr: record.repr,\r\n        'permitted-modules': record['permitted-modules'],\r\n      })\r\n    )\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    dispatch(deleteRoleModule(record.key))\r\n  }\r\n\r\n  return (\r\n    <Table\r\n      columns={setRoleColumns(options)} //options as props to show available options on row edit\r\n      data={data}\r\n      setData={setData}\r\n      loading={role_modules.status !== 'success'}\r\n      handleDelete={onDelete}\r\n      handleEdit={onEdit}\r\n      isEditable={true}\r\n      isDeletable={true}\r\n    />\r\n  )\r\n}\r\n\r\nexport default React.memo(RoleTable)\r\n","import React, { useEffect, useState } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { getRoleModules } from '../../features/roles/rolesSlice'\r\n\r\nimport RoleControllers from './RoleControllers'\r\nimport RoleTable from './RoleTable'\r\n\r\n//main ROLES module\r\nconst Roles = () => {\r\n  const dispatch = useDispatch()\r\n  const { roles, modules, role_modules } = useSelector((state) => state.roles)\r\n  const { config } = useSelector((state) => state.admin)\r\n\r\n  const [options, setOptions] = useState([])\r\n\r\n  useEffect(() => {\r\n    //TASK: request all available role's modules\r\n    if (config && roles.status === 'success') {\r\n      role_modules.status === 'idle' &&\r\n        dispatch(getRoleModules({ roles: roles.data, config }))\r\n    }\r\n  }, [config, roles, role_modules])\r\n\r\n  useEffect(() => {\r\n    //TASK: if modules are rdy, set options state\r\n    if (modules.status === 'success') {\r\n      let arr = modules.data.map((i) => ({ value: i.name, id: i.id }))\r\n      setOptions(arr)\r\n    }\r\n  }, [modules])\r\n\r\n  return (\r\n    <>\r\n      <RoleControllers options={options} />\r\n      <RoleTable\r\n        role_modules={role_modules}\r\n        options={options}\r\n        modules={modules}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default withRouter(Roles)\r\n","import React from 'react'\r\nimport { Placemark, Polygon, Polyline } from 'react-yandex-maps'\r\nimport { Button } from 'antd'\r\nimport { FaDrawPolygon } from 'react-icons/fa'\r\nimport { FcLineChart } from 'react-icons/fc'\r\n\r\nexport const renderGeoObjects = (mapData) => {\r\n  return mapData.map((geo, index) => {\r\n    switch (geo.type) {\r\n      case 'placemark':\r\n        return <Placemark key={index} geometry={geo.coordinates} />\r\n      case 'polyline':\r\n        return (\r\n          <Polyline\r\n            key={index}\r\n            geometry={geo.coordinates}\r\n            options={{\r\n              fillColor: '#00FF00',\r\n              strokeColor: '#0000FF',\r\n              strokeWidth: 5,\r\n            }}\r\n          />\r\n        )\r\n      case 'polygon':\r\n        return (\r\n          <Polygon\r\n            key={index}\r\n            geometry={geo.coordinates}\r\n            options={{\r\n              editorDrawingCursor: 'crosshair',\r\n              editorMaxPoints: 5,\r\n              fillColor: '#00FF00',\r\n              strokeColor: '#0000FF',\r\n              strokeWidth: 5,\r\n            }}\r\n          />\r\n        )\r\n      case 'Point':\r\n        return <Placemark key={index} geometry={geo.coordinates} />\r\n      case 'MultiPoint':\r\n        return geo.coordinates.map((geometry, key) => (\r\n          <Placemark key={`${key}-${geo.type}`} geometry={geometry} />\r\n        ))\r\n      default:\r\n        return null\r\n    }\r\n  })\r\n}\r\n\r\nexport const renderButtons = (active, setActive) => {\r\n  return (\r\n    <div>\r\n      <Button\r\n        type={active === 'polyline' && 'primary'}\r\n        onClick={() =>\r\n          active === 'polyline' ? setActive('') : setActive('polyline')\r\n        }\r\n        icon={<FcLineChart />}\r\n      />\r\n      <Button\r\n        type={active === 'polygon' && 'primary'}\r\n        style={{ margin: '0 10px' }}\r\n        icon={<FaDrawPolygon />}\r\n        onClick={() =>\r\n          active === 'polygon' ? setActive('') : setActive('polygon')\r\n        }\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const createGeoObject = (active, draw) => {\r\n  const options = {\r\n    editorDrawingCursor: 'crosshair',\r\n    // editorMaxPoints: 10,\r\n    fillColor: '#00FF00',\r\n    strokeColor: '#0000FF',\r\n    strokeWidth: 5,\r\n  }\r\n\r\n  if (active === 'polygon') {\r\n    return (\r\n      <Polygon\r\n        instanceRef={(ref) => ref && draw(ref, active)}\r\n        geometry={[]}\r\n        options={{ ...options }}\r\n      />\r\n    )\r\n  }\r\n\r\n  if (active === 'polyline') {\r\n    return (\r\n      <Polyline\r\n        instanceRef={(ref) => ref && draw(ref, active)}\r\n        geometry={[]}\r\n        options={options}\r\n      />\r\n    )\r\n  }\r\n\r\n  return null\r\n}\r\n","import React, { useEffect, useState, useMemo } from 'react'\r\nimport { YMaps, Map } from 'react-yandex-maps'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button } from 'antd'\r\n\r\nimport {\r\n  resetMapData,\r\n  setMapData,\r\n} from '../../../features/roadmap/roadmapSlice'\r\nimport {\r\n  renderButtons,\r\n  renderGeoObjects,\r\n  createGeoObject,\r\n} from '../utils/yandex_helper'\r\nimport { usePrevious } from '../utils/usePrevious'\r\n\r\nconst mapState = {\r\n  center: [43.238949, 76.889709],\r\n  zoom: 10,\r\n}\r\n\r\nexport const CustomYandexMap = () => {\r\n  const { current, mapData, intersectionsMapData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  const [active, setActive] = useState('')\r\n  const [polygons, setPolygons] = useState([])\r\n  const previousState = usePrevious({ active, polygons })\r\n\r\n  useEffect(() => {\r\n    if (previousState && previousState.active !== active) {\r\n      if (polygons.length > 0 && previousState.polygons === polygons) {\r\n        dispatch(setMapData(polygons))\r\n        setPolygons([])\r\n      }\r\n    }\r\n  }, [active, polygons, previousState])\r\n\r\n  let geoObject = useMemo(() => {\r\n    const draw = async (ref, type) => {\r\n      ref.editor.startDrawing()\r\n\r\n      ref.geometry.events.add('change', (e) => {\r\n        setPolygons((state) => [\r\n          { type, coordinates: e.originalEvent.newCoordinates },\r\n        ])\r\n      })\r\n\r\n      ref.editor.events.add('onchange', (event) => {\r\n        ref.startDrawing()\r\n      })\r\n      ref.editor.events.add('drawingstop', (event) => {\r\n        ref.editor.stopDrawing()\r\n        setActive('')\r\n      })\r\n    }\r\n\r\n    return createGeoObject(active, draw)\r\n  }, [active])\r\n\r\n  let geoObjects = useMemo(() => {\r\n    if (intersectionsMapData.length > 0) {\r\n      return renderGeoObjects(intersectionsMapData)\r\n    }\r\n    return renderGeoObjects(mapData)\r\n  }, [mapData, intersectionsMapData])\r\n\r\n  const handleClearMap = () => {\r\n    dispatch(resetMapData())\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {current === 0 && (\r\n        <div\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'flex-end',\r\n            alignItems: 'center',\r\n            marginBottom: 10,\r\n          }}\r\n        >\r\n          {renderButtons(active, setActive)}\r\n          <Button onClick={handleClearMap}>Очистить карту</Button>\r\n        </div>\r\n      )}\r\n      <YMaps style={{ minWidth: '100%' }}>\r\n        <Map\r\n          width='100%'\r\n          height='calc(100% - 50px)'\r\n          style={{ minHeight: '500px', minWidth: '100%' }}\r\n          defaultState={mapState}\r\n          modules={['geoObject.addon.editor']}\r\n        >\r\n          {current === 0 && geoObject}\r\n          {geoObjects}\r\n        </Map>\r\n      </YMaps>\r\n    </>\r\n  )\r\n}\r\n","import { useEffect, useRef } from 'react'\r\n\r\nexport const usePrevious = (value) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  })\r\n\r\n  return ref.current\r\n}\r\n","import React, { useEffect } from 'react'\r\n\r\nimport { Steps, Button, Form } from 'antd'\r\nimport { CustomYandexMap as YandexMap } from './YandexMap'\r\n\r\nconst { Step } = Steps\r\n\r\nexport const CustomSteps = ({\r\n  steps,\r\n  dispatch,\r\n  current,\r\n  setCurrent,\r\n  formValidate,\r\n  form,\r\n  callback,\r\n}) => {\r\n  useEffect(() => {\r\n    form.resetFields()\r\n  }, [form])\r\n\r\n  const next = () => {\r\n    dispatch(setCurrent(current + 1))\r\n  }\r\n\r\n  const prev = () => {\r\n    dispatch(setCurrent((state) => state - 1))\r\n    dispatch(setCurrent(current - 1))\r\n  }\r\n\r\n  const validate = async () => {\r\n    try {\r\n      const data = await form.validateFields()\r\n\r\n      if (data['end-date'] || data['start-date']) {\r\n        data['end-date'] = data['end-date']['_i']\r\n        data['start-date'] = data['start-date']['_i']\r\n      }\r\n\r\n      dispatch(formValidate(data))\r\n\r\n      next()\r\n    } catch (err) {\r\n      console.log(err)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Steps current={current} size='small'>\r\n        {steps.map((item) => (\r\n          <Step key={item.title} title={item.title} />\r\n        ))}\r\n      </Steps>\r\n      <div className='steps-content'>\r\n        <Form form={form} name='roadwork-form'>\r\n          <div style={{ width: '100%', display: 'flex' }}>\r\n            <div style={{ width: '50%' }}>{steps[current].content}</div>\r\n            <div style={{ width: '50%', paddingLeft: 10 }}>\r\n              <YandexMap />\r\n            </div>\r\n          </div>\r\n        </Form>\r\n      </div>\r\n      <div className='steps-action'>\r\n        {current > 0 && (\r\n          <Button style={{ margin: '0 8px' }} onClick={prev}>\r\n            Назад\r\n          </Button>\r\n        )}\r\n        {current < steps.length - 1 && (\r\n          <Button type='primary' onClick={validate}>\r\n            Далее\r\n          </Button>\r\n        )}\r\n        {current === 3 && (\r\n          <Button key='submit' type='primary' onClick={() => callback()}>\r\n            Отправить\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Tabs } from 'antd'\r\n\r\nexport const CustomTabs = ({ tabs }) => {\r\n  const { TabPane } = Tabs\r\n\r\n  const renderTabs = () => {\r\n    return tabs ? (\r\n      <Tabs type='card' className='tabs'>\r\n        {tabs.map((i, index) => (\r\n          <TabPane tab={i.title} key={index}>\r\n            {i.child}\r\n          </TabPane>\r\n        ))}\r\n      </Tabs>\r\n    ) : (\r\n      'no tabs data to render'\r\n    )\r\n  }\r\n\r\n  return <div className='card-container'>{renderTabs()}</div>\r\n}\r\n\r\n//props stucture\r\n// const tabs = [\r\n//     {\r\n//         title: 'name',\r\n//         child: component\r\n//     }\r\n// ]\r\n","import React from 'react'\r\nimport {\r\n  Upload,\r\n  message,\r\n  Button,\r\n  Input,\r\n  Checkbox,\r\n  DatePicker,\r\n  Form,\r\n  Select,\r\n} from 'antd'\r\n// import { Collapse } from 'react-collapse'\r\n\r\nimport { UploadOutlined } from '@ant-design/icons'\r\nimport moment from 'moment'\r\n\r\nconst { TextArea } = Input\r\nconst { Option } = Select\r\n\r\nexport const renderSelects = (prop) => {\r\n  const { regions, organisations, categories } = prop\r\n  const arr = [\r\n    {\r\n      name: 'category',\r\n      placeholder: 'Категоря работ',\r\n      options:\r\n        categories.status === 'success'\r\n          ? categories.data.map((r) => r.name)\r\n          : [],\r\n    },\r\n    {\r\n      name: 'organisation',\r\n      placeholder: 'Ответсвенный орган',\r\n      options:\r\n        organisations.status === 'success'\r\n          ? organisations.data.map((o) => o.name)\r\n          : [],\r\n    },\r\n    {\r\n      name: 'region',\r\n      placeholder: 'Район',\r\n      options:\r\n        regions.status === 'success' ? regions.data.map((r) => r.name) : [],\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <div\r\n    // style={{\r\n    //   display: 'flex',\r\n    //   flexWrap: 'wrap',\r\n    //   justifyContent: 'space-between',\r\n    //   margin: '15px 0',\r\n    // }}\r\n    >\r\n      {arr.map((i, index) => (\r\n        <Form.Item\r\n          name={i.name}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          key={`${i.name}${index}`}\r\n          hasFeedback\r\n        >\r\n          <Select placeholder={i.placeholder} style={{ width: 300 }} allowClear>\r\n            {i.options.map((op) => (\r\n              <Option value={op} key={op}>\r\n                {op}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport const renderTextArea = (name, placeholder, isOpen) => {\r\n  return (\r\n    <Form.Item>\r\n      <Form.Item\r\n        name={name}\r\n        valuePropName={'value'}\r\n        hidden={name !== 'area' && !isOpen}\r\n        getValueFromEvent={(e) => e.target.value}\r\n      >\r\n        <TextArea style={{ height: 70 }} placeholder={placeholder} allowClear />\r\n      </Form.Item>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport const renderDatePicker = (picker, handleChange, name, text) => {\r\n  const picker_ = picker ? (\r\n    <DatePicker\r\n      placeholder='Выбрать год'\r\n      allowClear={false}\r\n      picker={'year'}\r\n      format={'YYYY'}\r\n    />\r\n  ) : (\r\n    <DatePicker placeholder='Выбрать дату' allowClear={false} />\r\n  )\r\n\r\n  return (\r\n    <Form.Item label={text}>\r\n      <Input.Group compact>\r\n        <Form.Item\r\n          name={name}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          getValueFromEvent={(e, string) => {\r\n            return moment(string, 'YYYY-MM-DD')\r\n          }}\r\n        >\r\n          {picker_}\r\n        </Form.Item>\r\n        <Form.Item\r\n          name={`is-${name}`}\r\n          style={{ marginLeft: 10 }}\r\n          valuePropName={'checked'}\r\n          getValueFromEvent={(e) => e.target.checked}\r\n        >\r\n          <Checkbox onChange={handleChange}>Год</Checkbox>\r\n        </Form.Item>\r\n      </Input.Group>\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport const renderUpload = () => (\r\n  <Form.Item\r\n    name='file-paths'\r\n    valuePropName='fileList'\r\n    // getValueFromEvent={normFile}\r\n  >\r\n    <Upload {...upload_props}>\r\n      <Button icon={<UploadOutlined />}>Добавить рисунок / презентацию</Button>\r\n    </Upload>\r\n  </Form.Item>\r\n)\r\n\r\nexport const upload_props = {\r\n  name: 'file',\r\n  action: 'https://www.mocky.io/v2/5cc8019d300000980a055e76',\r\n  listType: 'picture',\r\n  headers: {\r\n    authorization: 'authorization-text',\r\n  },\r\n  onChange(info) {\r\n    if (info.file.status !== 'uploading') {\r\n      console.log(info.file, info.fileList)\r\n    }\r\n    if (info.file.status === 'done') {\r\n      message.success(`${info.file.name} успешно загружен`)\r\n    } else if (info.file.status === 'error') {\r\n      message.error(`Ошибка загрузки файла ${info.file.name}`)\r\n    }\r\n  },\r\n}\r\n\r\nconst normFile = (e) => {\r\n  console.log('Upload event:', e)\r\n\r\n  if (Array.isArray(e)) {\r\n    return e\r\n  }\r\n\r\n  return e && e.fileList\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Input, Checkbox, Form, DatePicker } from 'antd'\r\n\r\nimport {\r\n  renderDatePicker,\r\n  renderSelects,\r\n  renderTextArea,\r\n  renderUpload,\r\n} from '../../../utils/worklist_form'\r\n\r\nexport const WorkDescription = (props) => {\r\n  const { organisations, regions, categories, form } = props\r\n  const [iscanvas, setCanvas] = useState(false)\r\n  const [isclosured, setClosured] = useState(false)\r\n\r\n  // const [type, setType] = useState('date')\r\n  //checkbox on datepicker\r\n  const [pickerStart, setPickerStart] = useState(false)\r\n  const [pickerEnd, setPickerEnd] = useState(false)\r\n\r\n  useEffect(() => {\r\n    form.getFieldValue('is-canvas-opened') &&\r\n      setCanvas(form.getFieldValue('is-canvas-opened'))\r\n    form.getFieldValue('is-closured') &&\r\n      setClosured(form.getFieldValue('is-closured'))\r\n    form.getFieldValue('is-start-date') &&\r\n      setPickerStart(form.getFieldValue('is-start-date') ? true : false)\r\n    form.getFieldValue('is-end-date') &&\r\n      setPickerEnd(form.getFieldValue('is-end-date' ? true : false))\r\n\r\n    return () => {\r\n      setCanvas(false)\r\n      setClosured(false)\r\n    }\r\n  }, [form])\r\n\r\n  //checkbox on datepicker\r\n  const handleChangeYearStart = (e) =>\r\n    setPickerStart(e.target.checked ? true : false)\r\n\r\n  const handleChangeYearEnd = (e) =>\r\n    setPickerEnd(e.target.checked ? true : false)\r\n\r\n  return (\r\n    <>\r\n      {/* <Checkbox onChange={(e) => setType(e.target.checked ? 'year' : 'date')} />\r\n      {<PickerWithType type={type} />} */}\r\n      {renderSelects({ regions, organisations, categories })}\r\n      <Form.Item name='address'>\r\n        <Input placeholder='Адрес/Улица' />\r\n      </Form.Item>\r\n      {renderTextArea('area', 'Описание участка', true)}\r\n      <Form.Item\r\n        name={'is-closured'}\r\n        noStyle\r\n        valuePropName={'checked'}\r\n        getValueFromEvent={(e) => e.target.checked}\r\n      >\r\n        <Checkbox onChange={() => setClosured((state) => !state)}>\r\n          Перекрытие улиц{' '}\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {renderTextArea('closure-description', 'Описание перекрытия', isclosured)}\r\n      <Form.Item name={'is-canvas-opened'} noStyle valuePropName={'checked'}>\r\n        <Checkbox onChange={() => setCanvas((state) => !state)}>\r\n          Вскрытие дорожного полотна{' '}\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {renderTextArea('canvas-description', 'Описание вскрытия', iscanvas)}\r\n      {renderDatePicker(\r\n        pickerStart,\r\n        handleChangeYearStart,\r\n        'start-date',\r\n        'Дата начала'\r\n      )}\r\n      {renderDatePicker(\r\n        pickerEnd,\r\n        handleChangeYearEnd,\r\n        'end-date',\r\n        'Дата окончания'\r\n      )}\r\n      {renderUpload()}\r\n    </>\r\n  )\r\n}\r\nfunction PickerWithType({ type }) {\r\n  if (type === 'date') return <DatePicker />\r\n  return <DatePicker picker={type} />\r\n}\r\n","import React, { useState } from 'react'\r\nimport PhoneInput from 'react-phone-input-2'\r\nimport 'react-phone-input-2/lib/style.css'\r\n\r\nimport { Input, Form } from 'antd'\r\n\r\n// const { TextArea } = Input\r\n\r\nexport const WorkContractor = () => {\r\n  const [phone, setPhone] = useState()\r\n  return (\r\n    <>\r\n      <Form.Item name='lot-name'>\r\n        <Input placeholder='Наименование проекта (№ лота)' />\r\n      </Form.Item>\r\n      <Form.Item name='company-name'>\r\n        <Input placeholder='Наименование компании' />\r\n      </Form.Item>\r\n      <Form.Item name='supervisor-name'>\r\n        <Input placeholder='ФИО руководителя' />\r\n      </Form.Item>\r\n      <Form.Item name='contacts'>\r\n        <PhoneInput\r\n          country={'kz'}\r\n          value={phone}\r\n          onChange={(phone) => setPhone({ phone })}\r\n        />\r\n      </Form.Item>\r\n\r\n      <Form.Item name='warranty-period'>\r\n        <Input placeholder='Гарантийный период' />\r\n      </Form.Item>\r\n      {/* <Form.Item\r\n        name='contractor-comment-textarea'\r\n        rules={[{ required: true }]}\r\n      >\r\n        <TextArea style={{ height: 90 }} placeholder='Комментарий' />\r\n      </Form.Item> */}\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\n\r\nimport { Input, Checkbox, Form, InputNumber } from 'antd'\r\n\r\nconst { TextArea } = Input\r\n\r\nexport const WorkStatus = () => {\r\n  const [disabled, setDisabled] = useState(true)\r\n  const hanldeChange = (e) =>\r\n    e.target.checked ? setDisabled(false) : setDisabled(true)\r\n\r\n  return (\r\n    <>\r\n      <Form.Item\r\n        name='percentage'\r\n        rules={[{ required: true, message: 'Заполните поле' }]}\r\n        label={'Статус исполнения (%)'}\r\n      >\r\n        <InputNumber\r\n          style={{ width: '120px' }}\r\n          min={0}\r\n          max={100}\r\n          formatter={(value) => `${value}%`}\r\n          parser={(value) => value.replace('%', '')}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='commentary'>\r\n        <TextArea style={{ height: 90 }} placeholder='Комментарий' />\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='is-hidden'\r\n        valuePropName='checked'\r\n        getValueFromEvent={(e) => e.target.checked}\r\n      >\r\n        <Checkbox> Скрыть работу с карты</Checkbox>\r\n      </Form.Item>\r\n      <Form.Item\r\n        name='is-canceled'\r\n        valuePropName='checked'\r\n        getValueFromEvent={(e) => e.target.checked}\r\n        noStyle\r\n      >\r\n        <Checkbox onChange={hanldeChange}>\r\n          Закуп работ отменен / приостановлен\r\n        </Checkbox>\r\n      </Form.Item>\r\n      {/* <Form.Item name='canceled-comment'>\r\n        <TextArea\r\n          style={{ height: 90 }}\r\n          placeholder='Комментарий'\r\n          disabled={disabled}\r\n        />\r\n      </Form.Item> */}\r\n    </>\r\n  )\r\n}\r\n","//translate server variables' naming to show on client\r\nexport const nameEnToRuWorkListHelper = (name) => {\r\n  switch (name) {\r\n    case 'area':\r\n      return 'Участок'\r\n    case 'address':\r\n      return 'Адрес/улица'\r\n    case 'contractor':\r\n      return 'Подрядчик'\r\n    case 'category':\r\n      return 'Категоря работ'\r\n    case 'end-date':\r\n      return 'Дата окончания'\r\n    case 'is-end-date':\r\n      return 'Дата окончания отмечено'\r\n    case 'start-date':\r\n      return 'Дата начала'\r\n    case 'is-start-date':\r\n      return 'Дата начало отмечено'\r\n    case 'closure-description':\r\n      return 'Описание перекрытия'\r\n    case 'is-closured':\r\n      return 'Описание перекрытия отмечено'\r\n    case 'organisation':\r\n      return 'Ответсвенный орган'\r\n    case 'file-paths':\r\n      return 'Файл'\r\n    case 'lot-name':\r\n      return 'Лот'\r\n    case 'percentage':\r\n      return 'Статус исполнения (%)'\r\n    case 'region':\r\n      return 'Район'\r\n    case 'supervisor-name':\r\n      return 'ФИО руководителя'\r\n    case 'contacts':\r\n      return 'Контакты'\r\n    case 'warranty-period':\r\n      return 'Гарантийный период'\r\n    case 'canvas-description':\r\n      return 'Описание вскрытия'\r\n    case 'is-canvas-opened':\r\n      return 'Описание вскрытия отмечено'\r\n    case 'company-name':\r\n      return 'Наименование компании'\r\n    case 'canceled-comment':\r\n      return 'Комментарий закупа отмены'\r\n    case 'percentage-comment':\r\n      return 'Комментарий статуса %'\r\n    case 'is-hidden':\r\n      return 'Статус скрыт'\r\n    case 'is-canceled':\r\n      return 'Статус приостановлен'\r\n    case 'commentary':\r\n      return 'Статус комментария'\r\n    default:\r\n      return name\r\n  }\r\n}\r\n\r\n//validate antd form before post|put requests\r\nexport const prepareToShowDetailsObToArr = (ob) => {\r\n  const arr = []\r\n\r\n  Object.keys(ob).map((key) => {\r\n    if (\r\n      typeof ob[key] !== 'undefined' &&\r\n      typeof ob[key] !== 'object' &&\r\n      key !== 'is-start-date' &&\r\n      key !== 'is-end-date' &&\r\n      key !== 'key' &&\r\n      key !== 'id'\r\n    ) {\r\n      arr.push({ name: key, value: ob[key] })\r\n    } else if (ob[key] === undefined && key.split('-')[0] === 'is') {\r\n      arr.push({ name: key, value: false })\r\n    } else if (ob[key] === undefined) {\r\n      arr.push({ name: key, value: null })\r\n    }\r\n  })\r\n\r\n  return arr\r\n}\r\n\r\n//configure client to server data format\r\nexport const validateRoadWorkForm = (\r\n  data,\r\n  categories,\r\n  organisations,\r\n  regions\r\n) => {\r\n  let ob = {}\r\n  let is_hidden = false\r\n  let is_canceled = false\r\n  let commentary = null\r\n  let percentage\r\n\r\n  data.forEach((item) => {\r\n    if (\r\n      item.name !== 'is-hidden' ||\r\n      item.name !== 'is-canceled' ||\r\n      item.name !== 'commentary' ||\r\n      item.name !== 'percentage' ||\r\n      item.name !== 'is-end-date' ||\r\n      item.name !== 'is-start-date'\r\n    ) {\r\n      //save status values\r\n      if (item.name === 'percentage') {\r\n        percentage = item.value\r\n      }\r\n      if (item.name === 'is-canceled') {\r\n        is_canceled = item.value\r\n      }\r\n      if (item.name === 'is-hidden') {\r\n        is_hidden = item.value\r\n      }\r\n      if (item.name === 'commentary') {\r\n        commentary = item.value\r\n      }\r\n\r\n      if (item.name === 'end-date' || item.name === 'start-date') {\r\n        item.value.length > 4\r\n          ? (ob = { ...ob, [item.name]: item.value })\r\n          : (ob = { ...ob, [item.name]: `${item.value}-01-01` })\r\n      }\r\n      //find id for item.names\r\n      else if (item.name === 'category') {\r\n        const id = categories.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else if (item.name === 'organisation') {\r\n        const id = organisations.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else if (item.name === 'region') {\r\n        const id = regions.data.find((o) => o.name === item.value).id\r\n        ob = { ...ob, [item.name]: id }\r\n      } else {\r\n        ob = { ...ob, [item.name]: item.value }\r\n      }\r\n    }\r\n  })\r\n\r\n  ob = {\r\n    ...ob,\r\n    status: {\r\n      percentage: percentage,\r\n      'is-hidden': is_hidden,\r\n      'is-canceled': is_canceled,\r\n      commentary: commentary,\r\n    },\r\n  }\r\n\r\n  return ob\r\n}\r\n\r\n//\r\nexport const setCoordinates = (data) => {\r\n  return data.map((i) => {\r\n    let arr = []\r\n    if (i.type === 'polyline') {\r\n      arr = i.coordinates.map((ii) => ({ y: ii[1], x: ii[0] }))\r\n    } else if (i.type === 'polygon') {\r\n      arr = i.coordinates[0].map((k) => ({ y: k[1], x: k[0] }))\r\n    } else {\r\n      arr = [{ y: i.coordinates[1], x: i.coordinates[0] }]\r\n    }\r\n    return arr\r\n  })\r\n}\r\n","import React, { useMemo } from 'react'\r\nimport { Form } from 'antd'\r\n\r\nimport {\r\n  nameEnToRuWorkListHelper,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../../utils/helper'\r\n\r\nexport const WorkConfirm = ({ ob }) => {\r\n  const arr = useMemo(() => {\r\n    let new_arr = prepareToShowDetailsObToArr(ob)\r\n    new_arr = new_arr.filter(\r\n      (i) => typeof i.value !== 'object' && typeof i.value !== 'boolean'\r\n    )\r\n    return new_arr\r\n  }, [ob])\r\n\r\n  const renderForm = arr.map((i) => (\r\n    <Form.Item\r\n      key={i.name}\r\n      label={\r\n        <span style={{ color: '#92B4A7' }}>\r\n          {nameEnToRuWorkListHelper(i.name)}\r\n        </span>\r\n      }\r\n    >\r\n      {i.value}\r\n    </Form.Item>\r\n  ))\r\n  return <>{renderForm}</>\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport moment from 'moment'\r\n\r\nimport {\r\n  setCurrent,\r\n  formValidate,\r\n} from '../../../../../features/roadmap/roadmapSlice'\r\n\r\nimport {\r\n  WorkDescription,\r\n  WorkContractor,\r\n  WorkStatus,\r\n  WorkConfirm,\r\n} from './index'\r\nimport { CustomSteps as Steps } from '../../../common'\r\n\r\nconst format = 'YYYY/MM/DD'\r\n\r\nexport const StepsWrapper = ({ form, callback, record }) => {\r\n  const { current, organisations, regions, categories, formData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const steps = setSteps(\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    formData,\r\n    form,\r\n    dispatch\r\n  )\r\n\r\n  useEffect(() => {\r\n    record &&\r\n      form.setFieldsValue({\r\n        ...record,\r\n        'start-date': moment(record['start-date'], format),\r\n        'end-date': moment(record['end-date'], format),\r\n      })\r\n  }, [])\r\n\r\n  return (\r\n    <Steps\r\n      steps={steps}\r\n      current={current}\r\n      setCurrent={setCurrent}\r\n      formValidate={formValidate}\r\n      dispatch={dispatch}\r\n      form={form}\r\n      callback={callback}\r\n    />\r\n  )\r\n}\r\n\r\nconst setSteps = (\r\n  organisations,\r\n  regions,\r\n  categories,\r\n  formData,\r\n  form,\r\n  dispatch\r\n) => [\r\n  {\r\n    title: 'Описание работ',\r\n    content: (\r\n      <WorkDescription\r\n        organisations={organisations}\r\n        regions={regions}\r\n        categories={categories}\r\n        form={form}\r\n        dispatch={dispatch}\r\n      />\r\n    ),\r\n  },\r\n  {\r\n    title: 'Данные подрядчика',\r\n    content: <WorkContractor />,\r\n  },\r\n  {\r\n    title: 'Статус работ',\r\n    content: <WorkStatus />,\r\n  },\r\n  {\r\n    title: 'Отправка данных',\r\n    content: <WorkConfirm ob={formData} />,\r\n  },\r\n]\r\n","import React, { useState, useCallback } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Button, Modal, Form } from 'antd'\r\n\r\nimport { StepsWrapper as Steps } from './form/StepsWrapper'\r\n\r\nimport {\r\n  setCurrent,\r\n  postRoadmap,\r\n  resetMapData,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\nimport {\r\n  validateRoadWorkForm,\r\n  setCoordinates,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../utils/helper'\r\n\r\nexport const WorkListModal = () => {\r\n  const [visible, setVisible] = useState(false)\r\n  const dispatch = useDispatch()\r\n\r\n  const {\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    formData,\r\n    status,\r\n    mapData,\r\n  } = useSelector((state) => state.roadmap)\r\n  const [form] = Form.useForm()\r\n\r\n  const postFormData = useCallback(async () => {\r\n    try {\r\n      let arr = prepareToShowDetailsObToArr(formData)\r\n      let ob = validateRoadWorkForm(arr, categories, organisations, regions)\r\n\r\n      const coordinates = setCoordinates(mapData)\r\n\r\n      ob = { data: ob, geometries: coordinates, mapData }\r\n      // console.log(ob)\r\n\r\n      dispatch(postRoadmap(ob))\r\n      dispatch(setCurrent(0))\r\n      dispatch(resetMapData())\r\n\r\n      status === 'success' && setVisible(false)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }, [categories, formData, dispatch, mapData, organisations, status, regions])\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type='primary'\r\n        onClick={() => {\r\n          dispatch(setCurrent(0))\r\n          setVisible(true)\r\n        }}\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        Добавить\r\n      </Button>\r\n      {status === 'success' && (\r\n        <Modal\r\n          title='Форма ввода данных по ремонтным работам'\r\n          visible={visible}\r\n          onOk={() => {\r\n            dispatch(setCurrent(0))\r\n            setVisible(false)\r\n          }}\r\n          onCancel={() => {\r\n            dispatch(setCurrent(0))\r\n            setVisible(false)\r\n            dispatch(resetMapData())\r\n            form.resetFields()\r\n          }}\r\n          width={'80%'}\r\n          footer={null}\r\n        >\r\n          <div\r\n            style={{\r\n              display: 'flex',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Steps form={form} callback={postFormData} />\r\n          </div>\r\n        </Modal>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useCallback } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Modal, Form } from 'antd'\r\n\r\nimport { StepsWrapper as Steps } from './form/StepsWrapper'\r\nimport {\r\n  resetFormData,\r\n  resetMapData,\r\n  setCurrent,\r\n  putRoadmap,\r\n  setMapData,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\nimport {\r\n  validateRoadWorkForm,\r\n  setCoordinates,\r\n  prepareToShowDetailsObToArr,\r\n} from '../../utils/helper'\r\n\r\nexport const WorkDetailsModal = (props) => {\r\n  const { visible, setVisible, record } = props\r\n  const [form] = Form.useForm()\r\n\r\n  const {\r\n    organisations,\r\n    regions,\r\n    categories,\r\n    status,\r\n    mapData,\r\n    formData,\r\n  } = useSelector((state) => state.roadmap)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    let coordinates = record.geometries.coordinates\r\n\r\n    if (coordinates.length > 0) {\r\n      let arr = coordinates.map((i) => {\r\n        if (i[0][0] == i[i.length - 1][0]) {\r\n          return { type: 'polygon', coordinates: [i] }\r\n        }\r\n\r\n        return { type: 'polyline', coordinates: i }\r\n      })\r\n\r\n      dispatch(setMapData(arr))\r\n    }\r\n\r\n    return () => {\r\n      dispatch(resetMapData())\r\n      dispatch(resetFormData({}))\r\n      form.setFieldsValue({})\r\n    }\r\n  }, [])\r\n\r\n  // console.log('loaded')\r\n  const onCloseModal = () => {\r\n    setVisible(false)\r\n  }\r\n\r\n  const putFormData = useCallback(async () => {\r\n    try {\r\n      let arr = prepareToShowDetailsObToArr(formData)\r\n      let ob = validateRoadWorkForm(arr, categories, organisations, regions)\r\n      const coordinates = setCoordinates(mapData)\r\n\r\n      // console.log(coordinates)\r\n      ob = { data: ob, geometries: coordinates }\r\n\r\n      dispatch(setCurrent(0))\r\n      dispatch(putRoadmap({ reedit: true, data: ob, id: record.id, mapData }))\r\n      form.resetFields()\r\n\r\n      status === 'success' && setVisible(false)\r\n    } catch (err) {\r\n      console.log(err.message)\r\n    }\r\n  }, [\r\n    categories,\r\n    organisations,\r\n    regions,\r\n    mapData,\r\n    formData,\r\n    form,\r\n    record,\r\n    setVisible,\r\n    status,\r\n  ])\r\n\r\n  return (\r\n    <Modal\r\n      title='Детали улицы'\r\n      visible={visible}\r\n      width={'50%'}\r\n      onCancel={onCloseModal}\r\n      onOk={onCloseModal}\r\n      footer={[]}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n        }}\r\n      >\r\n        <Steps form={form} callback={putFormData} record={record} />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport const setFilterSelectsHelper = (response) => {\r\n  let ob = {}\r\n  let result = []\r\n  if (response.status === 'success') {\r\n    const data = response.data\r\n    for (let i = 0; i < data.length; i++) {\r\n      ob = { ...ob, [data[i].name]: data[i].name }\r\n    }\r\n    result = Object.keys(ob).map((key) => ({ text: key, value: key }))\r\n  }\r\n  return result\r\n}\r\n\r\nexport const setWorkListDataSourceHelper = (arr) => {\r\n  const dataSource = arr.map((i) => {\r\n    let keys = { key: i.id }\r\n    Object.keys(i).forEach((key) => {\r\n      if (key === 'status') {\r\n        keys = {\r\n          ...keys,\r\n          percentage: i[key].percentage,\r\n          'is-hidden': i[key]['is-hidden'],\r\n          'is-canceled': i[key]['is-canceled'],\r\n          commentary: i[key]['commentary'],\r\n        }\r\n      } else {\r\n        keys = { ...keys, [key]: i[key] }\r\n      }\r\n    })\r\n    return keys\r\n  })\r\n\r\n  return dataSource\r\n}\r\n\r\nexport const setCrossListDataSourceHelper = (data, intersections) => {\r\n  let dataSource = []\r\n  if (intersections.status === 'success') {\r\n    dataSource = intersections.data.map((i, index) => {\r\n      let ob = {\r\n        '№': ++index,\r\n        key: ++index,\r\n        id: i.id,\r\n        address: i['intersection-area'],\r\n        intersection: i.intersection,\r\n        ids: i['roadwork-ids'],\r\n      }\r\n\r\n      i['roadwork-ids'].forEach((id, key) => {\r\n        let item = data.find((i) => i.id === id)\r\n        ob = {\r\n          ...ob,\r\n          category: item ? item.category : '',\r\n          [`Работа ${key + 1}`]: id,\r\n        }\r\n      })\r\n\r\n      return ob\r\n    })\r\n  }\r\n\r\n  // const dataSource = data.map((i, index) => {\r\n  //   let keys = { '№': index + 1, key: index + 1 }\r\n  //   Object.keys(i).forEach((key) => {\r\n  //     keys = { ...keys, [key]: i[key] }\r\n  //   })\r\n  //   return keys\r\n  // })\r\n\r\n  return dataSource\r\n}\r\n\r\nexport const setWorkListTableColumnsHelper = (\r\n  organisations,\r\n  categories,\r\n  setVisible,\r\n  setRecord\r\n) => [\r\n  {\r\n    title: '№',\r\n    dataIndex: 'id',\r\n    key: 'id',\r\n    width: '2%',\r\n    align: 'center',\r\n    render: (text, record) => (\r\n      <a\r\n        onClick={() => {\r\n          setRecord(record)\r\n          setVisible(true)\r\n        }}\r\n      >\r\n        {text}\r\n      </a>\r\n    ),\r\n  },\r\n  {\r\n    title: 'Улица',\r\n    dataIndex: 'address',\r\n    key: 'address',\r\n    render: (text, record) => <>{text}</>,\r\n  },\r\n  {\r\n    title: 'Участок',\r\n    dataIndex: 'area',\r\n    key: 'area',\r\n  },\r\n  {\r\n    title: 'Категория работ',\r\n    dataIndex: 'category',\r\n    key: 'category',\r\n    filters: setFilterSelectsHelper(categories),\r\n    onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Отв орган',\r\n    dataIndex: 'organisation',\r\n    key: 'organisation',\r\n    filters: setFilterSelectsHelper(organisations),\r\n    onFilter: (value, record) => record.organisation.indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Дата начала',\r\n    dataIndex: 'start-date',\r\n    key: 'start-date',\r\n    width: '10%',\r\n    align: 'center',\r\n    filters: date_filters,\r\n    onFilter: (value, record) => record['start-date'].indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Дата окончания',\r\n    dataIndex: 'end-date',\r\n    key: 'end-date',\r\n    width: '10%',\r\n    align: 'center',\r\n    filters: date_filters,\r\n    onFilter: (value, record) => record['end-date'].indexOf(value) === 0,\r\n  },\r\n  {\r\n    title: 'Статус (%)',\r\n    dataIndex: 'percentage',\r\n    key: 'percentage',\r\n    editable: true,\r\n    width: '5%',\r\n    rule: true,\r\n    type: 'number',\r\n    align: 'center',\r\n    sorter: (a, b) => b.percentage - a.percentage,\r\n    sortDirections: ['ascend'],\r\n  },\r\n]\r\n\r\nexport const setCrossListTableColumnsHelper = (\r\n  setVisible,\r\n  setRecord,\r\n  intersections,\r\n  categories\r\n) => {\r\n  let arr = []\r\n\r\n  if (intersections.status === 'success') {\r\n    let count = 0\r\n    intersections.data.forEach((i) => {\r\n      if (i['roadwork-ids'].length > count) {\r\n        count = i['roadwork-ids'].length\r\n      }\r\n    })\r\n\r\n    for (let i = 0; i < count; i++) {\r\n      arr = [\r\n        ...arr,\r\n        {\r\n          title: `Работа ${i + 1}`,\r\n          dataIndex: `Работа ${i + 1}`,\r\n          key: `Работа ${i + 1}`,\r\n          width: '10%',\r\n          align: 'center',\r\n        },\r\n      ]\r\n    }\r\n  }\r\n\r\n  const cols = [\r\n    {\r\n      title: '№',\r\n      dataIndex: '№',\r\n      key: '№',\r\n      width: '2%',\r\n      align: 'center',\r\n      render: (text, record) => {\r\n        return (\r\n          <a\r\n            onClick={() => {\r\n              setRecord(record)\r\n              setVisible(true)\r\n            }}\r\n          >\r\n            {text}\r\n          </a>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: 'Улица',\r\n      dataIndex: 'address',\r\n      key: 'address',\r\n      width: '20%',\r\n    },\r\n    {\r\n      title: 'Категория работ',\r\n      dataIndex: 'category',\r\n      width: '30%',\r\n      key: 'category',\r\n      filters: setFilterSelectsHelper(categories),\r\n      onFilter: (value, record) => record.category.indexOf(value) === 0,\r\n    },\r\n  ]\r\n\r\n  return [...cols, ...arr]\r\n}\r\n\r\n//hardcoded date filters on year\r\nconst date_filters = ['2018', '2019', '2020', '2021', '2022']\r\n  .map((value) => ({\r\n    value,\r\n    text: value,\r\n  }))\r\n  .reverse()\r\n\r\n// //hardcoded date filters on year v2.0\r\n// const year = [2018, 2019, 2020, 2021, 2022]\r\n// const month = [\r\n//   'Январь',\r\n//   'Февраль',\r\n//   'Март',\r\n//   'Апрель',\r\n//   'Май',\r\n//   'Июнь',\r\n//   'Июль',\r\n//   'Август',\r\n//   'Сентябрь',\r\n//   'Октябрь',\r\n//   'Ноябрь',\r\n//   'Декабрь',\r\n// ]\r\n\r\n// const date_filters = [\r\n//   {\r\n//     value: 'year',\r\n//     text: 'year',\r\n//     children: year.map((value) => ({ value, text: value })),\r\n//   },\r\n//   {\r\n//     value: 'month',\r\n//     text: 'month',\r\n//     children: month.map((value) => ({ value, text: value })),\r\n//   },\r\n// ]\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Input } from 'antd'\r\n\r\nimport { WorkDetailsModal } from './WorkDetailsModal'\r\nimport { CustomTable as Table } from '../../../../common/Table'\r\nimport {\r\n  setWorkListTableColumnsHelper,\r\n  setWorkListDataSourceHelper,\r\n} from '../../utils/table_helper'\r\nimport {\r\n  deleteRoadmap,\r\n  putRoadmap,\r\n  setEditedId,\r\n  setDeletedId,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nexport const WorkListTable = () => {\r\n  const {\r\n    organisations,\r\n    categories,\r\n    status,\r\n    data,\r\n    editedId,\r\n    deletedId,\r\n  } = useSelector((state) => state.roadmap)\r\n  const dispatch = useDispatch()\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [record, setRecord] = useState({})\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [filtered, setFiltered] = useState()\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  const columns = useMemo(() => {\r\n    //TASK: set table columns labeling and operations\r\n    //LOGIC:pass filters' options and track popup visible state user click on id\r\n    //set row records on click\r\n    return setWorkListTableColumnsHelper(\r\n      organisations,\r\n      categories,\r\n      setVisible,\r\n      setRecord\r\n    )\r\n  }, [organisations, categories, setVisible, setRecord])\r\n\r\n  useEffect(() => {\r\n    //TASK:show changes made on filtered table's row after put || delete requests\r\n    //LOGIC:check if user still remains on filtered data\r\n    //if so, update filtered state data and set id null on redux store for further checkups\r\n    if (filtered) {\r\n      if (editedId) {\r\n        let item = dataSource.find((i) => i.id === editedId)\r\n        setFiltered((state) => state.map((i) => (i.id === editedId ? item : i)))\r\n        dispatch(setEditedId())\r\n      }\r\n      if (deletedId) {\r\n        setFiltered((state) => state.filter((i) => i.id !== deletedId))\r\n        dispatch(setDeletedId())\r\n      }\r\n    }\r\n  }, [dataSource, deletedId, editedId, filtered])\r\n\r\n  useMemo(() => {\r\n    // TASK: set table data\r\n    //LOGIC: pass data to adjust data to ant table's dataSource format\r\n    setDataSource(setWorkListDataSourceHelper(data))\r\n  }, [data])\r\n\r\n  const onEdit = (record) => {\r\n    //TASK: edit record\r\n    //LOGIC: request edit on redux side\r\n    dispatch(\r\n      putRoadmap({\r\n        reedit: false,\r\n        data: {\r\n          percentage: record.percentage,\r\n        },\r\n        id: record.id,\r\n      })\r\n    )\r\n  }\r\n\r\n  const onDelete = (record) => {\r\n    //TASK: delete record\r\n    //LOGIC: request delete on redux side\r\n    dispatch(deleteRoadmap(record.id))\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    setFiltered(\r\n      dataSource.filter((i) => {\r\n        if (\r\n          i.address &&\r\n          i.address.toLowerCase().includes(e.target.value.toLowerCase())\r\n        ) {\r\n          return true\r\n        }\r\n\r\n        return i.id.toString().includes(e.target.value.toLowerCase())\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item name={'search'}>\r\n        <Input\r\n          allowClear\r\n          placeholder={'Поиск по улице'}\r\n          onChange={onSearch}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='table'>\r\n        <Table\r\n          columns={columns}\r\n          data={filtered ? filtered : dataSource}\r\n          setData={setDataSource}\r\n          handleEdit={onEdit}\r\n          handleDelete={onDelete}\r\n          loading={status === 'loading' ? true : false}\r\n          isEditable={true}\r\n          isDeletable={true}\r\n        />\r\n      </Form.Item>\r\n      {visible && (\r\n        <Form.Item name='modal'>\r\n          <WorkDetailsModal\r\n            visible={visible}\r\n            setVisible={setVisible}\r\n            record={record}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport {\r\n  getRoadmapOrganisations,\r\n  getRoadmapCategories,\r\n  getRoadmapRegions,\r\n  getRoadmap,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { WorkListModal as Modal } from './WorkListModal'\r\nimport { WorkListTable as Table } from './WorkListTable'\r\n\r\nexport const WorkList = () => {\r\n  const dispatch = useDispatch()\r\n  const { organisations, categories, regions, data } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n\r\n  useEffect(() => {\r\n    organisations.data.length === 0 && dispatch(getRoadmapOrganisations())\r\n    regions.data.length === 0 && dispatch(getRoadmapRegions())\r\n    categories.data.length === 0 && dispatch(getRoadmapCategories())\r\n    data.length === 0 && dispatch(getRoadmap())\r\n  }, [organisations, regions, categories, data])\r\n\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <Table />\r\n    </>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Select, Form } from 'antd'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { setIntersectionsMapData } from '../../../../../features/roadmap/roadmapSlice'\r\n\r\nconst { Option } = Select\r\n\r\nconst SelectGroup = ({ order, form }) => {\r\n  const [options, setOptions] = useState([])\r\n\r\n  const { categories, data, intersectionsMapData } = useSelector(\r\n    (state) => state.roadmap\r\n  )\r\n  const dispatch = useDispatch()\r\n\r\n  let arr =\r\n    categories.status === 'success' ? categories.data.map((r) => r.name) : []\r\n\r\n  const onChangeWorkId = (id) => {\r\n    dispatch(\r\n      setIntersectionsMapData([\r\n        ...intersectionsMapData,\r\n        {\r\n          type: 'polygon',\r\n          coordinates: data.find((i) => i.id === id).geometries.coordinates,\r\n        },\r\n      ])\r\n    )\r\n  }\r\n\r\n  const onChangeCategory = (value) => {\r\n    setOptions(data.filter((i) => i.category === value).map((i) => i.id))\r\n    form.setFieldsValue({ [`roadwork-${order}`]: '' })\r\n  }\r\n\r\n  return (\r\n    <Form.Item style={{ marginRight: 20 }}>\r\n      <Form.Item\r\n        name={`category-${order}`}\r\n        rules={[{ required: true, message: 'Заполните поле' }]}\r\n      >\r\n        <Select\r\n          placeholder={'Категория работ'}\r\n          style={{ width: 320 }}\r\n          onChange={onChangeCategory}\r\n        >\r\n          {arr.map((i) => (\r\n            <Option value={i} key={i}>\r\n              {i}\r\n            </Option>\r\n          ))}\r\n        </Select>\r\n      </Form.Item>\r\n      {options.length > 0 && (\r\n        <Form.Item\r\n          name={`roadwork-${order}`}\r\n          rules={[{ required: true, message: 'Заполните поле' }]}\r\n          key={`roadwork-${order}`}\r\n        >\r\n          <Select\r\n            placeholder={`Работа ${order}`}\r\n            style={{ width: 320 }}\r\n            onChange={onChangeWorkId}\r\n          >\r\n            {options.map((i) => (\r\n              <Option value={i} key={i}>\r\n                {i}\r\n              </Option>\r\n            ))}\r\n          </Select>\r\n        </Form.Item>\r\n      )}\r\n    </Form.Item>\r\n  )\r\n}\r\n\r\nexport default React.memo(SelectGroup)\r\n","import React, { useState } from 'react'\r\nimport { Form, Button, Input } from 'antd'\r\n\r\nimport SelectGroup from './SelectGroup'\r\n\r\nexport const AddCrossWorks = ({ form }) => {\r\n  const [count, setCount] = useState([1, 2])\r\n\r\n  return (\r\n    <div style={{ marginBottom: 20 }}>\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          flexWrap: 'wrap',\r\n        }}\r\n      >\r\n        {count.map((key) => (\r\n          <SelectGroup order={key} form={form} />\r\n        ))}\r\n      </div>\r\n      <div style={{ display: 'flex', alignItems: 'center', marginTop: 15 }}>\r\n        <div style={{ marginRight: 25 }}>\r\n          <Button\r\n            size='small'\r\n            type='primary'\r\n            shape='circle'\r\n            onClick={() => setCount([...count, count.length + 1])}\r\n          >\r\n            +\r\n          </Button>{' '}\r\n          <span>Добавить еще одну</span>\r\n        </div>\r\n        <>\r\n          <Button\r\n            disabled={count.length === 2}\r\n            size='small'\r\n            type='primary'\r\n            shape='circle'\r\n            onClick={() => {\r\n              setCount([...count.filter((i) => i !== count.length)])\r\n            }}\r\n          >\r\n            -\r\n          </Button>{' '}\r\n          <span style={{ marginLeft: 5 }}>Убрать</span>\r\n        </>\r\n      </div>\r\n      <Form.Item name='area'>\r\n        <Input\r\n          placeholder={'Участок пересечения'}\r\n          style={{ width: '30%', marginTop: 15 }}\r\n        />\r\n      </Form.Item>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button, Modal, Form } from 'antd'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport {\r\n  postIntersections,\r\n  setCurrent,\r\n  resetIntersectionsMapData,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\nimport { AddCrossWorks } from './form/AddCrossWorks'\r\nimport { CustomYandexMap as YandexMap } from '../../common'\r\n\r\nexport const CrossListModal = () => {\r\n  const [visible, setVisible] = useState()\r\n  const [form] = Form.useForm()\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const onCancel = () => {\r\n    dispatch(resetIntersectionsMapData())\r\n    form.resetFields()\r\n    setVisible(false)\r\n  }\r\n\r\n  const onSave = async () => {\r\n    let data = await form.validateFields()\r\n    const ids = Object.keys(data)\r\n      .filter((key) => key.split('-')[0] === 'roadwork')\r\n      .map((i) => data[i])\r\n    data = { 'roadwork-ids': ids, 'intersection-area': data.area }\r\n    dispatch(postIntersections(data))\r\n    form.resetFields()\r\n    setVisible(false)\r\n  }\r\n\r\n  const onAddIntersection = () => {\r\n    dispatch(setCurrent(1))\r\n    setVisible(true)\r\n  }\r\n\r\n  const config = [\r\n    <Button key='back' onClick={onCancel}>\r\n      Отменить\r\n    </Button>,\r\n    <Button key='submit' type='primary' onClick={onSave}>\r\n      Сохранить\r\n    </Button>,\r\n  ]\r\n\r\n  return (\r\n    <>\r\n      <Button\r\n        type='primary'\r\n        onClick={onAddIntersection}\r\n        style={{ marginBottom: 10 }}\r\n      >\r\n        Добавить пересечение\r\n      </Button>\r\n      <Modal\r\n        title='Форма ввода данных по пересечению работ'\r\n        visible={visible}\r\n        onCancel={() => setVisible(false)}\r\n        width={'80%'}\r\n        footer={config}\r\n      >\r\n        <Form form={form}>\r\n          <AddCrossWorks form={form} />\r\n          <div style={{ width: '100%', paddingLeft: 10 }}>\r\n            <YandexMap />\r\n          </div>\r\n        </Form>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { Modal, Button } from 'antd'\r\n\r\nimport {\r\n  setIntersectionsMapData,\r\n  resetIntersectionsMapData,\r\n  setCurrent,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { CustomYandexMap as YandexMap } from '../../common'\r\nimport { WorkConfirm as FormDetails } from '../WorkList/form/WorkConfirm'\r\n\r\nexport const CrossDetailsModal = (props) => {\r\n  const { visible, setVisible, record, data, intersectionsMapData } = props\r\n  const [array, setArray] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    let arr = data.filter((i) => record.ids.includes(i.id))\r\n\r\n    //draw work coordinates\r\n    let list = arr.map((i) => ({\r\n      type: 'polygon',\r\n      coordinates: i.geometries.coordinates,\r\n    }))\r\n    list = [\r\n      ...list,\r\n      {\r\n        ...record.intersection,\r\n      },\r\n    ]\r\n\r\n    setArray(arr)\r\n    dispatch(setCurrent(1))\r\n    dispatch(setIntersectionsMapData([...intersectionsMapData, ...list]))\r\n\r\n    return () => {\r\n      dispatch(setCurrent(0))\r\n      dispatch(resetIntersectionsMapData())\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Modal\r\n      title='Детали улицы'\r\n      visible={visible}\r\n      width={'50%'}\r\n      onCancel={() => setVisible(false)}\r\n      onOk={() => setVisible(false)}\r\n      footer={[\r\n        <Button key='close' onClick={() => setVisible(false)}>\r\n          Закрыть\r\n        </Button>,\r\n      ]}\r\n    >\r\n      <div\r\n        style={{\r\n          display: 'flex',\r\n          // justifyContent: 'space-between',\r\n          flexWrap: 'wrap',\r\n          width: '90%',\r\n          margin: 'auto',\r\n        }}\r\n      >\r\n        {array.map((i, index) => (\r\n          <div\r\n            style={{\r\n              width: `${array.length > 2 ? '33%' : '50%'}`,\r\n            }}\r\n          >\r\n            <h2>Работа {index + 1}</h2>\r\n            <FormDetails ob={i} />\r\n          </div>\r\n        ))}\r\n      </div>\r\n      <div style={{ width: '100%', paddingLeft: 10 }}>\r\n        <YandexMap />\r\n      </div>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useState, useMemo, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Form, Input } from 'antd'\r\n\r\nimport {\r\n  setDeletedIntersectionId,\r\n  deleteIntersection,\r\n} from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { CrossDetailsModal } from './CrossDetailsModal'\r\nimport { CustomTable as Table } from '../../../../common/Table'\r\nimport {\r\n  setCrossListTableColumnsHelper,\r\n  setCrossListDataSourceHelper,\r\n} from '../../utils/table_helper'\r\n\r\nexport const CrossListTable = () => {\r\n  const {\r\n    categories,\r\n    intersections,\r\n    data,\r\n    deletedIntersectionId,\r\n    intersectionsMapData,\r\n  } = useSelector((state) => state.roadmap)\r\n  const dispatch = useDispatch()\r\n\r\n  const [visible, setVisible] = useState(false)\r\n  const [record, setRecord] = useState({})\r\n  const [dataSource, setDataSource] = useState([])\r\n  const [filtered, setFiltered] = useState()\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (filtered && deletedIntersectionId) {\r\n      setFiltered((state) =>\r\n        state.filter((i) => i.id !== deletedIntersectionId)\r\n      )\r\n      dispatch(setDeletedIntersectionId())\r\n    }\r\n  }, [dataSource, deletedIntersectionId, filtered])\r\n\r\n  useMemo(() => {\r\n    setDataSource(setCrossListDataSourceHelper(data, intersections))\r\n  }, [data, intersections])\r\n\r\n  const columns = useMemo(() => {\r\n    return setCrossListTableColumnsHelper(\r\n      setVisible,\r\n      setRecord,\r\n      intersections,\r\n      categories\r\n    )\r\n  }, [setVisible, setRecord, intersections, categories])\r\n\r\n  const onDelete = (record) => {\r\n    dispatch(deleteIntersection(record.id))\r\n  }\r\n\r\n  const onSearch = (e) => {\r\n    setFiltered(\r\n      dataSource.filter((i) => {\r\n        if (\r\n          i.address &&\r\n          i.address.toLowerCase().includes(e.target.value.toLowerCase())\r\n        ) {\r\n          return true\r\n        }\r\n\r\n        let isIncluded = false\r\n        i.ids.forEach((id) => {\r\n          if (id.toString().includes(e.target.value.toLowerCase())) {\r\n            isIncluded = true\r\n          }\r\n        })\r\n        return isIncluded\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item name={'search'}>\r\n        <Input\r\n          allowClear\r\n          placeholder={'Поиск по улице'}\r\n          onChange={onSearch}\r\n          style={{ width: 300 }}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name='table'>\r\n        <Table\r\n          columns={columns}\r\n          data={filtered ? filtered : dataSource}\r\n          setData={setDataSource}\r\n          handleDelete={onDelete}\r\n          loading={intersections.status !== 'success' ? true : false}\r\n          isDeletable={true}\r\n        />\r\n      </Form.Item>\r\n      {visible && (\r\n        <Form.Item name='modal'>\r\n          <CrossDetailsModal\r\n            visible={visible}\r\n            setVisible={setVisible}\r\n            record={record}\r\n            data={data}\r\n            intersectionsMapData={intersectionsMapData}\r\n          />\r\n        </Form.Item>\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n","import React, { useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\nimport { getIntersections } from '../../../../features/roadmap/roadmapSlice'\r\n\r\nimport { CrossListModal as Modal } from './CrossListModal'\r\nimport { CrossListTable as Table } from './CrossListTable'\r\n\r\nexport const CrossList = () => {\r\n  const dispatch = useDispatch()\r\n  const { intersections } = useSelector((state) => state.roadmap)\r\n\r\n  useEffect(() => {\r\n    intersections.data.length === 0 && dispatch(getIntersections())\r\n  }, [intersections])\r\n\r\n  return (\r\n    <>\r\n      <Modal />\r\n      <Table />\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { CustomTabs as Tabs } from '../common'\r\n\r\nimport { WorkList } from './WorkList/index'\r\nimport { CrossList } from './CrossList/index'\r\n\r\nexport const RoadMap = () => {\r\n  return <Tabs tabs={tabs} />\r\n}\r\n\r\nconst tabs = [\r\n  {\r\n    title: 'Список работ',\r\n    child: <WorkList />,\r\n  },\r\n  {\r\n    title: 'Список пересечений',\r\n    child: <CrossList />,\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nimport { RoadMap } from './components/RoadMap'\r\n\r\nimport './index.css'\r\nimport 'antd/dist/antd.css'\r\n\r\nconst Roadmap = () => <RoadMap />\r\n\r\nexport default withRouter(Roadmap)\r\n","import React, { useState, useEffect, useMemo } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport { putHeads } from '../../features/heads/headsSlice'\r\nimport { setColumnsHelper, setDataSourceHelper } from '../../utils/heads_table'\r\n\r\nconst HeadsTable = ({ organisations, data, status }) => {\r\n  const [dataSource, setDataSource] = useState([])\r\n\r\n  useEffect(() => {\r\n    status === 'success' && setDataSource(setDataSourceHelper(data))\r\n  }, [status, data])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const columns = useMemo(() => {\r\n    let options =\r\n      organisations.status === 'success' &&\r\n      organisations.data.map((i) => ({\r\n        value: `${i.abbreviation}-${i['full-name']}`,\r\n        id: i.id,\r\n        label: `${i.abbreviation}-${i['full-name']}`,\r\n      }))\r\n    return setColumnsHelper(options)\r\n  }, [organisations])\r\n\r\n  const onEdit = (record) => {\r\n    if (organisations.status === 'success') {\r\n      let ids = organisations.data\r\n        .filter((i) =>\r\n          record['supervised-organisations'].includes(\r\n            `${i.abbreviation}-${i['full-name']}`\r\n          )\r\n        )\r\n        .map((i) => i.id)\r\n\r\n      let ob = { name: record.name, 'supervised-organisations': ids }\r\n\r\n      dispatch(\r\n        putHeads({\r\n          id: record['supervisor-id'],\r\n          client: {\r\n            name: record.name,\r\n            'supervised-organisations': record['supervised-organisations'].map(\r\n              (i) => ({\r\n                abbreviation: i.split('-')[0],\r\n                'full-name': i.split('-')[1],\r\n              })\r\n            ),\r\n          },\r\n          server: ob,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Table\r\n        columns={columns}\r\n        data={dataSource}\r\n        setData={setDataSource}\r\n        loading={status !== 'success'}\r\n        handleEdit={onEdit}\r\n        isEditable={true}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default React.memo(HeadsTable)\r\n","import React from 'react'\r\nimport { Tag, Avatar } from 'antd'\r\n\r\nexport const setColumnsHelper = (options) => {\r\n  return [\r\n    {\r\n      title: '№',\r\n      dataIndex: '#',\r\n      width: '2%',\r\n      align: 'center',\r\n    },\r\n\r\n    {\r\n      title: 'Должность',\r\n      dataIndex: 'position',\r\n      width: '25%',\r\n    },\r\n    {\r\n      title: 'ФИО',\r\n      dataIndex: 'name',\r\n      width: '30%',\r\n      editable: true,\r\n    },\r\n    {\r\n      title: 'Курируемые организации',\r\n      dataIndex: 'supervised-organisations',\r\n      width: '35%',\r\n      type: 'multi-select',\r\n      editable: true,\r\n      data: options,\r\n      render: (tags) => {\r\n        return (\r\n          <span>\r\n            {tags.map((tag, index) => {\r\n              let color = tags.length > 3 ? 'geekblue' : 'green'\r\n              return (\r\n                <Tag\r\n                  color={color}\r\n                  key={`${tag.split('-')[0]}-${index}`}\r\n                  style={{ margin: '5px 5px' }}\r\n                >\r\n                  {/* {`${tag['abbreviation'].toUpperCase()} -\r\n                    ${tag['full-name'].toUpperCase()}`} */}\r\n                  {tag.toUpperCase()}\r\n                </Tag>\r\n              )\r\n            })}\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n    {\r\n      title: 'Фото',\r\n      dataIndex: 'image-path',\r\n      width: '10%',\r\n      align: 'center',\r\n      // editable: true,\r\n      render: (path) => {\r\n        return <Avatar size='large' src={path} />\r\n      },\r\n    },\r\n  ]\r\n}\r\n\r\nexport const setDataSourceHelper = (data) =>\r\n  data.map((i, index) => ({\r\n    key: i['supervisor-id'],\r\n    '#': ++index,\r\n    'supervisor-id': i['supervisor-id'],\r\n    name: i.name,\r\n    position: i.position,\r\n    'image-path': i['image-path'],\r\n    'supervised-organisations': i['supervised-organisations'].map(\r\n      (o) => `${o.abbreviation}-${o['full-name']}`\r\n    ),\r\n  }))\r\n","import React from 'react'\r\nimport { Modal, Button } from 'antd'\r\n\r\nexport default class CustomModal extends React.Component {\r\n  state = { visible: false }\r\n\r\n  showModal = () => {\r\n    this.setState({\r\n      visible: true,\r\n    })\r\n  }\r\n\r\n  handleOk = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  handleCancel = (e) => {\r\n    this.setState({\r\n      visible: false,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const { btntext, btnstyle, title, children } = this.props\r\n    return (\r\n      <>\r\n        <Button type='primary' onClick={this.showModal} style={btnstyle}>\r\n          {btntext}\r\n        </Button>\r\n        <Modal\r\n          title={title}\r\n          width='50%'\r\n          visible={this.state.visible}\r\n          onOk={this.handleOk}\r\n          onCancel={this.handleCancel}\r\n          className='Leaders_style_modal'\r\n          footer={null}\r\n        >\r\n          {children}\r\n        </Modal>\r\n      </>\r\n    )\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport Modal from '../../common/Modal'\r\nimport { CustomTable as Table } from '../../common/Table'\r\nimport { putOrganisationList } from '../../features/admin/adminSlice'\r\n\r\nconst HeadsModal = ({ organisations }) => {\r\n  const [dataSource, setDataSource] = useState([])\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    if (organisations.status === 'success') {\r\n      let arr = organisations.data.map((i, index) => ({\r\n        key: i.id,\r\n        '#': ++index,\r\n        'full-name': `${i.abbreviation}-${i['full-name']}`,\r\n        abbreviation: i.abbreviation,\r\n        id: i.id,\r\n      }))\r\n\r\n      setDataSource(arr)\r\n    }\r\n  }, [organisations])\r\n\r\n  const onEdit = (record) => {\r\n    dispatch(\r\n      putOrganisationList({\r\n        abbreviation: record.abbreviation,\r\n        'full-name': record['full-name'],\r\n        id: record.id,\r\n      })\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      btntext='Редактировать курируемые организации'\r\n      btnstyle={{ marginBottom: 15 }}\r\n      title='Курируемые организации'\r\n    >\r\n      <Table\r\n        columns={columns}\r\n        data={dataSource}\r\n        setData={setDataSource}\r\n        loading={organisations.status !== 'success'}\r\n        handleEdit={onEdit}\r\n        isEditable={true}\r\n      />\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default React.memo(HeadsModal)\r\n\r\nconst columns = [\r\n  {\r\n    title: '№',\r\n    dataIndex: '#',\r\n    width: '2%',\r\n    align: 'center',\r\n  },\r\n  {\r\n    title: 'Аббревиатура',\r\n    dataIndex: 'abbreviation',\r\n    width: '20%',\r\n    editable: true,\r\n  },\r\n  {\r\n    title: 'Курируемые организации',\r\n    dataIndex: 'full-name',\r\n    width: '50%',\r\n    editable: true,\r\n  },\r\n]\r\n","import React, { useEffect } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getHeads } from '../../features/heads/headsSlice'\r\nimport HeadsTable from './HeadsTable'\r\nimport HeadsModal from './HeadsModal'\r\n\r\nconst Heads = () => {\r\n  const { organisationList, config } = useSelector((state) => state.admin)\r\n  const { status, data } = useSelector((state) => state.heads)\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    config && data.length === 0 && dispatch(getHeads(config))\r\n  }, [data, config])\r\n\r\n  return (\r\n    <div>\r\n      <HeadsModal organisations={organisationList} />\r\n      <HeadsTable\r\n        organisations={organisationList}\r\n        data={data}\r\n        status={status}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(Heads)\r\n","import React, { createContext, useState } from 'react'\r\n\r\nconst AppContext = createContext()\r\n\r\nconst AppContextProvider = ({ children }) => {\r\n  let [selectedValue, setSelectedValue] = useState()\r\n  let [selectedDictionaryName, setSelectedDictionaryName] = useState()\r\n  let [selectedIndustry, setSelectedIndustry] = useState()\r\n  let [filteredData, setFilteredData] = useState(null)\r\n  let [indicators, setIndicators] = useState({})\r\n  let [searchText, setSearchText] = useState()\r\n  let [fetchedDictionaryData, setFetchedDictionaryData] = useState({\r\n    loading: true,\r\n  })\r\n  let [fetchedIndicatorInfoData, setFetchedIndicatorInfoData] = useState({\r\n    loading: true,\r\n  })\r\n  let [fetchedIndicatorData, setFetchedIndicatorData] = useState({\r\n    loading: true,\r\n  })\r\n  let [\r\n    fetchedIndicatorStrategyData,\r\n    setFetchedIndicatorStrategyData,\r\n  ] = useState({\r\n    loading: true,\r\n  })\r\n  let [modalIndicator, setModalIndicator] = useState()\r\n\r\n  return (\r\n    <AppContext.Provider\r\n      value={{\r\n        selectedValue,\r\n        setSelectedValue,\r\n        filteredData,\r\n        setFilteredData,\r\n        indicators,\r\n        setIndicators,\r\n        dictionary_names,\r\n        searchText,\r\n        setSearchText,\r\n        fetchedDictionaryData,\r\n        setFetchedDictionaryData,\r\n        fetchedIndicatorData,\r\n        setFetchedIndicatorData,\r\n        fetchedIndicatorStrategyData,\r\n        setFetchedIndicatorStrategyData,\r\n        fetchedIndicatorInfoData,\r\n        setFetchedIndicatorInfoData,\r\n        selectedDictionaryName,\r\n        setSelectedDictionaryName,\r\n        selectedIndustry,\r\n        setSelectedIndustry,\r\n        modalIndicator,\r\n        setModalIndicator,\r\n      }}\r\n    >\r\n      {children}\r\n    </AppContext.Provider>\r\n  )\r\n}\r\n\r\nexport { AppContext, AppContextProvider }\r\n\r\nconst dictionary_names = [\r\n  'Сфера',\r\n  'Государственная программа',\r\n  'Периодичность обновления',\r\n  'Единица измерения',\r\n  'Ответственный орган',\r\n  'Источник информации',\r\n  'Стратегия 2050',\r\n  // 'Стратегия 2050',\r\n]\r\n","import axios from 'axios'\r\n\r\nexport const getAPI = async (url) => await axios(url)\r\n\r\nexport const postAPI = async (url, data) => await axios.post(url, data)\r\n\r\nexport const putAPI = async (url, data) => await axios.put(url, data)\r\n\r\nexport const deleteAPI = async (url) => await axios.delete(url)\r\n","import React from 'react'\r\nimport { Button } from 'antd'\r\n\r\nexport const AdminButton = ({\r\n  handleAdd,\r\n  text2,\r\n  text1,\r\n  text3,\r\n  style = {\r\n    margin: '5 0',\r\n  },\r\n  text = `+`,\r\n}) => {\r\n  const handleClick = () => handleAdd()\r\n  const renderBTN = (text1, text2, text3) => {\r\n    if (text1) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text1}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n\r\n    if (text2) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text2}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n    if (text3) {\r\n      return (\r\n        <Button\r\n          type='primary'\r\n          onClick={handleClick}\r\n          style={style}\r\n          className='AdminButton_style'\r\n          title={text3}\r\n        >\r\n          {text}\r\n        </Button>\r\n      )\r\n    }\r\n  }\r\n  return renderBTN(text1, text2, text3)\r\n  /* text2 ? <Button type='primary' onClick={handleClick} style={style} className='AdminButton_style' title={text2}>\r\n            {text}\r\n        </Button> : <Button type='primary' onClick={handleClick} style={style} className='AdminButton_style' title={text1}>\r\n            {text}\r\n        </Button>*/\r\n}\r\n","import React from 'react'\r\nimport { Card } from 'antd'\r\n\r\nexport const AdminCard = (props) => {\r\n  const { title } = props\r\n\r\n  return (\r\n    <Card\r\n      title={title}\r\n      bordered={false}\r\n      style={{ width: '100%' }}\r\n      className='AdminCard_style'\r\n    >\r\n      {/* <Space direction='vertical'>{props.children}</Space> */}\r\n      {props.children}\r\n    </Card>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Form, Input, InputNumber, Select } from 'antd'\r\n\r\nexport const EditableCell = ({\r\n  data,\r\n  editing,\r\n  dataIndex,\r\n  title,\r\n  inputType,\r\n  record,\r\n  children,\r\n  ...restProps\r\n}) => {\r\n  const switchCase = (type) => {\r\n    switch (type) {\r\n      case 'select':\r\n        return (\r\n          <Select placeholder='Выбрать значение' allowClear>\r\n            {data &&\r\n              data.map((item) => (\r\n                <Select.Option\r\n                  key={`${item.title}-${item.id}`}\r\n                  value={item.title}\r\n                >\r\n                  {item.title}\r\n                </Select.Option>\r\n              ))}\r\n          </Select>\r\n        )\r\n      case 'number':\r\n        return <InputNumber className='Edit_input_style' min={0} />\r\n      default:\r\n        return <Input className='Edit_input_style' />\r\n    }\r\n  }\r\n\r\n  const inputNode = switchCase(inputType)\r\n\r\n  return (\r\n    <td {...restProps} className='Table_td_style_line'>\r\n      {editing ? (\r\n        <Form.Item\r\n          name={dataIndex}\r\n          style={{\r\n            margin: 0,\r\n          }}\r\n          rules={\r\n            inputType !== 'select' &&\r\n            inputType !== 'date' &&\r\n            inputType !== 'number' && [\r\n              {\r\n                required: true,\r\n                message: `это поле необходимо заполнить!`,\r\n              },\r\n            ]\r\n          }\r\n        >\r\n          {inputNode}\r\n        </Form.Item>\r\n      ) : (\r\n        children\r\n      )}\r\n    </td>\r\n  )\r\n}\r\n","import React, {\r\n  useMemo,\r\n  useCallback,\r\n  useState,\r\n  useContext,\r\n  useEffect,\r\n} from 'react'\r\nimport { Table, Form, Space, Popconfirm } from 'antd'\r\nimport {\r\n  EditOutlined,\r\n  DeleteOutlined,\r\n  SaveOutlined,\r\n  CloseOutlined,\r\n} from '@ant-design/icons'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI, deleteAPI } from '../../utils/api'\r\n\r\nimport { EditableCell } from './EditableCell'\r\n\r\nconst AdminTable = ({\r\n  cols,\r\n  data,\r\n  loading,\r\n  url,\r\n  url2,\r\n  setFetchedData,\r\n  save,\r\n  isLink,\r\n}) => {\r\n  const { searchText } = useContext(AppContext)\r\n  const [filtered, setFiltered] = useState()\r\n  const [editingKey, setEditingKey] = useState('')\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  useEffect(() => {\r\n    if (data && searchText) {\r\n      let arr = data.filter((item) => {\r\n        let obb =\r\n          item.children &&\r\n          item.children.some((ob) => {\r\n            const isNestedFilter = ob.key\r\n              .toLowerCase()\r\n              .includes(searchText.toLowerCase())\r\n            return isNestedFilter\r\n          })\r\n\r\n        const isFilter =\r\n          item.key && item.key.toLowerCase().includes(searchText.toLowerCase())\r\n        return obb ? obb : isFilter\r\n      })\r\n\r\n      setFiltered(arr)\r\n    }\r\n  }, [data, searchText])\r\n\r\n  const isEditing = useCallback(\r\n    (record) => {\r\n      return record.key === editingKey\r\n    },\r\n    [editingKey]\r\n  )\r\n\r\n  const edit = (record, form, setEditingKey) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    // console.log(record)\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const cancel = () => {\r\n    setEditingKey('')\r\n  }\r\n\r\n  const handleDelete = useCallback(\r\n    (id) => {\r\n      deleteAPI(`${url}/${id}`).then((res) =>\r\n        getAPI(url2 ? url2 : url)\r\n          .then((res) =>\r\n            setFetchedData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          )\r\n          .catch((err) => console.log(err))\r\n      )\r\n    },\r\n    [url, url2, setFetchedData]\r\n  )\r\n\r\n  // console.log(data)\r\n  const mergedColumns = useMemo(() => {\r\n    const arr = isLink\r\n      ? cols\r\n      : [\r\n          ...cols,\r\n          {\r\n            title: 'Действие',\r\n            dataIndex: '',\r\n            key: 'x',\r\n            render: (_, record) => {\r\n              const editable = isEditing(record)\r\n              return editable ? (\r\n                <span>\r\n                  <a\r\n                    onClick={() => save(record, form, setEditingKey)}\r\n                    style={{\r\n                      marginRight: 8,\r\n                    }}\r\n                  >\r\n                    <SaveOutlined\r\n                      className='icon_edit_btn_style'\r\n                      title='Сохранить'\r\n                    />\r\n                  </a>\r\n                  <Popconfirm\r\n                    title='Вы уверены что хотите оменить изменения?'\r\n                    onConfirm={cancel}\r\n                  >\r\n                    <CloseOutlined\r\n                      className='icon_edit_btn_style'\r\n                      title='Отменить'\r\n                    />\r\n                  </Popconfirm>\r\n                </span>\r\n              ) : (\r\n                <Space>\r\n                  <a\r\n                    disabled={editingKey !== ''}\r\n                    onClick={() => edit(record, form, setEditingKey)}\r\n                  >\r\n                    <EditOutlined\r\n                      className='icon_edit_btn_style'\r\n                      title='Редактировать'\r\n                    />\r\n                  </a>\r\n                  <Popconfirm\r\n                    title='Вы уверены что хотите удалить даныне?'\r\n                    onConfirm={() => handleDelete(record.id)}\r\n                  >\r\n                    <DeleteOutlined\r\n                      className='icon_edit_btn_style'\r\n                      title='Удалить'\r\n                    />\r\n                  </Popconfirm>\r\n                </Space>\r\n              )\r\n            },\r\n          },\r\n        ]\r\n\r\n    let cols_ =\r\n      cols.length > 0 && cols[0].title === 'Все справочники' ? cols : arr\r\n\r\n    return cols_.map((col) => {\r\n      if (!col.editable) {\r\n        return col\r\n      }\r\n\r\n      return {\r\n        ...col,\r\n        onCell: (record) => {\r\n          return {\r\n            record,\r\n            // setindicator: col.setIndicator,\r\n            inputType: col.type,\r\n            dataIndex: col.dataIndex,\r\n            title: col.title,\r\n            data: col.data,\r\n            editing: isEditing(record),\r\n            // callback: col.callBack,\r\n          }\r\n        },\r\n      }\r\n    })\r\n  }, [cols, editingKey, isEditing, handleDelete, save, isLink, form])\r\n\r\n  return (\r\n    <Form form={form} component={false}>\r\n      <Table\r\n        components={{\r\n          body: {\r\n            cell: EditableCell,\r\n          },\r\n        }}\r\n        locale={{\r\n          filterTitle: 'Меню фильтра',\r\n          filterConfirm: 'Ок',\r\n          filterReset: 'Сбросить',\r\n          filterEmptyText: 'Нет фильтров',\r\n          selectAll: 'Выбрать текущую страницу',\r\n          selectInvert: 'Invert current page',\r\n          selectionAll: 'Выбрать все',\r\n          sortTitle: 'Сортировать',\r\n          expand: 'Expand row',\r\n          collapse: 'Collapse row',\r\n          triggerDesc: 'Сортировать по убыванию',\r\n          triggerAsc: 'Сортировать по возрастанию',\r\n          cancelSort: 'Отменить сортировку',\r\n        }}\r\n        columns={mergedColumns}\r\n        dataSource={searchText ? filtered : data}\r\n        loading={loading}\r\n        pagination={{\r\n          pageSizeOptions: ['10', '20', '25', '30'],\r\n          showSizeChanger: true,\r\n          locale: { items_per_page: '' },\r\n          onChange: cancel,\r\n        }}\r\n        className='AdminTable_style'\r\n      />\r\n    </Form>\r\n  )\r\n}\r\n\r\nexport default React.memo(AdminTable)\r\n","import React, { useEffect, useMemo, useContext, useState } from 'react'\r\nimport { putAPI, getAPI } from '../../utils/api'\r\nimport {\r\n  getObjectKeys,\r\n  capitalizeFirstLetter,\r\n  strcmp,\r\n} from '../../utils/helper'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Modal } from '../common'\r\nimport AdminTable from '../common/AdminTable'\r\n\r\nexport const AdminIndicator = ({ isLink, isStrategy }) => {\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const {\r\n    dictionary_names,\r\n    setModalIndicator,\r\n    fetchedDictionaryData,\r\n    fetchedIndicatorData,\r\n    setFetchedIndicatorData,\r\n  } = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    getAPI('/sc-analytic-indicators/api/indicators').then((res) => {\r\n      setFetchedIndicatorData({\r\n        loading: false,\r\n        data: res.data,\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  const dataSource = useMemo(() => {\r\n    if (!fetchedIndicatorData.loading) {\r\n      let datasource_ = {}\r\n      const arr = isStrategy\r\n        ? fetchedIndicatorData.data.filter((item) => {\r\n            if (\r\n              item.dictionaries.Тип &&\r\n              item.dictionaries.Тип === 'Стратегия'\r\n            ) {\r\n              return item\r\n            }\r\n          })\r\n        : fetchedIndicatorData.data.filter((item) => {\r\n            if (\r\n              item.dictionaries.Тип &&\r\n              item.dictionaries.Тип === 'Индикатор'\r\n            ) {\r\n              return item\r\n            }\r\n          })\r\n\r\n      arr.forEach((indicator) => {\r\n        let ob = {\r\n          id: indicator.id,\r\n          key: `${indicator.name}-${indicator.id}`,\r\n          Индикатор: indicator.name,\r\n        }\r\n        getObjectKeys(indicator.dictionaries).map((dictionary_name) => {\r\n          ob = {\r\n            ...ob,\r\n            [dictionary_name]: indicator.dictionaries[dictionary_name],\r\n          }\r\n        })\r\n\r\n        datasource_ = { ...datasource_, [indicator.name]: ob }\r\n      })\r\n\r\n      return Object.values(datasource_)\r\n    } else {\r\n      return []\r\n    }\r\n  }, [fetchedIndicatorData, isStrategy])\r\n\r\n  const columns = useMemo(() => {\r\n    let names = [...dictionary_names, 'Отрасль'] //table column names\r\n    names = names.filter((name) =>\r\n      isStrategy ? name !== 'Сфера' : name !== 'Стратегия 2050'\r\n    )\r\n    names.sort()\r\n\r\n    //get filter and select option drop data\r\n    let filter = {} //table column's filter options\r\n    let option_data = {} // on edit drop select options\r\n    if (!fetchedDictionaryData.loading) {\r\n      fetchedDictionaryData.data.forEach((item) => {\r\n        filter = {\r\n          ...filter,\r\n          [item.name]: item.options.map((option) => option.name),\r\n        }\r\n\r\n        if (\r\n          !isStrategy ? item.name === 'Сфера' : item.name === 'Стратегия 2050'\r\n        ) {\r\n          const arr = item.options.map((i) => i.options.map((ii) => ii.name))\r\n          filter = { ...filter, Отрасль: [].concat(...arr) }\r\n        }\r\n\r\n        option_data = {\r\n          ...option_data,\r\n          [item.name]: item.options.map((option) => {\r\n            return {\r\n              title: option.name,\r\n              value: option.name,\r\n              id: option.id,\r\n              children: [],\r\n            }\r\n          }),\r\n        }\r\n      })\r\n\r\n      const obj = fetchedDictionaryData.data.find((item) =>\r\n        isStrategy ? item.name === 'Стратегия 2050' : item.name === 'Сфера'\r\n      )\r\n\r\n      option_data = {\r\n        ...option_data,\r\n        Отрасль: [].concat(\r\n          ...obj.options.map((op) =>\r\n            op.options.map((o) => ({\r\n              title: o.name,\r\n              value: o.name,\r\n              id: o.id,\r\n              children: [],\r\n            }))\r\n          )\r\n        ),\r\n      }\r\n    }\r\n\r\n    //set columns and dataSource for table\r\n    let columns_ = [\r\n      {\r\n        title: 'Индикатор',\r\n        dataIndex: 'Индикатор',\r\n        width: 250,\r\n        editable: true,\r\n        render: (text, record) => {\r\n          return isLink ? (\r\n            <a\r\n              onClick={() => {\r\n                setOpen(true)\r\n                setModalIndicator({\r\n                  name: record.key,\r\n                  id: record.id,\r\n                })\r\n              }}\r\n            >\r\n              {text}\r\n            </a>\r\n          ) : (\r\n            text\r\n          )\r\n        },\r\n        sorter: (a, b) => strcmp(a.Индикатор, b.Индикатор),\r\n        sortDirections: ['ascend'],\r\n      },\r\n      ...names.map((name) => {\r\n        const filtered =\r\n          filter[name] &&\r\n          filter[name].map((option_name) => ({\r\n            text: option_name,\r\n            value: option_name,\r\n          }))\r\n\r\n        return {\r\n          title: capitalizeFirstLetter(\r\n            name === 'Стратегия 2050' ? 'Сфера' : name\r\n          ),\r\n          dataIndex: name,\r\n          editable: true,\r\n          width: 250,\r\n          data: option_data[name],\r\n          filters: filtered,\r\n          type: 'select',\r\n          onFilter: (value, record) => record[name] === value,\r\n        }\r\n      }),\r\n    ]\r\n\r\n    return columns_\r\n  }, [\r\n    fetchedDictionaryData,\r\n    isLink,\r\n    isStrategy,\r\n    dictionary_names,\r\n    setModalIndicator,\r\n  ])\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const data_post = {\r\n        name: record['Индикатор'],\r\n        dictionaries: [isStrategy ? 229 : 227],\r\n      }\r\n      let ids = []\r\n      const row = await form.validateFields()\r\n\r\n      const arr = Object.keys(row).map((key) => ({\r\n        name: key,\r\n        value: row[key],\r\n      }))\r\n      const filtered_arr = arr.filter(\r\n        (item) => item.value !== undefined && item.name !== 'Индикатор'\r\n      )\r\n\r\n      filtered_arr.map((item) => {\r\n        if (item.name === 'Отрасль') {\r\n          const name = isStrategy ? 'Стратегия 2050' : 'Сфера'\r\n          const ob = fetchedDictionaryData.data.find((i) => i.name === name)\r\n          const obb = ob.options.find((i) =>\r\n            i.options.find((ii) => ii.name === item.value)\r\n          )\r\n          const o = obb.options.find((i) => i.name === item.value)\r\n          ids = [...ids, o.id]\r\n        } else {\r\n          const ob = fetchedDictionaryData.data.find(\r\n            (i) => i.name === item.name\r\n          )\r\n          const obb = ob.options.find((i) => i.name === item.value)\r\n          ids = [...ids, obb.id]\r\n        }\r\n      })\r\n\r\n      data_post.dictionaries = [...data_post.dictionaries, ...ids]\r\n      putAPI(`/sc-analytic-indicators/api/indicators/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI('/sc-analytic-indicators/api/indicators').then((res) => {\r\n            setFetchedIndicatorData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      form.resetFields()\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Modal open={open} setOpen={setOpen} className='AdminIndicator_style' />\r\n      <AdminTable\r\n        cols={columns}\r\n        data={dataSource}\r\n        loading={fetchedIndicatorData.loading}\r\n        url={'/sc-analytic-indicators/api/indicators'}\r\n        setFetchedData={setFetchedIndicatorData}\r\n        save={save}\r\n        isLink={isLink}\r\n      />\r\n    </>\r\n  )\r\n}\r\n","export const getObjectKeys = (obj) => Object.keys(obj).map((key) => key)\r\n\r\nexport const capitalizeFirstLetter = (string) => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1)\r\n}\r\n\r\nexport const strcmp = (a, b) => {\r\n  if (a === b) {\r\n    return 0\r\n  }\r\n\r\n  if (a > b) {\r\n    return 1\r\n  }\r\n\r\n  return -1\r\n}\r\n","import React from 'react'\r\nimport { Input } from 'antd'\r\n\r\nexport const AdminInput = ({\r\n  placeholder = 'Новый элемент',\r\n  defaultValue = '',\r\n  required = true,\r\n\r\n  inptRef,\r\n}) => {\r\n  return (\r\n    <Input\r\n      placeholder={placeholder}\r\n      defaultValue={defaultValue}\r\n      required={required}\r\n      allowClear\r\n      ref={inptRef}\r\n      className='AdminInput_style'\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Tabs } from 'antd'\r\n\r\nexport const AdminTabs = (props) => {\r\n  return (\r\n    <Tabs\r\n      defaultActiveKey='1'\r\n      tabPosition={props.position || 'left'}\r\n      className={props.classname || 'Indicators_tab_style'}\r\n    >\r\n      {props.children}\r\n    </Tabs>\r\n  )\r\n}\r\n","import React, { useState, useContext } from 'react'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Select } from '../common'\r\n\r\nimport { Alert, Form, InputNumber, Button, DatePicker, Space } from 'antd'\r\n\r\nexport const Controllers = ({ plan }) => {\r\n  const [state, setState] = useState({ date: null, value: null })\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n  const { modalIndicator, setFetchedIndicatorInfoData } = useContext(AppContext)\r\n\r\n  const [form] = Form.useForm()\r\n\r\n  // console.log(modalIndicator)\r\n  const handleSubmit = () => {\r\n    if ((state.date && state.value) || state.value === 0) {\r\n      const ob = {\r\n        date: state.date.month\r\n          ? `${state.date.year}-${state.date.month}-15`\r\n          : `${state.date.year}-12-31`,\r\n        'edit-comment': '',\r\n        fact: plan === 'Факт' ? state.value : null,\r\n        planned: plan !== 'Факт' ? state.value : null,\r\n      }\r\n\r\n      setState({ date: null, value: null })\r\n\r\n      postAPI(\r\n        `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`,\r\n        ob\r\n      ).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          15000\r\n        )\r\n\r\n        getAPI(\r\n          `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n        ).then(function (res) {\r\n          setFetchedIndicatorInfoData({\r\n            data: res.data,\r\n            loading: false,\r\n          })\r\n        })\r\n      })\r\n      // .catch((err) => {\r\n      //   console.log(err)\r\n      //   setStatus({\r\n      //     alert: true,\r\n      //     message: 'Ошибка',\r\n      //     description: 'Ошибка с записью данных на сервер',\r\n      //     type: 'error',\r\n      //   })\r\n\r\n      //   setTimeout(\r\n      //     () =>\r\n      //       setStatus({\r\n      //         alert: false,\r\n      //       }),\r\n      //     15000\r\n      //   )\r\n      // })\r\n\r\n      form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        15000\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Form form={form} className='Controllers_style_inner'>\r\n      <Form.Item className='Controllers_style_item'>\r\n        <Space>\r\n          <Form.Item name='datepicker_field' className='datepicker_field_style'>\r\n            <Space>\r\n              <DatePicker\r\n                onChange={(date, dateString) =>\r\n                  setState((state) => ({\r\n                    ...state,\r\n                    date: { year: dateString },\r\n                  }))\r\n                }\r\n                picker='year'\r\n                allowClear={true}\r\n                placeholder={'Год'}\r\n                locale={locale}\r\n              />\r\n              <Select\r\n                placeholder={'Месяц'}\r\n                data={month}\r\n                style={{ width: 170, background: '#fff', color: '#333' }}\r\n                callBack={(id) =>\r\n                  setState((state) => ({\r\n                    ...state,\r\n                    date: { ...state.date, month: id },\r\n                  }))\r\n                }\r\n              />\r\n            </Space>\r\n          </Form.Item>\r\n          <Form.Item name='number_field'>\r\n            <InputNumber\r\n              onChange={(value) => setState((state) => ({ ...state, value }))}\r\n              placeholder={plan}\r\n              min={0}\r\n            />\r\n          </Form.Item>\r\n          <Button type='primary' onClick={handleSubmit}>\r\n            +\r\n          </Button>\r\n        </Space>\r\n      </Form.Item>\r\n      {status.alert && (\r\n        <Alert\r\n          message={status.message}\r\n          description={status.description}\r\n          type={status.type}\r\n          closable\r\n          onClose={onCloseAlert}\r\n          style={{ margin: 15 }}\r\n        />\r\n      )}\r\n    </Form>\r\n  )\r\n}\r\n\r\nconst locale = {\r\n  lang: {\r\n    locale: 'ru',\r\n    placeholder: 'Выбрать дату',\r\n    today: 'Сегодня',\r\n    now: 'Сейчас',\r\n    ok: 'ок',\r\n    clear: 'очистить',\r\n    month: 'Месяц',\r\n    year: 'Год',\r\n    yearFormat: 'YYYY',\r\n    dateFormat: 'M/D/YYYY',\r\n    dayFormat: 'D',\r\n    dateTimeFormat: 'M/D/YYYY HH:mm:ss',\r\n    monthFormat: 'MMMM',\r\n    monthBeforeYear: false,\r\n  },\r\n  timePickerLocale: {\r\n    placeholder: 'Выбрать время',\r\n  },\r\n  dateFormat: 'YYYY-MM-DD',\r\n  dateTimeFormat: 'YYYY-MM-DD HH:mm:ss',\r\n  weekFormat: 'YYYY-wo',\r\n  monthFormat: 'YYYY-MM',\r\n}\r\n\r\nconst month = [\r\n  { id: '01', title: 'Январь', value: 'Январь', children: [] },\r\n  { id: '02', title: 'Февраль', value: 'Февраль', children: [] },\r\n  { id: '03', title: 'Март', value: 'Март', children: [] },\r\n  { id: '04', title: 'Апрель', value: 'Апрель', children: [] },\r\n  { id: '05', title: 'Май', value: 'Май', children: [] },\r\n  { id: '06', title: 'Июнь', value: 'Июнь', children: [] },\r\n  { id: '07', title: 'Июль', value: 'Июль', children: [] },\r\n  { id: '08', title: 'Август', value: 'Август', children: [] },\r\n  {\r\n    id: '09',\r\n    title: 'Сентябрь',\r\n    value: 'Сентябрь',\r\n    children: [],\r\n  },\r\n  {\r\n    id: '10',\r\n    title: 'Октябрь',\r\n    value: 'Октябрь',\r\n    children: [],\r\n  },\r\n  { id: '11', title: 'Ноябрь', value: 'Ноябрь', children: [] },\r\n  {\r\n    id: '12',\r\n    title: 'Декабрь',\r\n    value: 'Декабрь',\r\n    children: [],\r\n  },\r\n]\r\n","import React, { useMemo, useContext } from 'react'\r\nimport AdminTable from '../common/AdminTable'\r\nimport { AppContext } from '../../context/main'\r\nimport { putAPI, getAPI } from '../../utils/api'\r\n\r\nexport const IndicatorInfoTable = ({ plan, isStrategy }) => {\r\n  const {\r\n    fetchedIndicatorInfoData,\r\n    setFetchedIndicatorInfoData,\r\n    modalIndicator,\r\n  } = useContext(AppContext)\r\n\r\n  const columns = useMemo(() => {\r\n    return [\r\n      {\r\n        title: 'Дата',\r\n        dataIndex: 'year',\r\n        key: 'year',\r\n        render: (text) => {\r\n          return <a>{text}</a>\r\n        },\r\n      },\r\n      {\r\n        title: plan,\r\n        dataIndex: plan,\r\n        key: plan,\r\n        type: 'number',\r\n        editable: true,\r\n      },\r\n      {\r\n        title: 'Дата изменения',\r\n        dataIndex: 'date',\r\n        key: 'date',\r\n      },\r\n      {\r\n        title: 'Коментарий',\r\n        key: 'comment',\r\n        editable: true,\r\n        dataIndex: 'comment',\r\n      },\r\n    ]\r\n  }, [plan])\r\n\r\n  let dataSource = useMemo(() => {\r\n    let dataSource_ = []\r\n\r\n    if (!fetchedIndicatorInfoData.loading) {\r\n      dataSource_ = fetchedIndicatorInfoData.data.map((item, index) => {\r\n        const date = item['last-edit'].substr(0, item['last-edit'].indexOf('T'))\r\n        const year = item.date.substr(0, 7)\r\n        return plan === 'План'\r\n          ? item.planned || item.planned === 0\r\n            ? {\r\n                key: `${item['indicator-name']}-${item.id}`,\r\n                id: item.id,\r\n                year,\r\n                План: item.planned,\r\n                date,\r\n                comment: item['edit-comment'],\r\n              }\r\n            : null\r\n          : item.fact || item.fact === 0\r\n          ? {\r\n              key: `${item['indicator-name']}-${item.id}`,\r\n              id: item.id,\r\n              year,\r\n              Факт: item.fact,\r\n              date,\r\n              comment: item['edit-comment'],\r\n            }\r\n          : null\r\n      })\r\n    }\r\n\r\n    if (dataSource_.length > 0) {\r\n      dataSource_ = dataSource_.filter((ob) => ob !== undefined && ob !== null)\r\n    }\r\n\r\n    return dataSource_\r\n  }, [fetchedIndicatorInfoData, plan])\r\n\r\n  const edit = (record, form, setEditingKey) => {\r\n    form.setFieldsValue({\r\n      ...record,\r\n    })\r\n    setEditingKey(record.key)\r\n  }\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n      const ob = fetchedIndicatorInfoData.data.find(\r\n        (item) => item.id === record.id\r\n      )\r\n\r\n      const data_post = {\r\n        date: `${record.year}-01`,\r\n        'edit-comment': row.comment,\r\n        fact: row.Факт ? row.Факт : ob.fact,\r\n        planned: row.План ? row.План : ob.planned,\r\n      }\r\n\r\n      putAPI(`/sc-analytic-indicators/api/indexes/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI(\r\n            `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n          ).then(function (res) {\r\n            setFetchedIndicatorInfoData({\r\n              data: res.data,\r\n              loading: false,\r\n            })\r\n          })\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AdminTable\r\n      cols={columns}\r\n      data={dataSource}\r\n      loading={fetchedIndicatorInfoData.loading}\r\n      url={'/sc-analytic-indicators/api/indexes'}\r\n      setFetchedData={setFetchedIndicatorInfoData}\r\n      url2={`/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`}\r\n      save={save}\r\n      edit={edit}\r\n    />\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nimport { Controllers } from './Controllers'\r\nimport { IndicatorInfoTable as Table } from './IndicatorInfoTable'\r\n\r\nexport const IndicatorInfo = ({ plan, isStrategy }) => {\r\n  return (\r\n    <div className='Controllers_style'>\r\n      <Controllers plan={plan} />\r\n      <Table plan={plan} isStrategy={isStrategy} />\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect } from 'react'\r\nimport { Modal, Tabs } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI } from '../../utils/api'\r\n\r\nimport { AdminTabs } from './AdminTabs'\r\nimport { IndicatorInfo } from '../IndicatorInfo'\r\n\r\nexport const AdminModal = ({ open, setOpen }) => {\r\n  const { modalIndicator, setFetchedIndicatorInfoData } = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    if (modalIndicator) {\r\n      getAPI(\r\n        `/sc-analytic-indicators/api/indicators/${modalIndicator.id}/indexes`\r\n      ).then((res) =>\r\n        setFetchedIndicatorInfoData((state) => ({\r\n          ...state,\r\n          data: res.data,\r\n          loading: false,\r\n        }))\r\n      )\r\n    }\r\n  }, [modalIndicator])\r\n\r\n  const { TabPane } = Tabs\r\n\r\n  const handleCloseModal = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={modalIndicator && modalIndicator.name}\r\n      visible={open}\r\n      width={'auto'}\r\n      onOk={handleCloseModal}\r\n      onCancel={handleCloseModal}\r\n      className='AdminModal_style'\r\n    >\r\n      <AdminTabs position={'top'}>\r\n        <TabPane tab={'План'} key='1'>\r\n          <IndicatorInfo plan={'План'} />\r\n        </TabPane>\r\n        <TabPane tab={'Факт'} key='2'>\r\n          <IndicatorInfo plan={'Факт'} />\r\n        </TabPane>\r\n      </AdminTabs>\r\n    </Modal>\r\n  )\r\n}\r\n","import React, { useRef, useContext } from 'react'\r\nimport { Input } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const AdminSearch = ({ placeholder }) => {\r\n  const inptRef = useRef()\r\n  const { setSearchText } = useContext(AppContext)\r\n\r\n  const handleSearch = () => setSearchText(inptRef.current.input.value)\r\n\r\n  return (\r\n    <Input\r\n      placeholder={placeholder ? placeholder : 'Поиск справочника'}\r\n      defaultValue=''\r\n      ref={inptRef}\r\n      allowClear\r\n      onChange={handleSearch}\r\n      /* style={style}*/\r\n      className='AdminSearch_style'\r\n    />\r\n  )\r\n}\r\n","import React, { useContext } from 'react'\r\nimport { TreeSelect } from 'antd'\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const AdminSelect = ({\r\n  data,\r\n  placeholder = 'Выбрать справочник',\r\n  style = { margin: 5, marginLeft: 0, marginRight: 8 },\r\n  callBack,\r\n  defaultValue,\r\n}) => {\r\n  const {\r\n    setSelectedDictionaryName,\r\n    setSelectedIndustry,\r\n    dictionary_names,\r\n  } = useContext(AppContext)\r\n\r\n  const handleChangeDictionaryName = (value) => setSelectedDictionaryName(value)\r\n  const handleChangeOptionName = (value) => {\r\n    const selected_value = data.find((item) => item.value === value)\r\n    setSelectedIndustry(value)\r\n    callBack && selected_value && callBack(selected_value.id)\r\n  }\r\n\r\n  const setTreeData = (data) =>\r\n    data.map((name) => ({\r\n      title: name,\r\n      value: name,\r\n      children: [],\r\n    }))\r\n\r\n  const renderSelect = () =>\r\n    data ? (\r\n      <TreeSelect\r\n        style={style}\r\n        allowClear\r\n        placeholder={placeholder}\r\n        treeData={data}\r\n        onChange={handleChangeOptionName}\r\n        className='AdminSelect_style'\r\n        defaultValue={defaultValue}\r\n        virtual={false}\r\n      />\r\n    ) : (\r\n      <TreeSelect\r\n        placeholder={placeholder}\r\n        onChange={handleChangeDictionaryName}\r\n        style={style}\r\n        treeData={setTreeData(dictionary_names)}\r\n        className='AdminSelect_style'\r\n        virtual={false}\r\n      />\r\n    )\r\n\r\n  return <>{renderSelect()}</>\r\n}\r\n","import React, { useContext, useEffect, useMemo, useState } from 'react'\r\nimport AdminTable from '../common/AdminTable'\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI, putAPI } from '../../utils/api'\r\n\r\nexport const DictionaryTable = () => {\r\n  const {\r\n    selectedDictionaryName,\r\n    fetchedDictionaryData,\r\n    setFetchedDictionaryData,\r\n  } = useContext(AppContext)\r\n  const [data, setData] = useState([])\r\n\r\n  const columns = useMemo(() => {\r\n    return selectedDictionaryName\r\n      ? [\r\n          {\r\n            title: 'Наименование',\r\n            dataIndex: selectedDictionaryName,\r\n            editable: true,\r\n            width: '90%',\r\n          },\r\n        ]\r\n      : [\r\n          {\r\n            title: 'Наименование',\r\n            dataIndex: 'All',\r\n            width: '90%',\r\n            padding: '10px',\r\n          },\r\n        ]\r\n  }, [selectedDictionaryName])\r\n\r\n  useEffect(() => {\r\n    let data_ = []\r\n    if (!fetchedDictionaryData.loading) {\r\n      const arr = fetchedDictionaryData.data.filter(\r\n        (item) => item.name !== 'Тип'\r\n      )\r\n\r\n      const obb = arr.find((item) => item.name === selectedDictionaryName)\r\n\r\n      data_ = selectedDictionaryName\r\n        ? obb.options.map((item) =>\r\n            item.options.length > 0\r\n              ? {\r\n                  key: item.name,\r\n                  id: item.id,\r\n                  tag: item.tag,\r\n                  'parent-id': obb.id,\r\n                  [selectedDictionaryName]: item.name,\r\n                  children: item.options.map((ob) => ({\r\n                    key: ob.name,\r\n                    [selectedDictionaryName]: ob.name,\r\n                    'parent-id': item.id,\r\n                    tag: item.tag,\r\n                    id: ob.id,\r\n                  })),\r\n                }\r\n              : {\r\n                  key: item.name,\r\n                  id: item.id,\r\n                  tag: item.tag,\r\n                  'parent-id': obb.id,\r\n                  [selectedDictionaryName]: item.name,\r\n                }\r\n          )\r\n        : [].concat(\r\n            ...arr.map((item) =>\r\n              item.name === 'Сфера' ||\r\n              selectedDictionaryName === 'Стратегия 2050'\r\n                ? item.options.map((op) => ({\r\n                    key: op.name,\r\n                    All: op.name,\r\n                    children: op.options.map((ob) => ({\r\n                      key: ob.name,\r\n                      All: ob.name,\r\n                    })),\r\n                  }))\r\n                : {\r\n                    key: item.name,\r\n                    All: item.name,\r\n                    children: item.options.map((ob) => ({\r\n                      key: ob.name,\r\n                      All: ob.name,\r\n                    })),\r\n                  }\r\n            )\r\n          )\r\n    }\r\n\r\n    setData(data_)\r\n  }, [fetchedDictionaryData, selectedDictionaryName])\r\n\r\n  const save = async (record, form, setEditingKey) => {\r\n    try {\r\n      const row = await form.validateFields()\r\n\r\n      const data_post = {\r\n        name: row[record.tag],\r\n        tag: record.tag,\r\n      }\r\n\r\n      putAPI(`/sc-analytic-indicators/api/dictionaries/${record.id}`, data_post)\r\n        .then((res) =>\r\n          getAPI(`/sc-analytic-indicators/api/dictionaries`).then((res) =>\r\n            setFetchedDictionaryData({ loading: false, data: res.data })\r\n          )\r\n        )\r\n        .catch((err) => console.log(err))\r\n\r\n      setEditingKey('')\r\n    } catch (errInfo) {\r\n      console.log('Validate Failed:', errInfo)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <AdminTable\r\n      cols={columns}\r\n      data={data}\r\n      loading={fetchedDictionaryData.loading}\r\n      url={'/sc-analytic-indicators/api/dictionaries'}\r\n      setFetchedData={setFetchedDictionaryData}\r\n      save={save}\r\n    />\r\n  )\r\n}\r\n","import React, { useState, useRef, useContext } from 'react'\r\nimport { Alert, Form } from 'antd'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { Button, Input, Select } from '../common'\r\n\r\nimport { AppContext } from '../../context/main'\r\n\r\nexport const Controllers = ({ ant_form }) => {\r\n  const inptRef = useRef()\r\n  const inptRef2 = useRef()\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n\r\n  const {\r\n    selectedIndustry,\r\n    selectedDictionaryName,\r\n    fetchedDictionaryData,\r\n    setFetchedDictionaryData,\r\n  } = useContext(AppContext)\r\n\r\n  let obb\r\n  if (!fetchedDictionaryData.loading) {\r\n    obb = fetchedDictionaryData.data.find(\r\n      (item) => item.name === selectedDictionaryName\r\n    )\r\n  }\r\n\r\n  const handleAddDictionary = () => {\r\n    if (inptRef.current.input.value) {\r\n      const name = inptRef.current.input.value\r\n      const data = {\r\n        'parent-id': obb.id,\r\n        tag: selectedDictionaryName,\r\n        name,\r\n        options: [],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/dictionaries', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/dictionaries')\r\n          .then((res) =>\r\n            setFetchedDictionaryData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          )\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n\r\n      ant_form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите необходимое название для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleAddDictionaryChild = () => {\r\n    if (selectedIndustry && inptRef2.current.input.value) {\r\n      const name = inptRef2.current.input.value\r\n\r\n      const ob = obb.options.find((item) => item.name === selectedIndustry)\r\n      const data = {\r\n        'parent-id': ob.id,\r\n        tag: 'Отрасль',\r\n        name,\r\n        options: [],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/dictionaries', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/dictionaries')\r\n          .then((res) =>\r\n            setFetchedDictionaryData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          )\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n      ant_form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  let names = []\r\n  if (obb) {\r\n    names = obb.options.map((item) => ({\r\n      id: item.id,\r\n      title: item.name,\r\n      value: item.name,\r\n      children: [],\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {selectedDictionaryName && (\r\n        <Form.Item name='dictionary-controllers Controllers_style'>\r\n          <div className='form_add_sphere Controllers_style_inner'>\r\n            <Input\r\n              inptRef={inptRef}\r\n              required={true}\r\n              placeholder={\r\n                selectedDictionaryName === 'Сфера' ||\r\n                selectedDictionaryName === 'Стратегия 2050'\r\n                  ? 'Добавить новую сферу'\r\n                  : 'Добавить новый элемент'\r\n              }\r\n            />\r\n            <Button handleAdd={handleAddDictionary} text1={'Добавить сферу'} />\r\n          </div>\r\n        </Form.Item>\r\n      )}\r\n      {selectedDictionaryName === 'Сфера' ||\r\n      selectedDictionaryName === 'Стратегия 2050' ? (\r\n        <Form.Item className='form_add_sphere_wrap'>\r\n          <Select data={names} placeholder='Сделайте выбор' />\r\n          <div className='form_add_sphere'>\r\n            <Form.Item name='dictionary-child-controllers'>\r\n              <Input\r\n                inptRef={inptRef2}\r\n                placeholder={'Добавить новую отрасль'}\r\n                required={true}\r\n              />\r\n            </Form.Item>\r\n            <Button\r\n              handleAdd={handleAddDictionaryChild}\r\n              text2={'Добавить отрасль'}\r\n            />\r\n          </div>\r\n        </Form.Item>\r\n      ) : null}\r\n      {status.alert && (\r\n        <Alert\r\n          message={status.message}\r\n          description={status.description}\r\n          type={status.type}\r\n          closable\r\n          onClose={onCloseAlert}\r\n          style={{ margin: 15 }}\r\n        />\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\nimport { Form } from 'antd'\r\n\r\nimport { getAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Select, Search } from '../common'\r\nimport { DictionaryTable as Table } from './DictionaryTable'\r\nimport { Controllers } from './Controllers'\r\n\r\nexport const Dictionary = () => {\r\n  const [form] = Form.useForm()\r\n\r\n  const { setFetchedDictionaryData } = useContext(AppContext)\r\n\r\n  useEffect(() => {\r\n    getAPI('/sc-analytic-indicators/api/dictionaries').then((res) => {\r\n      setFetchedDictionaryData({\r\n        loading: false,\r\n        data: res.data,\r\n      })\r\n    })\r\n  }, [])\r\n\r\n  return (\r\n    <Form form={form}>\r\n      <Form.Item\r\n        style={{\r\n          display: 'flex',\r\n          justifyContent: 'space-between',\r\n          width: '60%',\r\n        }}\r\n      >\r\n        <div className='first_stage_filter'>\r\n          <Select />\r\n        </div>\r\n      </Form.Item>\r\n      <Controllers ant_form={form} />\r\n      <Form.Item style={{ width: '60%', marginBottom: 10 }}>\r\n        <Search style={{ width: '40%', margin: '5 0', marginRight: 8 }} />\r\n      </Form.Item>\r\n      <Form.Item>\r\n        <Table />\r\n      </Form.Item>\r\n    </Form>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Dictionary } from './components/Dictionary'\r\n\r\nexport const CustomDictionary = () => {\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <Dictionary />\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React, { useRef, useState, useContext, useMemo } from 'react'\r\nimport { Alert, Form } from 'antd'\r\n\r\nimport { getAPI, postAPI } from '../../utils/api'\r\nimport { AppContext } from '../../context/main'\r\n\r\nimport { Button, Input, Select } from '../common'\r\n\r\nexport const Controllers = ({ isStrategy }) => {\r\n  const [indicator, setIndicator] = useState([])\r\n  const {\r\n    fetchedDictionaryData,\r\n    setFetchedIndicatorData,\r\n    setFetchedIndicatorStrategyData,\r\n  } = useContext(AppContext)\r\n\r\n  const inputRef = useRef()\r\n  const [form] = Form.useForm()\r\n\r\n  const [status, setStatus] = useState({ alert: false })\r\n  const onCloseAlert = () => setStatus({ alert: false })\r\n\r\n  const handleSubmit = () => {\r\n    if (inputRef.current.input.value) {\r\n      const typeId = isStrategy ? 229 : 227\r\n      const data = {\r\n        name: inputRef.current.input.value,\r\n        dictionaries: [...indicator, typeId],\r\n      }\r\n\r\n      postAPI('/sc-analytic-indicators/api/indicators', data).then((res) => {\r\n        setStatus({\r\n          alert: true,\r\n          message: 'Успешно',\r\n          description: 'Данные успешно отправлены на сервер',\r\n          type: 'success',\r\n        })\r\n\r\n        setTimeout(\r\n          () =>\r\n            setStatus({\r\n              alert: false,\r\n            }),\r\n          3000\r\n        )\r\n\r\n        getAPI('/sc-analytic-indicators/api/indicators')\r\n          .then((res) => {\r\n            setFetchedIndicatorData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n            setFetchedIndicatorStrategyData({\r\n              loading: false,\r\n              data: res.data,\r\n            })\r\n          })\r\n          .catch((err) => {\r\n            setStatus({\r\n              alert: true,\r\n              message: 'Ошибка',\r\n              description: 'Ошибка с записью данных на сервер',\r\n              type: 'error',\r\n            })\r\n\r\n            setTimeout(\r\n              () =>\r\n                setStatus({\r\n                  alert: false,\r\n                }),\r\n              3000\r\n            )\r\n          })\r\n      })\r\n\r\n      form.resetFields()\r\n    } else {\r\n      setStatus({\r\n        alert: true,\r\n        message: 'Ошибка',\r\n        description: 'Введите все необходимые даныне для отправки на сервер',\r\n        type: 'error',\r\n      })\r\n\r\n      setTimeout(\r\n        () =>\r\n          setStatus({\r\n            alert: false,\r\n          }),\r\n        3000\r\n      )\r\n    }\r\n  }\r\n\r\n  const handleIndicator = (id) => {\r\n    setIndicator((state) => [...state, id])\r\n  }\r\n\r\n  const renderSelect = useMemo(() => {\r\n    let selects = []\r\n    let industry = []\r\n    if (!fetchedDictionaryData.loading) {\r\n      industry = fetchedDictionaryData.data\r\n        .find((item) =>\r\n          isStrategy ? item.name === 'Стратегия 2050' : item.name === 'Сфера'\r\n        )\r\n        .options.map((option) =>\r\n          option.options.map((ob) => ({ name: ob.name, id: ob.id }))\r\n        )\r\n\r\n      const arr = fetchedDictionaryData.data.filter(\r\n        (item) => item.name !== 'Тип'\r\n      )\r\n\r\n      const ob = arr.filter((item) =>\r\n        !isStrategy ? item.name !== 'Стратегия 2050' : item.name !== 'Сфера'\r\n      )\r\n\r\n      selects = ob.map((item, index) => {\r\n        const name = isStrategy ? 'Стратегия 2050' : 'Сфера'\r\n        const data = item.options.map((option) =>\r\n          item.name === name\r\n            ? {\r\n                id: option.id,\r\n                title: option.name,\r\n                value: option.name,\r\n                children: [],\r\n              }\r\n            : {\r\n                id: option.id,\r\n                title: option.name,\r\n                value: option.name,\r\n                children: option.options.map((ob) => {\r\n                  return {\r\n                    id: ob.id,\r\n                    title: ob.name,\r\n                    value: ob.name,\r\n                    children: [],\r\n                  }\r\n                }),\r\n              }\r\n        )\r\n\r\n        return (\r\n          <Select\r\n            key={index}\r\n            placeholder={item.name === 'Стратегия 2050' ? 'Сфера' : item.name}\r\n            data={data}\r\n            callBack={(id) => handleIndicator(id)}\r\n          />\r\n        )\r\n      })\r\n    }\r\n\r\n    selects.push(\r\n      <Select\r\n        key={45}\r\n        placeholder={'Отрасль'}\r\n        data={[].concat(...industry).map((item) => ({\r\n          id: item.id,\r\n          title: item.name,\r\n          value: item.name,\r\n          children: [],\r\n        }))}\r\n        callBack={(id) => handleIndicator(id)}\r\n      />\r\n    )\r\n\r\n    return selects.map((select) => select)\r\n  }, [fetchedDictionaryData, isStrategy])\r\n\r\n  return (\r\n    <div className={'form_indicators'}>\r\n      {!fetchedDictionaryData.loading && (\r\n        <Form form={form}>\r\n          <Form.Item style={{ width: '60%' }}>\r\n            <Form.Item name='input'>\r\n              <Input\r\n                placeholder={'Введите название индикатора'}\r\n                inptRef={inputRef}\r\n                style={{\r\n                  margin: 20,\r\n                  marginLeft: 0,\r\n                  marginTop: 0,\r\n                  minWidth: 250,\r\n                  width: 250,\r\n                }}\r\n              />\r\n            </Form.Item>\r\n            {renderSelect}\r\n            <Button\r\n              type='primary'\r\n              handleAdd={handleSubmit}\r\n              text3={'Добавить индикатор'}\r\n            />\r\n          </Form.Item>\r\n          {status.alert && (\r\n            <Alert\r\n              message={status.message}\r\n              description={status.description}\r\n              type={status.type}\r\n              closable\r\n              onClose={onCloseAlert}\r\n              style={{ margin: 15 }}\r\n            />\r\n          )}\r\n        </Form>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useEffect, useContext } from 'react'\r\n\r\nimport { AppContext } from '../../context/main'\r\nimport { getAPI } from '../../utils/api'\r\n\r\nimport { Controllers } from './Controllers'\r\nimport { Indicator, AdminTabs, Search } from '../common'\r\nimport { Tabs } from 'antd'\r\n\r\nexport const Indicators = () => {\r\n  const { TabPane } = Tabs\r\n\r\n  const { fetchedDictionaryData, setFetchedDictionaryData } = useContext(\r\n    AppContext\r\n  )\r\n\r\n  useEffect(() => {\r\n    if (!fetchedDictionaryData.data) {\r\n      getAPI('/sc-analytic-indicators/api/dictionaries').then((res) => {\r\n        setFetchedDictionaryData({\r\n          loading: false,\r\n          data: res.data,\r\n        })\r\n      })\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <AdminTabs position={'top'}>\r\n      <TabPane tab='Панель администратора' key='1'>\r\n        <Controllers />\r\n        <div style={{ width: '60%', margin: '20px 0' }}>\r\n          <Search placeholder={'Поиск по индикаторам'} />\r\n        </div>\r\n        <Indicator />\r\n      </TabPane>\r\n      <TabPane tab='Индикатор стратегии' key='2'>\r\n        <Controllers isStrategy={true} />\r\n        <div style={{ width: '60%', margin: '20px 0' }}>\r\n          <Search placeholder={'Поиск по индикаторам'} />\r\n        </div>\r\n        <Indicator isStrategy={true} />\r\n      </TabPane>\r\n    </AdminTabs>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Indicators } from './components/Indicators'\r\n\r\nexport const CustomIndicator = () => {\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <Indicators />\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { AppContextProvider } from './context/main'\r\n\r\nimport { Tabs } from 'antd'\r\nimport { Card, Indicator, AdminTabs, Search } from './components/common'\r\n\r\nexport const CustomIndicatorInfo = () => {\r\n  const { TabPane } = Tabs\r\n\r\n  return (\r\n    <>\r\n      <AppContextProvider>\r\n        <AdminTabs position={'top'}>\r\n          <TabPane tab='Панель администратора' key='1'>\r\n            <div style={{ width: '60%', margin: 20 }}>\r\n              <Search placeholder={'Поиск по показателям индикаторов'} />\r\n            </div>\r\n            <Card>\r\n              <Indicator isLink={true} />\r\n            </Card>\r\n          </TabPane>\r\n          <TabPane tab='Индикатор стратегии' key='2'>\r\n            <div style={{ width: '60%', margin: 20 }}>\r\n              <Search placeholder={'Поиск по показателям индикаторов'} />\r\n            </div>\r\n            <Card>\r\n              <Indicator isStrategy={true} isLink={true} />\r\n            </Card>\r\n          </TabPane>\r\n        </AdminTabs>\r\n      </AppContextProvider>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Switch, Route, Redirect } from 'react-router-dom'\r\nimport { ProtectedRoute } from './components/ProtectedRoute'\r\nimport { useSelector } from 'react-redux'\r\n\r\n//components\r\n// import { InfoPanel, Leaders } from './modules/CIP'\r\nimport { SignInForm } from './components/form/SignInForm'\r\nimport Users from './modules/Users/Users'\r\nimport Roles from './modules/Roles/Roles'\r\nimport Roadmap from './modules/Roadmap'\r\nimport Heads from './modules/Heads/Heads'\r\nimport { Dictionary, Indicator, IndicatorInfo } from './modules/CMD'\r\n\r\nimport Home from './components/Home'\r\n\r\nconst Routes = () => {\r\n  // const { authorities } = useSelector((state) => state.admin)\r\n\r\n  return (\r\n    <Switch>\r\n      <Redirect exact from='/' to='/Роли' />\r\n      <ProtectedRoute exact path='/Роли' component={Roles} />\r\n      <ProtectedRoute exact path='/Пользователи' component={Users} />\r\n      <ProtectedRoute exact path='/Ремонт дорог' component={Roadmap} />\r\n      <ProtectedRoute exact path='/Руководители' component={Heads} />\r\n      <Route\r\n        path='/Справочники'\r\n        component={() => (\r\n          <Home>\r\n            <Dictionary />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Аналитические индикаторы'\r\n        component={() => (\r\n          <Home>\r\n            <Indicator />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route\r\n        path='/Показатели индикаторов'\r\n        component={() => (\r\n          <Home>\r\n            <IndicatorInfo />\r\n          </Home>\r\n        )}\r\n      />\r\n      <Route exact path='/авторизация' component={SignInForm} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nexport default React.memo(Routes)\r\n","import React, { useEffect } from 'react'\r\nimport Routes from './Routes'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\n\r\nimport { getRoles, getModules } from './features/roles/rolesSlice'\r\nimport {\r\n  setAuth,\r\n  getOrganisationList,\r\n  getAuthorities,\r\n} from './features/admin/adminSlice'\r\n\r\n//styles\r\nimport 'antd/dist/antd.css'\r\nimport './App.css'\r\n\r\nfunction App() {\r\n  const { auth, config } = useSelector((state) => state.admin)\r\n  const { roles, modules } = useSelector((state) => state.roles)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect(() => {\r\n    let user = JSON.parse(localStorage.getItem('user'))\r\n    if (user && auth.status === 'idle') {\r\n      dispatch(setAuth({ auth: user.auth, config: user.config }))\r\n    }\r\n  }, [auth])\r\n\r\n  useEffect(() => {\r\n    if (roles.status === 'success' && auth.status === 'success') {\r\n      roles.data.forEach((role) => {\r\n        if (auth.data.roles.includes(role.repr)) {\r\n          dispatch(getAuthorities({ config, id: role.id, repr: role.repr }))\r\n        }\r\n      })\r\n    }\r\n  }, [auth, roles, config])\r\n\r\n  useEffect(() => {\r\n    if (auth.status === 'success') {\r\n      dispatch(getOrganisationList(config))\r\n    }\r\n  }, [config, auth])\r\n\r\n  useEffect(() => {\r\n    //TASK:request all available roles and modules for form options\r\n    if (auth.status === 'success') {\r\n      if (roles.status === 'idle') {\r\n        dispatch(getRoles({ auth: auth.data, config }))\r\n      }\r\n      if (modules.status === 'idle') {\r\n        dispatch(getModules(config))\r\n      }\r\n    }\r\n  }, [auth, roles, modules, config])\r\n\r\n  return <Routes />\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport { configureStore } from '@reduxjs/toolkit'\r\nimport { Provider } from 'react-redux'\r\nimport { BrowserRouter as Router } from 'react-router-dom'\r\n\r\nimport adminReducer from './features/admin/adminSlice'\r\nimport roadmapReducer from './features/roadmap/roadmapSlice'\r\nimport rolesReducer from './features/roles/rolesSlice'\r\nimport usersReducer from './features/users/usersSlice'\r\nimport headsReducer from './features/heads/headsSlice'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    roadmap: roadmapReducer,\r\n    admin: adminReducer,\r\n    roles: rolesReducer,\r\n    users: usersReducer,\r\n    heads: headsReducer,\r\n  },\r\n})\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/* <React.StrictMode> */}\r\n    <Router basename='/admin'>\r\n      <App />\r\n    </Router>\r\n    {/* </React.StrictMode> */}\r\n  </Provider>,\r\n  document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}